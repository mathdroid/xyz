{
  "db": [
    {
      "meta": {
        "exported_on": 1485684167624,
        "version": "009"
      },
      "data": {
        "posts": [
          {
            "id": 1,
            "uuid": "0aba5b46-82f8-4202-8785-98ad6eba398f",
            "title": "Welcome to Ghost",
            "slug": "welcome-to-ghost",
            "markdown": "You're live! Nice. We've put together a little post to introduce you to the Ghost editor and get you started. You can manage your content by signing in to the admin area at `<your blog URL>/ghost/`. When you arrive, you can select this post from a list on the left and see a preview of it on the right. Click the little pencil icon at the top of the preview to edit this post and read the next section!\n\n## Getting Started\n\nGhost uses something called Markdown for writing. Essentially, it's a shorthand way to manage your post formatting as you write!\n\nWriting in Markdown is really easy. In the left hand panel of Ghost, you simply write as you normally would. Where appropriate, you can use *shortcuts* to **style** your content. For example, a list:\n\n* Item number one\n* Item number two\n    * A nested item\n* A final item\n\nor with numbers!\n\n1. Remember to buy some milk\n2. Drink the milk\n3. Tweet that I remembered to buy the milk, and drank it\n\n### Links\n\nWant to link to a source? No problem. If you paste in a URL, like http://ghost.org - it'll automatically be linked up. But if you want to customise your anchor text, you can do that too! Here's a link to [the Ghost website](http://ghost.org). Neat.\n\n### What about Images?\n\nImages work too! Already know the URL of the image you want to include in your article? Simply paste it in like this to make it show up:\n\n![The Ghost Logo](https://ghost.org/images/ghost.png)\n\nNot sure which image you want to use yet? That's ok too. Leave yourself a descriptive placeholder and keep writing. Come back later and drag and drop the image in to upload:\n\n![A bowl of bananas]\n\n\n### Quoting\n\nSometimes a link isn't enough, you want to quote someone on what they've said. Perhaps you've started using a new blogging platform and feel the sudden urge to share their slogan? A quote might be just the way to do it!\n\n> Ghost - Just a blogging platform\n\n### Working with Code\n\nGot a streak of geek? We've got you covered there, too. You can write inline `<code>` blocks really easily with back ticks. Want to show off something more comprehensive? 4 spaces of indentation gets you there.\n\n    .awesome-thing {\n        display: block;\n        width: 100%;\n    }\n\n### Ready for a Break? \n\nThrow 3 or more dashes down on any new line and you've got yourself a fancy new divider. Aw yeah.\n\n---\n\n### Advanced Usage\n\nThere's one fantastic secret about Markdown. If you want, you can write plain old HTML and it'll still work! Very flexible.\n\n<input type=\"text\" placeholder=\"I'm an input field!\" />\n\nThat should be enough to get you started. Have fun - and let us know what you think :)",
            "mobiledoc": null,
            "html": "<p>You're live! Nice. We've put together a little post to introduce you to the Ghost editor and get you started. You can manage your content by signing in to the admin area at <code>&lt;your blog URL&gt;/ghost/</code>. When you arrive, you can select this post from a list on the left and see a preview of it on the right. Click the little pencil icon at the top of the preview to edit this post and read the next section!</p>\n\n<h2 id=\"gettingstarted\">Getting Started</h2>\n\n<p>Ghost uses something called Markdown for writing. Essentially, it's a shorthand way to manage your post formatting as you write!</p>\n\n<p>Writing in Markdown is really easy. In the left hand panel of Ghost, you simply write as you normally would. Where appropriate, you can use <em>shortcuts</em> to <strong>style</strong> your content. For example, a list:</p>\n\n<ul>\n<li>Item number one</li>\n<li>Item number two\n<ul><li>A nested item</li></ul></li>\n<li>A final item</li>\n</ul>\n\n<p>or with numbers!</p>\n\n<ol>\n<li>Remember to buy some milk  </li>\n<li>Drink the milk  </li>\n<li>Tweet that I remembered to buy the milk, and drank it</li>\n</ol>\n\n<h3 id=\"links\">Links</h3>\n\n<p>Want to link to a source? No problem. If you paste in a URL, like <a href=\"http://ghost.org\">http://ghost.org</a> - it'll automatically be linked up. But if you want to customise your anchor text, you can do that too! Here's a link to <a href=\"http://ghost.org\">the Ghost website</a>. Neat.</p>\n\n<h3 id=\"whataboutimages\">What about Images?</h3>\n\n<p>Images work too! Already know the URL of the image you want to include in your article? Simply paste it in like this to make it show up:</p>\n\n<p><img src=\"https://ghost.org/images/ghost.png\" alt=\"The Ghost Logo\" /></p>\n\n<p>Not sure which image you want to use yet? That's ok too. Leave yourself a descriptive placeholder and keep writing. Come back later and drag and drop the image in to upload:</p>\n\n<h3 id=\"quoting\">Quoting</h3>\n\n<p>Sometimes a link isn't enough, you want to quote someone on what they've said. Perhaps you've started using a new blogging platform and feel the sudden urge to share their slogan? A quote might be just the way to do it!</p>\n\n<blockquote>\n  <p>Ghost - Just a blogging platform</p>\n</blockquote>\n\n<h3 id=\"workingwithcode\">Working with Code</h3>\n\n<p>Got a streak of geek? We've got you covered there, too. You can write inline <code>&lt;code&gt;</code> blocks really easily with back ticks. Want to show off something more comprehensive? 4 spaces of indentation gets you there.</p>\n\n<pre><code>.awesome-thing {\n    display: block;\n    width: 100%;\n}\n</code></pre>\n\n<h3 id=\"readyforabreak\">Ready for a Break?</h3>\n\n<p>Throw 3 or more dashes down on any new line and you've got yourself a fancy new divider. Aw yeah.</p>\n\n<hr />\n\n<h3 id=\"advancedusage\">Advanced Usage</h3>\n\n<p>There's one fantastic secret about Markdown. If you want, you can write plain old HTML and it'll still work! Very flexible.</p>\n\n<p><input type=\"text\" placeholder=\"I'm an input field!\" /></p>\n\n<p>That should be enough to get you started. Have fun - and let us know what you think :)</p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2016-11-08 10:08:43",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:43",
            "updated_by": 1,
            "published_at": "2016-11-08 10:08:43",
            "published_by": 1
          },
          {
            "id": 2,
            "uuid": "4a644b8a-5dc6-47e0-b8a4-f3d829f7b6ac",
            "title": "HELLO WORLD. PART TWO.",
            "slug": "hello-world-part-two",
            "markdown": "I recently (`months ago LEL`) moved my hosting to DigitalOcean (courtesy of Github Student Developer Pack, of course.) from the infamous local hosting, Qwords.\n\nMy old blog that runs on Wordpress that was hosted there was destroyed, but not before I made the backup. I was planning to move it to my NY DigitalOcean server, along with my Laravel main web page.\n\nTurned out it's **so much** hassle.\n\nSetting up the sub domain to point to my Wordpress directory doesn't stop my Laravel app to constantly point my assets to its `/public` folder.\n\nSo I took it down. Can't stand the ugly.\n\nFor reasons later discussed in another subjective post, I recently found this awesome nodejs based open source blogging platform, called **Ghost**.\n\nAfter tinkering with it for half a day, I finally got it working on my LAMP stack server.\n\nIt turned out to be easy.\n\nAs ghost is a nodejs app that will listen on http://localhost:2368, all I have to do is just install its dependencies and run it *FOREVER* using npm-module `pm2`.\n\nAfter making sure it runs nicely, all I have to do is create another `<VirtualHost>` file for `apache2` that listens to the `ServerName blog.muhammadmustadi.com` and then uses `apache2`'s mods `mod_proxy` and `mod_proxy_http` that redirects to `http://localhost:2368/`. I also created an extra CNAME record in my DNS settings for the name blog.muhammadmmustadi.com.\n\nThen *Voila*. Welcome to my brand new Ghost.\n\nI can help with your installations, if you contact me. I know you have the resources to reach me.\n\nCiao.\n\n`TODO: GET A NEW CATCHPHRASE`",
            "mobiledoc": null,
            "html": "<p>I recently (<code>months ago LEL</code>) moved my hosting to DigitalOcean (courtesy of Github Student Developer Pack, of course.) from the infamous local hosting, Qwords.</p>\n\n<p>My old blog that runs on Wordpress that was hosted there was destroyed, but not before I made the backup. I was planning to move it to my NY DigitalOcean server, along with my Laravel main web page.</p>\n\n<p>Turned out it's <strong>so much</strong> hassle.</p>\n\n<p>Setting up the sub domain to point to my Wordpress directory doesn't stop my Laravel app to constantly point my assets to its <code>/public</code> folder.</p>\n\n<p>So I took it down. Can't stand the ugly.</p>\n\n<p>For reasons later discussed in another subjective post, I recently found this awesome nodejs based open source blogging platform, called <strong>Ghost</strong>.</p>\n\n<p>After tinkering with it for half a day, I finally got it working on my LAMP stack server.</p>\n\n<p>It turned out to be easy.</p>\n\n<p>As ghost is a nodejs app that will listen on <a href=\"http://localhost:2368\">http://localhost:2368</a>, all I have to do is just install its dependencies and run it <em>FOREVER</em> using npm-module <code>pm2</code>.</p>\n\n<p>After making sure it runs nicely, all I have to do is create another <code>&lt;VirtualHost&gt;</code> file for <code>apache2</code> that listens to the <code>ServerName blog.muhammadmustadi.com</code> and then uses <code>apache2</code>'s mods <code>mod_proxy</code> and <code>mod_proxy_http</code> that redirects to <code>http://localhost:2368/</code>. I also created an extra CNAME record in my DNS settings for the name blog.muhammadmmustadi.com.</p>\n\n<p>Then <em>Voila</em>. Welcome to my brand new Ghost.</p>\n\n<p>I can help with your installations, if you contact me. I know you have the resources to reach me.</p>\n\n<p>Ciao.</p>\n\n<p><code>TODO: GET A NEW CATCHPHRASE</code></p>",
            "amp": null,
            "image": "/content/images/2015/01/large_4762384399.jpg",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": "",
            "meta_description": "",
            "author_id": 1,
            "created_at": "2015-01-25 16:31:46",
            "created_by": 1,
            "updated_at": "2015-02-11 08:50:27",
            "updated_by": 1,
            "published_at": "2015-01-25 17:02:54",
            "published_by": 1
          },
          {
            "id": 3,
            "uuid": "7f493176-4530-4eb2-a821-b9da5771f3a6",
            "title": "I need to better my life (Personal Log 20150126)",
            "slug": "untitled",
            "markdown": "**Update 20160811**\n\n> I haven't been able to fulfill this oath. Will keep trying.\n\nToday I had an epiphany.\n\nI need to better my life.\n\nI am taking an oath to always keep my own words. To be responsible. To stop playing around. To live efficiently. To inspire, rather than destroy, the things in my wake. To have a greater discipline everyday. To be a better collaborator. To give more than I take. To conquer meaningless desires.\n\nI want to be at least a decent person. I hope it is not too late. I am not ready for adulthood, but from now on, I will try what I can.",
            "mobiledoc": null,
            "html": "<p><strong>Update 20160811</strong></p>\n\n<blockquote>\n  <p>I haven't been able to fulfill this oath. Will keep trying.</p>\n</blockquote>\n\n<p>Today I had an epiphany.</p>\n\n<p>I need to better my life.</p>\n\n<p>I am taking an oath to always keep my own words. To be responsible. To stop playing around. To live efficiently. To inspire, rather than destroy, the things in my wake. To have a greater discipline everyday. To be a better collaborator. To give more than I take. To conquer meaningless desires.</p>\n\n<p>I want to be at least a decent person. I hope it is not too late. I am not ready for adulthood, but from now on, I will try what I can.</p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-01-26 14:04:54",
            "created_by": 1,
            "updated_at": "2016-12-07 13:15:48",
            "updated_by": 1,
            "published_at": "2015-01-26 14:14:59",
            "published_by": 1
          },
          {
            "id": 4,
            "uuid": "89e54f01-bf38-4909-9def-96119cfffb93",
            "title": "On spending time with someone",
            "slug": "untitled-2",
            "markdown": "I think it's pretty lovely that after a while spending time with someone, your brain stops perceiving that particular wavelength between 620-740 nm as 'red', but 'their lip color'.",
            "mobiledoc": null,
            "html": "<p>I think it's pretty lovely that after a while spending time with someone, your brain stops perceiving that particular wavelength between 620-740 nm as 'red', but 'their lip color'.</p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-02-04 10:19:07",
            "created_by": 1,
            "updated_at": "2016-12-07 13:16:13",
            "updated_by": 1,
            "published_at": "2015-02-04 10:22:19",
            "published_by": 1
          },
          {
            "id": 5,
            "uuid": "0085de99-0254-40fd-a457-d759a7a19a94",
            "title": "Modulair Development",
            "slug": "modulair-development",
            "markdown": "#####2015-02-11\n\t15:42\nHello again! Last night I got too tired.\n\nToday I met with Pak Anies and Pak Eniman. They seem to like my updates so far, but they gave me some suggestions.\n\n* Try to compare the system with others that are available. Compare the scope, the system I/Os, etc.\n\n* Learn more about PLC, to improve one of our slave systems, which is the lamp controller.\n\nSo yeah. This time I will try to complete yesterday's confusion about Express + Swagger. Also since I will make the system as minimal as possible, I think I will use the `scratch-server` as the main system. The one generated by `$ yo meanjs` will be used as the 'guideline'. Wish me luck, nonexistent readers!\n\n\t16:14\n[WHAT THE HELL IS REST?](http://cwbuecheler.com/web/tutorials/2014/restful-web-app-node-express-mongodb/)\n\n\t17:45\nFirst API's for users done. I am getting slower by the days.\n\n\t18:15\nJust pushed forcefully to the MEANjs stack. Cleaner, more simple, and essential.\n\n\t18:27\nWhy? https://groups.google.com/forum/#!topic/meanjs/0Zxlq5QLu_c\n\n> To avoid confusion (given the OP was about REST APIs to be consumed on a variety of platforms) I suggest posting a new topic for your specific question. To that point, I agree with Ted. I would start with the Angular bit and go from there. There really is a lot to learn with how angular interacts with the server resources. \n\n>As an aside, meanjs is very good for creating single-page webapps, but as Ted correctly points out, the backend relies on cookies for the authentication story. If you need to consume the API from anything other than a browser, you would want to use a truly RESTful back-end, which can be implemented in meanjs, but it does not come by default. \n\nI am not making this browser-only, that's why.\n\nTime to wire up Swagger and Passport. I will follow [this guide](http://steve-jansen.github.io/blog/2013/08/22/wiring-together-passport-swagger-express/). ONWARDS!\n\n\t19:33\n    \nHandling Authentication for both webserver and Android Client: http://stackoverflow.com/questions/14572600/passport-js-restful-auth. NICE.\n\n\t21:10\nAdded API for homes. Create one, get all and delete one. It's slow but I have to persevere.\n    \nHandling Authentication for both webserver and Android Client: http://stackoverflow.com/questions/14572600/passport-js-restful-auth. NICE.\n\n\t22:02\nMultiple tries to configure Swagger has failed. Again. Better luck next time!\n\n\n#####2015-02-10 \n\t17:44\nToday I am sitting in Caffe Bene near my Campus.\n\nMy objective is to implement [Swagger](http://swagger.io/) API to the modulair-server.\n\n\t17:59\nIt's pretty dang confusing huh :p\n\nI am using this boilerplate from [MEANJS](http://www.meanjs.org) which was generated by Yo. Seems there's no easy way to implement Swagger.\n\nI think I will update my motivations here in case I am in doubt.\n\nMotivation: \n\n* `make the system as minimal as possible`\n* `make the system handle as much interface as possible`\n* `make the system 'slave-agnostic'`\n\nThat's for now.\n\n\t20:25\n    \nSo since I struggled with MEANJS I decided to generate some new test-server using express-generator.\n\nWorking pretty fine by now. I was distracted a bit because the generated files from `express-generator` will not let me start the server using `nodemon`. I freaking have to `npm start` which then runs `node ./bin/www` following the new best practice for express. My trials to modify it to use `nodemon` have been futile.\n\n\t22:02\n    \nOkay. I've made some simple RESTful API with the test-system. I will continue from home. I hope by tomorrow Swagger is done. :)\n\n\n",
            "mobiledoc": null,
            "html": "<h5 id=\"20150211\">2015-02-11</h5>\n\n<pre><code>15:42\n</code></pre>\n\n<p>Hello again! Last night I got too tired.</p>\n\n<p>Today I met with Pak Anies and Pak Eniman. They seem to like my updates so far, but they gave me some suggestions.</p>\n\n<ul>\n<li><p>Try to compare the system with others that are available. Compare the scope, the system I/Os, etc.</p></li>\n<li><p>Learn more about PLC, to improve one of our slave systems, which is the lamp controller.</p></li>\n</ul>\n\n<p>So yeah. This time I will try to complete yesterday's confusion about Express + Swagger. Also since I will make the system as minimal as possible, I think I will use the <code>scratch-server</code> as the main system. The one generated by <code>$ yo meanjs</code> will be used as the 'guideline'. Wish me luck, nonexistent readers!</p>\n\n<pre><code>16:14\n</code></pre>\n\n<p><a href=\"http://cwbuecheler.com/web/tutorials/2014/restful-web-app-node-express-mongodb/\">WHAT THE HELL IS REST?</a></p>\n\n<pre><code>17:45\n</code></pre>\n\n<p>First API's for users done. I am getting slower by the days.</p>\n\n<pre><code>18:15\n</code></pre>\n\n<p>Just pushed forcefully to the MEANjs stack. Cleaner, more simple, and essential.</p>\n\n<pre><code>18:27\n</code></pre>\n\n<p>Why? <a href=\"https://groups.google.com/forum/#!topic/meanjs/0Zxlq5QLu_c\">https://groups.google.com/forum/#!topic/meanjs/0Zxlq5QLu_c</a></p>\n\n<blockquote>\n  <p>To avoid confusion (given the OP was about REST APIs to be consumed on a variety of platforms) I suggest posting a new topic for your specific question. To that point, I agree with Ted. I would start with the Angular bit and go from there. There really is a lot to learn with how angular interacts with the server resources. </p>\n  \n  <p>As an aside, meanjs is very good for creating single-page webapps, but as Ted correctly points out, the backend relies on cookies for the authentication story. If you need to consume the API from anything other than a browser, you would want to use a truly RESTful back-end, which can be implemented in meanjs, but it does not come by default. </p>\n</blockquote>\n\n<p>I am not making this browser-only, that's why.</p>\n\n<p>Time to wire up Swagger and Passport. I will follow <a href=\"http://steve-jansen.github.io/blog/2013/08/22/wiring-together-passport-swagger-express/\">this guide</a>. ONWARDS!</p>\n\n<pre><code>19:33\n</code></pre>\n\n<p>Handling Authentication for both webserver and Android Client: <a href=\"http://stackoverflow.com/questions/14572600/passport-js-restful-auth\">http://stackoverflow.com/questions/14572600/passport-js-restful-auth</a>. NICE.</p>\n\n<pre><code>21:10\n</code></pre>\n\n<p>Added API for homes. Create one, get all and delete one. It's slow but I have to persevere.</p>\n\n<p>Handling Authentication for both webserver and Android Client: <a href=\"http://stackoverflow.com/questions/14572600/passport-js-restful-auth\">http://stackoverflow.com/questions/14572600/passport-js-restful-auth</a>. NICE.</p>\n\n<pre><code>22:02\n</code></pre>\n\n<p>Multiple tries to configure Swagger has failed. Again. Better luck next time!</p>\n\n<h5 id=\"20150210\">2015-02-10</h5>\n\n<pre><code>17:44\n</code></pre>\n\n<p>Today I am sitting in Caffe Bene near my Campus.</p>\n\n<p>My objective is to implement <a href=\"http://swagger.io/\">Swagger</a> API to the modulair-server.</p>\n\n<pre><code>17:59\n</code></pre>\n\n<p>It's pretty dang confusing huh :p</p>\n\n<p>I am using this boilerplate from <a href=\"http://www.meanjs.org\">MEANJS</a> which was generated by Yo. Seems there's no easy way to implement Swagger.</p>\n\n<p>I think I will update my motivations here in case I am in doubt.</p>\n\n<p>Motivation: </p>\n\n<ul>\n<li><code>make the system as minimal as possible</code></li>\n<li><code>make the system handle as much interface as possible</code></li>\n<li><code>make the system 'slave-agnostic'</code></li>\n</ul>\n\n<p>That's for now.</p>\n\n<pre><code>20:25\n</code></pre>\n\n<p>So since I struggled with MEANJS I decided to generate some new test-server using express-generator.</p>\n\n<p>Working pretty fine by now. I was distracted a bit because the generated files from <code>express-generator</code> will not let me start the server using <code>nodemon</code>. I freaking have to <code>npm start</code> which then runs <code>node ./bin/www</code> following the new best practice for express. My trials to modify it to use <code>nodemon</code> have been futile.</p>\n\n<pre><code>22:02\n</code></pre>\n\n<p>Okay. I've made some simple RESTful API with the test-system. I will continue from home. I hope by tomorrow Swagger is done. :)</p>",
            "amp": null,
            "image": "/content/images/2015/02/4wM08Qs.jpg",
            "featured": 1,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-02-10 10:41:03",
            "created_by": 1,
            "updated_at": "2015-02-11 15:03:06",
            "updated_by": 1,
            "published_at": "2015-02-10 10:43:00",
            "published_by": 1
          },
          {
            "id": 6,
            "uuid": "03c2c83a-b14e-4d6a-bb17-88f831fcbba0",
            "title": "On Arsitektur Komputasi Paralel",
            "slug": "on-arsitektur-komputasi-paralel",
            "markdown": "Man.\n\nLast semester I took EL4127, Arsitektur Komputasi Paralel.\n\nAlso, last semester, I have been really, really an awful student. Fuck. I am so ashamed of my *negative* diligency.\n\nI missed the classes, I basically copied every minor assignment from my friend Nyoman, and others.\n\nI only hand-made one of the assignments, which is *THE* Final Project, which is a group assignment (I choose to pair with Nyoman)\n\nThe lazy me hands it *REALLY, REALLY* late. Like as late as one can be.\n\nIncidentally, the course was the only one that decides whether or not I can graduate this July.\n\nWith all the stuff, I was really anxious, and also thought if the lecturer would give me a D/E, I totally deserved it. I was already into the Acceptance phase.\n\nBut today the grade came out, and guess what.\n\n######I got `AB`\n\n\nGOSH DAMN. I am REALLY FUCKING RELIEVED. And also thankful. To my really generous lecturer, Mr.[Yudi S. Gondokaryono](https://www.stei.itb.ac.id/file/stei-script/yudi.html). You ROCK HARD, sir. I sincerely thank you from the bottom of my mind.\n\nYou can see my final project here: [Parallel JS Implementation](http://projects.muhammadmustadi.com/parallel)",
            "mobiledoc": null,
            "html": "<p>Man.</p>\n\n<p>Last semester I took EL4127, Arsitektur Komputasi Paralel.</p>\n\n<p>Also, last semester, I have been really, really an awful student. Fuck. I am so ashamed of my <em>negative</em> diligency.</p>\n\n<p>I missed the classes, I basically copied every minor assignment from my friend Nyoman, and others.</p>\n\n<p>I only hand-made one of the assignments, which is <em>THE</em> Final Project, which is a group assignment (I choose to pair with Nyoman)</p>\n\n<p>The lazy me hands it <em>REALLY, REALLY</em> late. Like as late as one can be.</p>\n\n<p>Incidentally, the course was the only one that decides whether or not I can graduate this July.</p>\n\n<p>With all the stuff, I was really anxious, and also thought if the lecturer would give me a D/E, I totally deserved it. I was already into the Acceptance phase.</p>\n\n<p>But today the grade came out, and guess what.</p>\n\n<h6 id=\"igotab\">I got <code>AB</code></h6>\n\n<p>GOSH DAMN. I am REALLY FUCKING RELIEVED. And also thankful. To my really generous lecturer, Mr.<a href=\"https://www.stei.itb.ac.id/file/stei-script/yudi.html\">Yudi S. Gondokaryono</a>. You ROCK HARD, sir. I sincerely thank you from the bottom of my mind.</p>\n\n<p>You can see my final project here: <a href=\"http://projects.muhammadmustadi.com/parallel\">Parallel JS Implementation</a></p>",
            "amp": null,
            "image": "/content/images/2015/03/1406612104214.jpg",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-02-10 13:37:55",
            "created_by": 1,
            "updated_at": "2015-03-16 12:43:35",
            "updated_by": 1,
            "published_at": "2015-02-10 13:55:43",
            "published_by": 1
          },
          {
            "id": 7,
            "uuid": "d72f75d3-2e8d-42ff-9aa2-d71128df1b0a",
            "title": "Noises",
            "slug": "noises",
            "markdown": "So I found [this](http://mynoise.net/NoiseMachines/) noise generator last week. I've been using it ever since, everytime I work on my laptop. It's a really pleasant way to block other noises and concentrate on what you're doing. Just one button click and the loud coffee shop becomes a solitary, remote waterfall.\n\nMy fave is Pink Noise with the Sub-Bass and Low-Bass a bit pumped.",
            "mobiledoc": null,
            "html": "<p>So I found <a href=\"http://mynoise.net/NoiseMachines/\">this</a> noise generator last week. I've been using it ever since, everytime I work on my laptop. It's a really pleasant way to block other noises and concentrate on what you're doing. Just one button click and the loud coffee shop becomes a solitary, remote waterfall.</p>\n\n<p>My fave is Pink Noise with the Sub-Bass and Low-Bass a bit pumped.</p>",
            "amp": null,
            "image": "/content/images/2015/03/1273671867109.jpg",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-02-13 10:44:45",
            "created_by": 1,
            "updated_at": "2015-03-16 10:31:32",
            "updated_by": 1,
            "published_at": "2015-02-13 10:48:14",
            "published_by": 1
          },
          {
            "id": 8,
            "uuid": "e0326a2b-ceeb-4834-a5fc-4fe53d524d3e",
            "title": "Arsikom Notes: Floating Point",
            "slug": "arsikom-notes-floating-point",
            "markdown": "##Introduction\n\nInt and unsigned int are approximations to the set of integers and the set of natural numbers. Unlike int and unsigned, the set of integers and the set of natural numbers is infinite. Because the set of int is finite, there is a maximum int and a minimum int.\n\nInts are also contiguous. That is, between the minimum and maximum int, there are no missing values.\n\n####To summarize:\n\n1. The set of valid ints is finite.\n2. Therefore, there is a minimum and maximum int.\n3. ints are also contiguous. That is, there are no missing integer values between the minimum and maximum int.\n\nThere's also another key feature of ints that doesn't appear in the set of integers. ints have an underlying representation. The representation is binary numbers. The set of integers is often represented as base 10 numerals, but is often thought of more abstractly. That is, the set is independent of its representation (i.e., we can represent the set of integers in any way we want).\n\nWhat issues comes up when trying to devise a data representation for floating point numbers? It turns out these issues are more complicated than representing integers. While most people agree that UB and 2C are the ways to represented unsigned and signed integers. Representing real numbers has traditionally been more problematic.\n\nIn particular, depending on which company manufactured the hardware, there were different ways to represent real numbers, and to manipulate it. There's no particularly obvious choice of how to represent real numbers. In the mid 1980's, the need for uniform treatment of real numbers (called floating point numbers) lead to the IEEE 754 standard.\n\nStandards are often developed to give consistent behavior. For example, when C was first being developed, what was considered a valid C program very much depended on the compiler. A program that compiled on one C compiler might not compile on another. Effectively, many different flavors of C were being created, and the need to have a standard definition of a language was seen as important.\n\nSimilar, for purposes of agreeing on results performed on floating point numbers, there was a desire to standardize the way floating point numbers were represented.\n\nBefore we get to such issues, let's think about what restrictions will have to be imposed on floating point numbers.\n\n* Since the number of bits used to represent a floating point number is finite, there must be a maximum float and a minimum float.\n\n* However, since real numbers are dense (i.e., between any two distinct real numbers, there's another real number), there's no way to make any representation of real numbers contiguous. Integers do not have this denseness property.\n\nThis means we need to decide which real numbers to keep and which ones to get rid of. Clearly, any number that has repeated decimals or never repeats is not something that can be represented as a floating point number.\n\n##Scientific Notation\n\nWhy do we need to represent real numbers? Of course, it's important in math. However, real numbers are important for measurements in science.\n\n####Precision vs. Accuracy\n\nLet's define these two terms:\n\n**Definition** *Precision* refers to the number of significant digits it takes to represent a number. Roughly speaking, it determines how fine you can distinguish between two measurements.\n\n**Definition** *Accuracy* is how close a measurement is to its correct value.\n\nA number can be precise, without being accurate. For example, if you say someone's height is 2.0002 meters, that is precise (because it is precise to about 1/1000 meters). However, it may be inaccurate, because a person's height may be significantly different.\n\nIn science, precision is usually defined by the number of significant digits. This is a different kind of precision than you're probably used to. For example, if you have a scale, you might be lucky to have precision to one pound. That is, the error is +/- 1/2 pound. Most people think of precision as the smallest measurement you can make.\n\nIn science, it's different. It's about the number of significant digits. For example, `1.23 * 10^10` has the same precision as `1.23 * 10^-10`, even though the second quantity is much, much smaller than the first. It may be unusual, but that's how we'll define precision.\n\nWhen we choose to represent a number, it's easier to handle precision than accuracy. I define accuracy to mean the result of a measured value to its actual value. There's not much a computer can do directly to determine accuracy (I suppose, with sufficient data, use statistical methods to determine accuracy).\n\n##Accuracy of Computations\n\nThere are two distinct concepts: the accuracy of a value that's recorded or measured, and the accuracy of performing operations with numbers.\n\nWe can't do much about the accuracy of the recorded value (without additional information). However, the hardware does perform mathematical operations reasonably accurately. The reason the computations aren't perfectly accurate is because one needs infinitely precice math, and that requires an infinite number of bits, which doesn't exist on a computer.\n\nSince floating point numbers can not be infinite precise, there's always a possibility of error when performing computations. Floating point numbers often approximate the actual numbers. This is precisely because floating point numbers can not be infinitely precise.\n\nIn the field on computer science, numerical analysis is concerned with ways of performing scientific computations accurately on a computer. In particular, there are ways to minimize the effect of \"round-off errors\", errors that are due to the approximate nature of floating point representation.\n\n##Canonical Representation\n\nWhen representing numbers in scientific notation, it has the following form:\n\n\t+/- S x 10^exp\n    \nwhere S is the significand or the mantissa, and __exp__ is the exponent. \"10\" is the base.\n\nIn scientific notation, there can be more than one way of writing the same value. For example, `6.02 X 10^23` is the same as `60.2 X 10^22` is the same as `602 X 10^21`.\n\nFor any number represented in this way, there are an infinite number of other ways to represent this (by moving the decimal point, and adjust the exponent).\n\nIt might be nice to have a single, consistent way of doing this, i.e. a *canonical* or standard way of doing this. And, so there is such a way.\n\n\t+/- D.FFFF X 10^exp\n\nYou can write the significand as `D.FFF...` where `1 <= D <= 9`, and `FFF...` represents the digits after the decimal point. If you follow this restriction on `D`, then there's only one way to write a number in scientific notation. The obvious exception to this rule is representing 0, which is a special case.\n\nYou can generalize this formula for other bases than base 10. For base K (where `K > 1`), you write the canonical scientific notation form as:\n\n\t+/- D.FFFF X Kexp\n   \nwhere `1 <= D <= K - 1`. The F's that appear in the fraction must follow the rule: `0 <= D <= K - 1`.\n\nThe number of *significant digits*, which is also the *precision*, is the number of digits after the radix point. We call it the *radix point* rather than the *decimal point* because decimal implies base 10, and we could be talking about any other base.\n\n##Binary Scientific Notation\n\nAs with any representation on a computer, we need to represent numbers in binary. So, this means we specialize the formula to look like:\n   \n\t+/- D.FFFF X 2exp\n\nThis creates an interesting constraint on `D`. In particular, `1 <= D <= 1`, which means `D` is forced to be 1. We'll use this fact later on.\n\n##IEEE 754 Single Precision\n\nIEEE 754 floating point numbers was a standard developed in the 1980s, to deal with the problem of non-standard floating point representation.\n\nThere is a standard for single precision (32 bits) and double precision (64 bits). We'll primarily focus on single precision.\n\n##Chart\n\n* *Sign* - 1 bit - b31 - `X`\n* *Exponent* - 8 bits - b30-23 - `XXXX XXXX`\n* *Fraction* - 23 bits - b22-0 - `XXXX XXXX XXXX XXXX XXXX XXX`\n\n\nAn IEEE 754 single precision number is divided into three parts. The three parts match the three parts of a number written in canonical binary scientific notation.\n\n* **sign bit** - This is b31. If this value is 1, the number is negative. Otherwise, it's non-negative.\n\n* **exponent** - The exponent is excess/bias 127. Normally, one expect the excess/bias to be half the number of representations. In this case, the number of representations is 256, and half of that is 128. Nevertheless, the excess is 127. Thus, the range of possible exponents is `-127 <= exp <= 128`.\n\n* **fraction** - Normally, you would represent the significant (also called the mantissa. This would mean representing `D.FFFF....` However, recall that for base 2, `D = 1`. Since `D` is always 1, there's no need to represent the 1. You only need to represent the bits after the radix point.\n\nThus, the \"1\" left of the radix point is NOT explicitly represented. We call this the **hidden one**.\n\nIEEE 754 single precision has 24 bits of precision. 23 of the bits are explicitly represented, and the additional \"hidden 1\" is the 24th bit.\nThere is something of a fallacy when we say that a IEEE single precision has 24 bits of precision. In particular, it's very much like saying that a calculator with 15 digits has 15 digits of precision. It's true that it may represent all numbers with 15 digits, but the question is whether the value is really that precise.\n\nFor example, suppose a measured number has only 3 digits of precision. There's no way to indicate this on a calculator. The calculator is prepared to have 15 digits of precision, even though that's more accurate than the number.\n\nThe same can be said about representing floating point numbers. It has 24 bits of precision, but that may not accurately represent the true number of significant bits. Unfortunately, that's the best computers can do. One could store additional information to determine exactly how many bits really are significant, but this is not usually done.\n\n##Categories\n\nUnlike UB or 2C, floating point numbers in IEEE 754 do not all fall in the same category. IEEE 754 identifies 5 different categories of floating point numbers.\n\nYou might wonder why they do this. Here's one reason. Given the representation, as is, there would be no way to represent 0. If all the bits were 0, this would be the number 1.0 X 2-127. Although this is a small number, it's not 0.\n\nThus, we designate the bitstring containing all 0's to be zero.\n\nThe following is a list of categories of floating point numbers in IEEE 754.\n\n* **zero** Because there is a sign bit, there is a positive and negative representation of 0.\n* **infinity** There is also a positive and negative infinity. Infinity occurs when you divide a non-zero number by zero. For example, 1.0/0.0 produces infinity.\n* **NaN** This stands for \"not a number\". NaN usually occurs when you do an ill-defined operation. The canonical example is dividing 0.0/0.0, which does not have a defined value.\n* **denormalized numbers** These are numbers which have fewer bits of precision, and are smaller (in magnitude) than normalized numbers. We'll discuss denormalized numbers in detail momentarily.\n* **normalized numbers** These are standard floating point numbers. Most bitstring patterns in IEEE 754 are normalized numbers.\n\n##How to Tell Which Category a Float is\n\nIt would be useful to know which category a given a bitstring falls in. Here's the chart.\n\n![](/content/images/2015/03/chart-1.png)\n\nAgain, we write `0^8` to mean 0, repeated 8 times, i.e. `0000 0000`.\n\nNotice that there is a positive and negative 0.\n\n##Denormalized Numbers\n\nSuppose that we allowed all 0's to be a normalized number (it's not though, it's really designated as zero).\n\nA bitstring with 32 zeros would be `1.0 X 2^-127`. That's a pretty small value. However, we could represent numbers to get even smaller, if we do the following when the exponent is `0^8`.\n\n* Do not have a hidden 1. `b(23-0)` would be the bits appearing after a radix point.\n* Fix the exponent to -126.\n\nRecall that the exponent is written with a bias of 127. So, you would expect that if the exponent is `0^8`, this bitstring would represent the exponent -127, and not -126. However, there's a good reason why it's -126. We'll explain why in a moment. For now, let's accept the fact that the exponent is -126 whenever the exponent bitstring is `0^8`.\n\n####Largest Positive Denormalized Number\n\nWhat's the largest positive denormalized number? This is when the fraction is `1^23`. It looks like:\n\n**S** | **Exp** | **Fraction**\n\n`0` `0000 0000` `1111 1111 1111 1111 1111 111`\n\nThis bitstring maps to the number `0.(1^23) x 2-126`. This number has 23 bits of precision, since there are 23 1's after the radix point.\n\n####Smallest Positive Denormalized Number\n\nWhat's the smallest positive denormalizd number?\n\nExponent bitstring `0^8`. (All denormalized numbers have this bitstring). It's value is -126.\n\nThe fraction is `(0^22)1`, i.e., 22 zeroes followed by a single 1.\n\nThis looks like:\n\n**S** | **Exp** | **Fraction**\n\n`0` `0000 0000` `0000 0000 0000 0000 0000 001`\n\nThis bitstring pattern maps to the number `0.(0^22)1 x 2^-126`, which is `1.0 x 2^-149`. This number has 1 bit of precision. The 22 zeroes are merely place holders and do not affect the number of bits of precision.\n\nYou may not believe that this number has only 1 bit of precision, but it does. Consider the decimal number 123. This number has 3 digits of precision. Consider 00123. This also has 3 digits of precision. The leading 0's do not affect the number of digits of precision. Similary, if you have 0.000123, the zeroes are merely to place the 123 correctly, but are not significant digits. However, 0.01230 has 4 significant digits, because the rightmost 0 actually adds to the precision.\n\nThus, for our example, we have 22 zeroes followed by a 1 after the radix point, and the 22 zeroes have nothing to do with the number of significant bits.\n\nBy using denormalized numbers, we were able to make the smallest positive float to be `1.0 X 2^-149`, instead of `1.0 X 2^-127`, which we would have had if the number had been normalized.\n\nThus, we were able to go 22 orders of magnitude smaller, by sacrificing bits of precision.\n\n##Why -126 and not -127?\n\nWhen the exponent bitstring is 08, this is mapped to exponent -126. Yet, for normalized IEEE 754 single precision floating point numbers, the bias on the exponent is -127. Why is it -126 instead of -127.\n\nTo answer this question, we need to look at the smallest positive normalized number. This occurs with the following bitstring pattern\n\n**S** | **Exp** | **Fraction**\n\n`0` `0000 0001` `0000 0000 0000 0000 0000 000`\n\nThis bitstring maps to `1.0 x 2^-126`.\nLet's look at the two choices for the largest positive denormalized numbers.\n\n`0.(123) x 2^-127` (exponent is 127)\n\n`0.(123) x 2^-126` (exponent is 126---this is what's really used in IEEE 754 single precision)\n\nBoth choices are smaller than `1.0 x 2^-126`, the smallest normalized (In particular, notice that the number with the exponent of -126 is smaller). That's good because we want to avoid overlap between normalized and denormalized numbers.\n\nAlso notice that the number with the -126 as exponent is larger than the number that has -127 as exponent (both have the same mantissa/significand, and -126 is larger than -127).\n\nThus, by picking -126 instead of -127, the gap between the largest denormalized number and the smallest normalized number is smaller. Is this a necessary feature? Is it really necessary to make that gap small? Maybe not, but at least there's some rationale behind the decision.\n\n##Converting Normalized from Base 10 to IEEE 754\n\nLet's convert 10.25 from base 10 to IEEE 754 single precision. Here's the steps:\n\n* Convert the number left of the radix point to base 2\n\n==Thus, 10[10] is 1010[2].==\n\n* Convert the number right of the radix point to base 2.\n\n==Thus, .25[10] is .01[2].==\n\n* Add the two.\n\n==This results in 1010 + 0.01, which is 1010.01.==\n\n* Write this in binary scientific notation.\n\n==This is `1010.01 X 2^0`, which is `1.01001 X 2^3`.==\n\n* Write this in IEEE 754 single precision.\n\n==This is `1010.01 X 2^0`, which is `1.01001 X 2^3`.==\n\n* Convert 3 to the correct bias. Since the bias is 127, add 127 to 3 to get 130 and convert to binary. This turns out to be `1000 0010`.\n\n* Write out the number in the correct representation\n\n==**S** | **Exp** | **Fraction**==\n\n==`0` `1000 0010` `0100 1000 0000 0000 0000 000`==\n\nNotice that the hidden \"1\" is not represented in the fraction.\n\n##An Algorithm for Writing Positive Exponent in Excess 127\n\nConverting 130 to binary seems a bit painful. It seems to require many steps. However, there's a fairly easy way to convert positive exponents to binary.\n\nFirst, we take advantage of the following fact: `1000 0000` maps to exponent +1 in excess 127. If this were excess 128, it would map to 0. It would be nice, in fact, if it were excess 128, because then we would write out the positive number in unsigned binary, then flip the most significant bit from 0 to 1, and we'd be done. (Verify this for yourself with an example or two).\n\nHowever, excess 127 and excess 128 are only off-by-one, so it's not too hard to adjust the algorithm appropriately. Here's what you do to convert positive exponents to excess 127.\n\n* Subtract 1 from the positive exponent.\n* Convert the number to unsigned binary, using 8 bits.\n* Flip the MSb to 1\n* For example, we had an exponent of 3 in the previous example. Subtract 1 to get 2, convert to UB to get `0000 0010`. Flip the MSb to get `1000 0010`. That's the answer from the previous section.\n\nBefore you memorize this algorithm, you should really try to understand where it comes from.\n\nThis is where it comes from. Consider a positive exponent, `x`, represented in base 10. To convert it to excess 127, we add 127. Thus, we have `x + 127`. We can rewrite this as: (x - 1) + 128. This is simple algebra.\n\n128 is `1000 0000` in binary. And we have `x - 1`, which is where the subtraction of 1 occurs. As long as `x - 1` is smaller than 128 (and it will be, since the maximum value of `x` is 128), then it's easy to add this binary number to `1000 0000`.\n\nRemember, memorization is a poor second to understanding. It's better to understand why something works than to memorize an answer. However, it's even better to understand why something works and remember it too.\n\n##Converting Denormalized from Base 10 to IEEE 754\n\nSuppose you're asked to convert `1.1 x 2^-128` to IEEE 754 single precision. How would you do this? If you're not careful, you might think the number is normalized, and you might convert this to a normalized number using the procedure from before.\n\nYou'd get stuck trying to convert the exponent, because you'd discover the number is negative, and the number has to be non-negative when convert from base 10 (after adding the bias) to UB.\n\nYou can save yourself this hassle if you recall that the smallest, positive normalized number has an exponent of -126, and that the exponent we have is -128, which is less than -126. If you've written the number in binary scientific notation (in canonical form), and the exponent is less than -126, then you have a denormalized number.\n\nSince `-128 < -126`, the number we're trying to represent is a denormalized number.\n\nThe rules for representing denormalized numbers is different from representing normalized numbers.\n\nTo represent a denormalized number, you need to shift the radix point so that the exponent is -126. In this case, the exponent must be increased by 2 from -128 to -126, so the radix point must shift left by 2.\n\nThis results in: `0.011 x 2^-126`\n\nAt this point, it's easy to convert. The exponent bitstring is 08. You copy the bits after the radix point into the fraction. The sign bit is 0.\n\n\n\n**S** | **Exp** | **Fraction**\n\n`0` `0000 0000` `0110 0000 0000 0000 0000 000`\n\n##No Unsigned Float\n\nUnlike ints, there isn't an unsigned float. One reason for this may be the complicated nature of representing floating point numbers. If we get rid of the sign bit, how would we use it? Would we add one more bit to the exponent? That would make the most sense, since it sits adjacent to the exponent, but the bias would have to be changed.\n\nWe could add one more bit to the fraction. At least, that would cause the least amount of disruption. Would that one additonal bit help us in any meaninful way? On the one hand, it allows us to represent twice as many floating point numbers. On the other, it does so by adding a single bit of precision.\n\nPerhaps through this kind of reasoning, the developers of the IEEE 754 standard felt that having an unsigned float did not make sense, and thus there is no unsigned float in IEEE 754 floating point.\n\n##Why Sign Bit, Exponent, then Fraction?\n\nIf you look at the representation for IEEE 754, you'll notice that it's sign bit, then exponent, then fraction.\n\nWhy do it in that order?\n\nHere's a plausible explanation. Suppose you want to compare two dates. The date includes month, day, and year. You use two digits for the month, two for the day, and four for the year. Suppose you want to store the date as a string, and want to use string comparison to compare dates.\n\nWhich order should you pick?\n\nYou should pick the year, the month, and the day. Why? Because when you are doing string comparison, you compare left to right, and you want the most significant quantity to the left. That's the year.\n\nWhen you look at a floating point number, the exponent is the most important, so it's to the left of the fraction.\n\nYou can also do comparisons because the exponent is written in bias notation (you could use two's complement, as well, although it would make the comparison only a little more complicated).\n\nSo why is the sign bit to the far left? Perhaps the answer is because that's where it appears in signed int representation. It may be unusual to have the sign in any other position.\n\n##Summary\n\nAfter reading and practicing, you should be able to do the following:\n\n* Give the names of each of the five categories of floating point numbers in IEEE 754 single precision.\n* Given a 32 bitstring, determine which category the bitstring falls in.\n* Given a normalized or denormalized number, write the number in canonical binary scientific notation (you can leave the exponent written in base 10).\n* Given a number in base 10 or canonical binary scientific notation, convert it to an IEEE 754 single precision floating point number.\n* Know what bias is used for normalized numbers.\n* Know what exponent is used for denormalized numbers.\n* Know what the hidden 1 is.\n\nSources:\n1.\thttp://www.cs.umd.edu/class/sum2003/cmsc311/Notes/ by Charles Lin, 2003",
            "mobiledoc": null,
            "html": "<h2 id=\"introduction\">Introduction</h2>\n\n<p>Int and unsigned int are approximations to the set of integers and the set of natural numbers. Unlike int and unsigned, the set of integers and the set of natural numbers is infinite. Because the set of int is finite, there is a maximum int and a minimum int.</p>\n\n<p>Ints are also contiguous. That is, between the minimum and maximum int, there are no missing values.</p>\n\n<h4 id=\"tosummarize\">To summarize:</h4>\n\n<ol>\n<li>The set of valid ints is finite.  </li>\n<li>Therefore, there is a minimum and maximum int.  </li>\n<li>ints are also contiguous. That is, there are no missing integer values between the minimum and maximum int.</li>\n</ol>\n\n<p>There's also another key feature of ints that doesn't appear in the set of integers. ints have an underlying representation. The representation is binary numbers. The set of integers is often represented as base 10 numerals, but is often thought of more abstractly. That is, the set is independent of its representation (i.e., we can represent the set of integers in any way we want).</p>\n\n<p>What issues comes up when trying to devise a data representation for floating point numbers? It turns out these issues are more complicated than representing integers. While most people agree that UB and 2C are the ways to represented unsigned and signed integers. Representing real numbers has traditionally been more problematic.</p>\n\n<p>In particular, depending on which company manufactured the hardware, there were different ways to represent real numbers, and to manipulate it. There's no particularly obvious choice of how to represent real numbers. In the mid 1980's, the need for uniform treatment of real numbers (called floating point numbers) lead to the IEEE 754 standard.</p>\n\n<p>Standards are often developed to give consistent behavior. For example, when C was first being developed, what was considered a valid C program very much depended on the compiler. A program that compiled on one C compiler might not compile on another. Effectively, many different flavors of C were being created, and the need to have a standard definition of a language was seen as important.</p>\n\n<p>Similar, for purposes of agreeing on results performed on floating point numbers, there was a desire to standardize the way floating point numbers were represented.</p>\n\n<p>Before we get to such issues, let's think about what restrictions will have to be imposed on floating point numbers.</p>\n\n<ul>\n<li><p>Since the number of bits used to represent a floating point number is finite, there must be a maximum float and a minimum float.</p></li>\n<li><p>However, since real numbers are dense (i.e., between any two distinct real numbers, there's another real number), there's no way to make any representation of real numbers contiguous. Integers do not have this denseness property.</p></li>\n</ul>\n\n<p>This means we need to decide which real numbers to keep and which ones to get rid of. Clearly, any number that has repeated decimals or never repeats is not something that can be represented as a floating point number.</p>\n\n<h2 id=\"scientificnotation\">Scientific Notation</h2>\n\n<p>Why do we need to represent real numbers? Of course, it's important in math. However, real numbers are important for measurements in science.</p>\n\n<h4 id=\"precisionvsaccuracy\">Precision vs. Accuracy</h4>\n\n<p>Let's define these two terms:</p>\n\n<p><strong>Definition</strong> <em>Precision</em> refers to the number of significant digits it takes to represent a number. Roughly speaking, it determines how fine you can distinguish between two measurements.</p>\n\n<p><strong>Definition</strong> <em>Accuracy</em> is how close a measurement is to its correct value.</p>\n\n<p>A number can be precise, without being accurate. For example, if you say someone's height is 2.0002 meters, that is precise (because it is precise to about 1/1000 meters). However, it may be inaccurate, because a person's height may be significantly different.</p>\n\n<p>In science, precision is usually defined by the number of significant digits. This is a different kind of precision than you're probably used to. For example, if you have a scale, you might be lucky to have precision to one pound. That is, the error is +/- 1/2 pound. Most people think of precision as the smallest measurement you can make.</p>\n\n<p>In science, it's different. It's about the number of significant digits. For example, <code>1.23 * 10^10</code> has the same precision as <code>1.23 * 10^-10</code>, even though the second quantity is much, much smaller than the first. It may be unusual, but that's how we'll define precision.</p>\n\n<p>When we choose to represent a number, it's easier to handle precision than accuracy. I define accuracy to mean the result of a measured value to its actual value. There's not much a computer can do directly to determine accuracy (I suppose, with sufficient data, use statistical methods to determine accuracy).</p>\n\n<h2 id=\"accuracyofcomputations\">Accuracy of Computations</h2>\n\n<p>There are two distinct concepts: the accuracy of a value that's recorded or measured, and the accuracy of performing operations with numbers.</p>\n\n<p>We can't do much about the accuracy of the recorded value (without additional information). However, the hardware does perform mathematical operations reasonably accurately. The reason the computations aren't perfectly accurate is because one needs infinitely precice math, and that requires an infinite number of bits, which doesn't exist on a computer.</p>\n\n<p>Since floating point numbers can not be infinite precise, there's always a possibility of error when performing computations. Floating point numbers often approximate the actual numbers. This is precisely because floating point numbers can not be infinitely precise.</p>\n\n<p>In the field on computer science, numerical analysis is concerned with ways of performing scientific computations accurately on a computer. In particular, there are ways to minimize the effect of \"round-off errors\", errors that are due to the approximate nature of floating point representation.</p>\n\n<h2 id=\"canonicalrepresentation\">Canonical Representation</h2>\n\n<p>When representing numbers in scientific notation, it has the following form:</p>\n\n<pre><code>+/- S x 10^exp\n</code></pre>\n\n<p>where S is the significand or the mantissa, and <strong>exp</strong> is the exponent. \"10\" is the base.</p>\n\n<p>In scientific notation, there can be more than one way of writing the same value. For example, <code>6.02 X 10^23</code> is the same as <code>60.2 X 10^22</code> is the same as <code>602 X 10^21</code>.</p>\n\n<p>For any number represented in this way, there are an infinite number of other ways to represent this (by moving the decimal point, and adjust the exponent).</p>\n\n<p>It might be nice to have a single, consistent way of doing this, i.e. a <em>canonical</em> or standard way of doing this. And, so there is such a way.</p>\n\n<pre><code>+/- D.FFFF X 10^exp\n</code></pre>\n\n<p>You can write the significand as <code>D.FFF...</code> where <code>1 &lt;= D &lt;= 9</code>, and <code>FFF...</code> represents the digits after the decimal point. If you follow this restriction on <code>D</code>, then there's only one way to write a number in scientific notation. The obvious exception to this rule is representing 0, which is a special case.</p>\n\n<p>You can generalize this formula for other bases than base 10. For base K (where <code>K &gt; 1</code>), you write the canonical scientific notation form as:</p>\n\n<pre><code>+/- D.FFFF X Kexp\n</code></pre>\n\n<p>where <code>1 &lt;= D &lt;= K - 1</code>. The F's that appear in the fraction must follow the rule: <code>0 &lt;= D &lt;= K - 1</code>.</p>\n\n<p>The number of <em>significant digits</em>, which is also the <em>precision</em>, is the number of digits after the radix point. We call it the <em>radix point</em> rather than the <em>decimal point</em> because decimal implies base 10, and we could be talking about any other base.</p>\n\n<h2 id=\"binaryscientificnotation\">Binary Scientific Notation</h2>\n\n<p>As with any representation on a computer, we need to represent numbers in binary. So, this means we specialize the formula to look like:</p>\n\n<pre><code>+/- D.FFFF X 2exp\n</code></pre>\n\n<p>This creates an interesting constraint on <code>D</code>. In particular, <code>1 &lt;= D &lt;= 1</code>, which means <code>D</code> is forced to be 1. We'll use this fact later on.</p>\n\n<h2 id=\"ieee754singleprecision\">IEEE 754 Single Precision</h2>\n\n<p>IEEE 754 floating point numbers was a standard developed in the 1980s, to deal with the problem of non-standard floating point representation.</p>\n\n<p>There is a standard for single precision (32 bits) and double precision (64 bits). We'll primarily focus on single precision.</p>\n\n<h2 id=\"chart\">Chart</h2>\n\n<ul>\n<li><em>Sign</em> - 1 bit - b31 - <code>X</code></li>\n<li><em>Exponent</em> - 8 bits - b30-23 - <code>XXXX XXXX</code></li>\n<li><em>Fraction</em> - 23 bits - b22-0 - <code>XXXX XXXX XXXX XXXX XXXX XXX</code></li>\n</ul>\n\n<p>An IEEE 754 single precision number is divided into three parts. The three parts match the three parts of a number written in canonical binary scientific notation.</p>\n\n<ul>\n<li><p><strong>sign bit</strong> - This is b31. If this value is 1, the number is negative. Otherwise, it's non-negative.</p></li>\n<li><p><strong>exponent</strong> - The exponent is excess/bias 127. Normally, one expect the excess/bias to be half the number of representations. In this case, the number of representations is 256, and half of that is 128. Nevertheless, the excess is 127. Thus, the range of possible exponents is <code>-127 &lt;= exp &lt;= 128</code>.</p></li>\n<li><p><strong>fraction</strong> - Normally, you would represent the significant (also called the mantissa. This would mean representing <code>D.FFFF....</code> However, recall that for base 2, <code>D = 1</code>. Since <code>D</code> is always 1, there's no need to represent the 1. You only need to represent the bits after the radix point.</p></li>\n</ul>\n\n<p>Thus, the \"1\" left of the radix point is NOT explicitly represented. We call this the <strong>hidden one</strong>.</p>\n\n<p>IEEE 754 single precision has 24 bits of precision. 23 of the bits are explicitly represented, and the additional \"hidden 1\" is the 24th bit. <br />\nThere is something of a fallacy when we say that a IEEE single precision has 24 bits of precision. In particular, it's very much like saying that a calculator with 15 digits has 15 digits of precision. It's true that it may represent all numbers with 15 digits, but the question is whether the value is really that precise.</p>\n\n<p>For example, suppose a measured number has only 3 digits of precision. There's no way to indicate this on a calculator. The calculator is prepared to have 15 digits of precision, even though that's more accurate than the number.</p>\n\n<p>The same can be said about representing floating point numbers. It has 24 bits of precision, but that may not accurately represent the true number of significant bits. Unfortunately, that's the best computers can do. One could store additional information to determine exactly how many bits really are significant, but this is not usually done.</p>\n\n<h2 id=\"categories\">Categories</h2>\n\n<p>Unlike UB or 2C, floating point numbers in IEEE 754 do not all fall in the same category. IEEE 754 identifies 5 different categories of floating point numbers.</p>\n\n<p>You might wonder why they do this. Here's one reason. Given the representation, as is, there would be no way to represent 0. If all the bits were 0, this would be the number 1.0 X 2-127. Although this is a small number, it's not 0.</p>\n\n<p>Thus, we designate the bitstring containing all 0's to be zero.</p>\n\n<p>The following is a list of categories of floating point numbers in IEEE 754.</p>\n\n<ul>\n<li><strong>zero</strong> Because there is a sign bit, there is a positive and negative representation of 0.</li>\n<li><strong>infinity</strong> There is also a positive and negative infinity. Infinity occurs when you divide a non-zero number by zero. For example, 1.0/0.0 produces infinity.</li>\n<li><strong>NaN</strong> This stands for \"not a number\". NaN usually occurs when you do an ill-defined operation. The canonical example is dividing 0.0/0.0, which does not have a defined value.</li>\n<li><strong>denormalized numbers</strong> These are numbers which have fewer bits of precision, and are smaller (in magnitude) than normalized numbers. We'll discuss denormalized numbers in detail momentarily.</li>\n<li><strong>normalized numbers</strong> These are standard floating point numbers. Most bitstring patterns in IEEE 754 are normalized numbers.</li>\n</ul>\n\n<h2 id=\"howtotellwhichcategoryafloatis\">How to Tell Which Category a Float is</h2>\n\n<p>It would be useful to know which category a given a bitstring falls in. Here's the chart.</p>\n\n<p><img src=\"/content/images/2015/03/chart-1.png\" alt=\"\" /></p>\n\n<p>Again, we write <code>0^8</code> to mean 0, repeated 8 times, i.e. <code>0000 0000</code>.</p>\n\n<p>Notice that there is a positive and negative 0.</p>\n\n<h2 id=\"denormalizednumbers\">Denormalized Numbers</h2>\n\n<p>Suppose that we allowed all 0's to be a normalized number (it's not though, it's really designated as zero).</p>\n\n<p>A bitstring with 32 zeros would be <code>1.0 X 2^-127</code>. That's a pretty small value. However, we could represent numbers to get even smaller, if we do the following when the exponent is <code>0^8</code>.</p>\n\n<ul>\n<li>Do not have a hidden 1. <code>b(23-0)</code> would be the bits appearing after a radix point.</li>\n<li>Fix the exponent to -126.</li>\n</ul>\n\n<p>Recall that the exponent is written with a bias of 127. So, you would expect that if the exponent is <code>0^8</code>, this bitstring would represent the exponent -127, and not -126. However, there's a good reason why it's -126. We'll explain why in a moment. For now, let's accept the fact that the exponent is -126 whenever the exponent bitstring is <code>0^8</code>.</p>\n\n<h4 id=\"largestpositivedenormalizednumber\">Largest Positive Denormalized Number</h4>\n\n<p>What's the largest positive denormalized number? This is when the fraction is <code>1^23</code>. It looks like:</p>\n\n<p><strong>S</strong> | <strong>Exp</strong> | <strong>Fraction</strong></p>\n\n<p><code>0</code> <code>0000 0000</code> <code>1111 1111 1111 1111 1111 111</code></p>\n\n<p>This bitstring maps to the number <code>0.(1^23) x 2-126</code>. This number has 23 bits of precision, since there are 23 1's after the radix point.</p>\n\n<h4 id=\"smallestpositivedenormalizednumber\">Smallest Positive Denormalized Number</h4>\n\n<p>What's the smallest positive denormalizd number?</p>\n\n<p>Exponent bitstring <code>0^8</code>. (All denormalized numbers have this bitstring). It's value is -126.</p>\n\n<p>The fraction is <code>(0^22)1</code>, i.e., 22 zeroes followed by a single 1.</p>\n\n<p>This looks like:</p>\n\n<p><strong>S</strong> | <strong>Exp</strong> | <strong>Fraction</strong></p>\n\n<p><code>0</code> <code>0000 0000</code> <code>0000 0000 0000 0000 0000 001</code></p>\n\n<p>This bitstring pattern maps to the number <code>0.(0^22)1 x 2^-126</code>, which is <code>1.0 x 2^-149</code>. This number has 1 bit of precision. The 22 zeroes are merely place holders and do not affect the number of bits of precision.</p>\n\n<p>You may not believe that this number has only 1 bit of precision, but it does. Consider the decimal number 123. This number has 3 digits of precision. Consider 00123. This also has 3 digits of precision. The leading 0's do not affect the number of digits of precision. Similary, if you have 0.000123, the zeroes are merely to place the 123 correctly, but are not significant digits. However, 0.01230 has 4 significant digits, because the rightmost 0 actually adds to the precision.</p>\n\n<p>Thus, for our example, we have 22 zeroes followed by a 1 after the radix point, and the 22 zeroes have nothing to do with the number of significant bits.</p>\n\n<p>By using denormalized numbers, we were able to make the smallest positive float to be <code>1.0 X 2^-149</code>, instead of <code>1.0 X 2^-127</code>, which we would have had if the number had been normalized.</p>\n\n<p>Thus, we were able to go 22 orders of magnitude smaller, by sacrificing bits of precision.</p>\n\n<h2 id=\"why126andnot127\">Why -126 and not -127?</h2>\n\n<p>When the exponent bitstring is 08, this is mapped to exponent -126. Yet, for normalized IEEE 754 single precision floating point numbers, the bias on the exponent is -127. Why is it -126 instead of -127.</p>\n\n<p>To answer this question, we need to look at the smallest positive normalized number. This occurs with the following bitstring pattern</p>\n\n<p><strong>S</strong> | <strong>Exp</strong> | <strong>Fraction</strong></p>\n\n<p><code>0</code> <code>0000 0001</code> <code>0000 0000 0000 0000 0000 000</code></p>\n\n<p>This bitstring maps to <code>1.0 x 2^-126</code>. <br />\nLet's look at the two choices for the largest positive denormalized numbers.</p>\n\n<p><code>0.(123) x 2^-127</code> (exponent is 127)</p>\n\n<p><code>0.(123) x 2^-126</code> (exponent is 126---this is what's really used in IEEE 754 single precision)</p>\n\n<p>Both choices are smaller than <code>1.0 x 2^-126</code>, the smallest normalized (In particular, notice that the number with the exponent of -126 is smaller). That's good because we want to avoid overlap between normalized and denormalized numbers.</p>\n\n<p>Also notice that the number with the -126 as exponent is larger than the number that has -127 as exponent (both have the same mantissa/significand, and -126 is larger than -127).</p>\n\n<p>Thus, by picking -126 instead of -127, the gap between the largest denormalized number and the smallest normalized number is smaller. Is this a necessary feature? Is it really necessary to make that gap small? Maybe not, but at least there's some rationale behind the decision.</p>\n\n<h2 id=\"convertingnormalizedfrombase10toieee754\">Converting Normalized from Base 10 to IEEE 754</h2>\n\n<p>Let's convert 10.25 from base 10 to IEEE 754 single precision. Here's the steps:</p>\n\n<ul>\n<li>Convert the number left of the radix point to base 2</li>\n</ul>\n\n<p><mark>Thus, 10[10] is 1010[2].</mark></p>\n\n<ul>\n<li>Convert the number right of the radix point to base 2.</li>\n</ul>\n\n<p><mark>Thus, .25[10] is .01[2].</mark></p>\n\n<ul>\n<li>Add the two.</li>\n</ul>\n\n<p><mark>This results in 1010 + 0.01, which is 1010.01.</mark></p>\n\n<ul>\n<li>Write this in binary scientific notation.</li>\n</ul>\n\n<p><mark>This is <code>1010.01 X 2^0</code>, which is <code>1.01001 X 2^3</code>.</mark></p>\n\n<ul>\n<li>Write this in IEEE 754 single precision.</li>\n</ul>\n\n<p><mark>This is <code>1010.01 X 2^0</code>, which is <code>1.01001 X 2^3</code>.</mark></p>\n\n<ul>\n<li><p>Convert 3 to the correct bias. Since the bias is 127, add 127 to 3 to get 130 and convert to binary. This turns out to be <code>1000 0010</code>.</p></li>\n<li><p>Write out the number in the correct representation</p></li>\n</ul>\n\n<p><mark><strong>S</strong> | <strong>Exp</strong> | <strong>Fraction</strong></mark></p>\n\n<p><mark><code>0</code> <code>1000 0010</code> <code>0100 1000 0000 0000 0000 000</code></mark></p>\n\n<p>Notice that the hidden \"1\" is not represented in the fraction.</p>\n\n<h2 id=\"analgorithmforwritingpositiveexponentinexcess127\">An Algorithm for Writing Positive Exponent in Excess 127</h2>\n\n<p>Converting 130 to binary seems a bit painful. It seems to require many steps. However, there's a fairly easy way to convert positive exponents to binary.</p>\n\n<p>First, we take advantage of the following fact: <code>1000 0000</code> maps to exponent +1 in excess 127. If this were excess 128, it would map to 0. It would be nice, in fact, if it were excess 128, because then we would write out the positive number in unsigned binary, then flip the most significant bit from 0 to 1, and we'd be done. (Verify this for yourself with an example or two).</p>\n\n<p>However, excess 127 and excess 128 are only off-by-one, so it's not too hard to adjust the algorithm appropriately. Here's what you do to convert positive exponents to excess 127.</p>\n\n<ul>\n<li>Subtract 1 from the positive exponent.</li>\n<li>Convert the number to unsigned binary, using 8 bits.</li>\n<li>Flip the MSb to 1</li>\n<li>For example, we had an exponent of 3 in the previous example. Subtract 1 to get 2, convert to UB to get <code>0000 0010</code>. Flip the MSb to get <code>1000 0010</code>. That's the answer from the previous section.</li>\n</ul>\n\n<p>Before you memorize this algorithm, you should really try to understand where it comes from.</p>\n\n<p>This is where it comes from. Consider a positive exponent, <code>x</code>, represented in base 10. To convert it to excess 127, we add 127. Thus, we have <code>x + 127</code>. We can rewrite this as: (x - 1) + 128. This is simple algebra.</p>\n\n<p>128 is <code>1000 0000</code> in binary. And we have <code>x - 1</code>, which is where the subtraction of 1 occurs. As long as <code>x - 1</code> is smaller than 128 (and it will be, since the maximum value of <code>x</code> is 128), then it's easy to add this binary number to <code>1000 0000</code>.</p>\n\n<p>Remember, memorization is a poor second to understanding. It's better to understand why something works than to memorize an answer. However, it's even better to understand why something works and remember it too.</p>\n\n<h2 id=\"convertingdenormalizedfrombase10toieee754\">Converting Denormalized from Base 10 to IEEE 754</h2>\n\n<p>Suppose you're asked to convert <code>1.1 x 2^-128</code> to IEEE 754 single precision. How would you do this? If you're not careful, you might think the number is normalized, and you might convert this to a normalized number using the procedure from before.</p>\n\n<p>You'd get stuck trying to convert the exponent, because you'd discover the number is negative, and the number has to be non-negative when convert from base 10 (after adding the bias) to UB.</p>\n\n<p>You can save yourself this hassle if you recall that the smallest, positive normalized number has an exponent of -126, and that the exponent we have is -128, which is less than -126. If you've written the number in binary scientific notation (in canonical form), and the exponent is less than -126, then you have a denormalized number.</p>\n\n<p>Since <code>-128 &lt; -126</code>, the number we're trying to represent is a denormalized number.</p>\n\n<p>The rules for representing denormalized numbers is different from representing normalized numbers.</p>\n\n<p>To represent a denormalized number, you need to shift the radix point so that the exponent is -126. In this case, the exponent must be increased by 2 from -128 to -126, so the radix point must shift left by 2.</p>\n\n<p>This results in: <code>0.011 x 2^-126</code></p>\n\n<p>At this point, it's easy to convert. The exponent bitstring is 08. You copy the bits after the radix point into the fraction. The sign bit is 0.</p>\n\n<p><strong>S</strong> | <strong>Exp</strong> | <strong>Fraction</strong></p>\n\n<p><code>0</code> <code>0000 0000</code> <code>0110 0000 0000 0000 0000 000</code></p>\n\n<h2 id=\"nounsignedfloat\">No Unsigned Float</h2>\n\n<p>Unlike ints, there isn't an unsigned float. One reason for this may be the complicated nature of representing floating point numbers. If we get rid of the sign bit, how would we use it? Would we add one more bit to the exponent? That would make the most sense, since it sits adjacent to the exponent, but the bias would have to be changed.</p>\n\n<p>We could add one more bit to the fraction. At least, that would cause the least amount of disruption. Would that one additonal bit help us in any meaninful way? On the one hand, it allows us to represent twice as many floating point numbers. On the other, it does so by adding a single bit of precision.</p>\n\n<p>Perhaps through this kind of reasoning, the developers of the IEEE 754 standard felt that having an unsigned float did not make sense, and thus there is no unsigned float in IEEE 754 floating point.</p>\n\n<h2 id=\"whysignbitexponentthenfraction\">Why Sign Bit, Exponent, then Fraction?</h2>\n\n<p>If you look at the representation for IEEE 754, you'll notice that it's sign bit, then exponent, then fraction.</p>\n\n<p>Why do it in that order?</p>\n\n<p>Here's a plausible explanation. Suppose you want to compare two dates. The date includes month, day, and year. You use two digits for the month, two for the day, and four for the year. Suppose you want to store the date as a string, and want to use string comparison to compare dates.</p>\n\n<p>Which order should you pick?</p>\n\n<p>You should pick the year, the month, and the day. Why? Because when you are doing string comparison, you compare left to right, and you want the most significant quantity to the left. That's the year.</p>\n\n<p>When you look at a floating point number, the exponent is the most important, so it's to the left of the fraction.</p>\n\n<p>You can also do comparisons because the exponent is written in bias notation (you could use two's complement, as well, although it would make the comparison only a little more complicated).</p>\n\n<p>So why is the sign bit to the far left? Perhaps the answer is because that's where it appears in signed int representation. It may be unusual to have the sign in any other position.</p>\n\n<h2 id=\"summary\">Summary</h2>\n\n<p>After reading and practicing, you should be able to do the following:</p>\n\n<ul>\n<li>Give the names of each of the five categories of floating point numbers in IEEE 754 single precision.</li>\n<li>Given a 32 bitstring, determine which category the bitstring falls in.</li>\n<li>Given a normalized or denormalized number, write the number in canonical binary scientific notation (you can leave the exponent written in base 10).</li>\n<li>Given a number in base 10 or canonical binary scientific notation, convert it to an IEEE 754 single precision floating point number.</li>\n<li>Know what bias is used for normalized numbers.</li>\n<li>Know what exponent is used for denormalized numbers.</li>\n<li>Know what the hidden 1 is.</li>\n</ul>\n\n<p>Sources: <br />\n1.    <a href=\"http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/\">http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/</a> by Charles Lin, 2003</p>",
            "amp": null,
            "image": "/content/images/2015/03/1282353911825.jpg",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-03-11 07:42:31",
            "created_by": 1,
            "updated_at": "2015-03-16 10:30:20",
            "updated_by": 1,
            "published_at": "2015-03-11 08:39:23",
            "published_by": 1
          },
          {
            "id": 9,
            "uuid": "0f240b15-a4ae-4e94-aae1-d32a64877a6b",
            "title": "Working Again",
            "slug": "working-again",
            "markdown": ">Imagine a workman standing on the roof of a house and losing his footing. As he plummeted in free fall, everything within his grasp (a toolbox, for example) would plunge with him. Therefore, from his local perspective gravity wouldn’t seem to exist.\n\n---\n\n![](/content/images/2015/03/Selection_542.png)\n\nI've been **un**productive *WAY* too much. Gotta pay for it now :)\n\n<iframe src='https://onedrive.live.com/embed?cid=D4FD6820FE7941C1&resid=D4FD6820FE7941C1%21328&authkey=AJyFdQ3UD9-sDzQ&em=2&wdStartOn=1' width='476px' height='288px' frameborder='0'>This is an embedded <a target='_blank' href='http://office.com'>Microsoft Office</a> document, powered by <a target='_blank' href='http://office.com/webapps'>Office Online</a>.</iframe>",
            "mobiledoc": null,
            "html": "<blockquote>\n  <p>Imagine a workman standing on the roof of a house and losing his footing. As he plummeted in free fall, everything within his grasp (a toolbox, for example) would plunge with him. Therefore, from his local perspective gravity wouldn’t seem to exist.</p>\n</blockquote>\n\n<hr />\n\n<p><img src=\"/content/images/2015/03/Selection_542.png\" alt=\"\" /></p>\n\n<p>I've been <strong>un</strong>productive <em>WAY</em> too much. Gotta pay for it now :)</p>\n\n<iframe src='https://onedrive.live.com/embed?cid=D4FD6820FE7941C1&resid=D4FD6820FE7941C1%21328&authkey=AJyFdQ3UD9-sDzQ&em=2&wdStartOn=1' width='476px' height='288px' frameborder='0'>This is an embedded <a target='_blank' href='http://office.com'>Microsoft Office</a> document, powered by <a target='_blank' href='http://office.com/webapps'>Office Online</a>.</iframe>",
            "amp": null,
            "image": "/content/images/2015/03/1-gEC_2qXjRBnek7psBtGX0Q.jpeg",
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-03-20 15:17:51",
            "created_by": 1,
            "updated_at": "2016-08-10 19:12:17",
            "updated_by": 1,
            "published_at": "2015-03-20 15:19:35",
            "published_by": 1
          },
          {
            "id": 10,
            "uuid": "656f8113-45b2-423e-8909-dc222605facd",
            "title": "Happy Day",
            "slug": "happy-day",
            "markdown": "Last batch of 2014 class are graduating today.\n\nI haven't. Phew. Whatevs.\n\nBut we must be happy for others, right? So I'm happy too, especially for some specific friends.\n\n---\n\n![](/content/images/2015/03/WP-TESLA.png)\n\nMade a new wallpaper for my workstation. I just realized I like de-contrasted(?) pictures.\n\nI will post my work setup later. But it uses Paper-gtk-theme and numix-icons (I know I said I hated numix, but a man can change).\n\nHappy happy-ing,\n\n>-O",
            "mobiledoc": null,
            "html": "<p>Last batch of 2014 class are graduating today.</p>\n\n<p>I haven't. Phew. Whatevs.</p>\n\n<p>But we must be happy for others, right? So I'm happy too, especially for some specific friends.</p>\n\n<hr />\n\n<p><img src=\"/content/images/2015/03/WP-TESLA.png\" alt=\"\" /></p>\n\n<p>Made a new wallpaper for my workstation. I just realized I like de-contrasted(?) pictures.</p>\n\n<p>I will post my work setup later. But it uses Paper-gtk-theme and numix-icons (I know I said I hated numix, but a man can change).</p>\n\n<p>Happy happy-ing,</p>\n\n<blockquote>\n  <p>-O</p>\n</blockquote>",
            "amp": null,
            "image": "/content/images/2015/03/CA-D05QWkAMCxmu.jpg",
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-03-28 13:39:41",
            "created_by": 1,
            "updated_at": "2016-08-10 19:12:01",
            "updated_by": 1,
            "published_at": "2015-03-28 13:45:43",
            "published_by": 1
          },
          {
            "id": 11,
            "uuid": "5b03075b-a907-428a-aafe-31f3e6e13d11",
            "title": "The Bounce",
            "slug": "untitled-4",
            "markdown": "**Update on 20160811**:\n\n> This game helped me get back on my feet during my time of depression. I will keep this here for future references. 🎮\n\n<iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/HLgnn1fTJb0\" frameborder=\"0\" allowfullscreen></iframe>\n\n    Je veux vivre au bord de la mer\t\n    I want to live by the sea\n    \n    Pas n'importe quelle mer mais cette mer\t\n    Not just any sea but this sea\n    \n    Et si tu me quittais demain, je serais toujours là\t\n    And if you left me tomorrow, I'd always be there\n    \n    Et quand le déluge viendra\t\n    And when the deluge would come\n    \n    Peut-être tu ne seras plus là\t\n    Maybe you'd be gone\n    \n    Là où l'amour existait quand nous étions si jeunes\t\n    From where our love was when we were so young\n    \n    Et c'est trop, trop, trop pour moi\t\n    And it's much too much for me\n    \n    Le choix n'est pas si clair\t\n    The choice isn't so clear\n    \n    Et c'est trop, trop, trop pour moi\t\n    And it's all too much for me\n    \n    D'un côté la fille, de l'autre le sable et la mer\t\n    On one side the girl, on the other the sand and the sea\n    \n    La fille, le sable dans son âme\t\n    The girl, the sand in her soul\n    \n    Le garçon, l'amour qui se crâme\t\n    The boy, the love that burns\n    \n    Une vie qui s'est perdue en cherchant une juste revanche\t\n    A life that's lost searching for a just revenge\n    \n    Et c'est trop, trop, trop pour moi\t\n    And it's much too much for me\n    \n    Le choix n'est pas si clair\t\n    The choice isn't so clear\n    \n    Et c'est trop, trop, trop pour moi\t\n    And it's all too much for me\n    \n    D'un côté la fille, de l'autre le sable et la mer\t\n    On one side the girl, on the other the sand and the sea\n    \n    Je veux vivre au bord de la mer\t\n    I want to live by the sea\n    \n    Pas n'importe quelle mer mais cette mer\t\n    Not just any sea but this sea\n    \n    Et si tu me quittais demain, je serais toujours là\t\n    And if you left me tomorrow, I'd always be there\n    \n---\n\nPlay the game! http://www.newgrounds.com/portal/view/221520",
            "mobiledoc": null,
            "html": "<p><strong>Update on 20160811</strong>:</p>\n\n<blockquote>\n  <p>This game helped me get back on my feet during my time of depression. I will keep this here for future references. 🎮</p>\n</blockquote>\n\n<iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/HLgnn1fTJb0\" frameborder=\"0\" allowfullscreen></iframe>\n\n<pre><code>Je veux vivre au bord de la mer    \nI want to live by the sea\n\nPas n'importe quelle mer mais cette mer    \nNot just any sea but this sea\n\nEt si tu me quittais demain, je serais toujours là    \nAnd if you left me tomorrow, I'd always be there\n\nEt quand le déluge viendra    \nAnd when the deluge would come\n\nPeut-être tu ne seras plus là    \nMaybe you'd be gone\n\nLà où l'amour existait quand nous étions si jeunes    \nFrom where our love was when we were so young\n\nEt c'est trop, trop, trop pour moi    \nAnd it's much too much for me\n\nLe choix n'est pas si clair    \nThe choice isn't so clear\n\nEt c'est trop, trop, trop pour moi    \nAnd it's all too much for me\n\nD'un côté la fille, de l'autre le sable et la mer    \nOn one side the girl, on the other the sand and the sea\n\nLa fille, le sable dans son âme    \nThe girl, the sand in her soul\n\nLe garçon, l'amour qui se crâme    \nThe boy, the love that burns\n\nUne vie qui s'est perdue en cherchant une juste revanche    \nA life that's lost searching for a just revenge\n\nEt c'est trop, trop, trop pour moi    \nAnd it's much too much for me\n\nLe choix n'est pas si clair    \nThe choice isn't so clear\n\nEt c'est trop, trop, trop pour moi    \nAnd it's all too much for me\n\nD'un côté la fille, de l'autre le sable et la mer    \nOn one side the girl, on the other the sand and the sea\n\nJe veux vivre au bord de la mer    \nI want to live by the sea\n\nPas n'importe quelle mer mais cette mer    \nNot just any sea but this sea\n\nEt si tu me quittais demain, je serais toujours là    \nAnd if you left me tomorrow, I'd always be there\n</code></pre>\n\n<hr />\n\n<p>Play the game! <a href=\"http://www.newgrounds.com/portal/view/221520\">http://www.newgrounds.com/portal/view/221520</a></p>",
            "amp": null,
            "image": "/content/images/2015/03/otQGn3D.jpg",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-03-31 08:36:50",
            "created_by": 1,
            "updated_at": "2016-08-10 19:11:22",
            "updated_by": 1,
            "published_at": "2015-03-31 08:44:41",
            "published_by": 1
          },
          {
            "id": 12,
            "uuid": "ebcfaa1d-3cc7-4426-a5ec-db7e50aa92c2",
            "title": "On VC Deals",
            "slug": "on-vc-s",
            "markdown": "> VCs aren't assholes, generally, but their standard terms are a bad deal for founders, generally. I've thought about this a lot over the past 25 years. In the past I've seen VCs do really bad things (like force decisions that set the company back 18 months bad.) The problem is, when you get a \"good\" VC that doesn't force bad decisions on you ,the cost of the money, mostly in deal terms, is too damn high.\n\n>And when you push back on them about this the response is you get are generally:\n\n>\"This is a standard term\" eg: everybody else is doing it. Well, tough. I'm actually reading before signing.\n\n>\"If we don't have this method of double dipping [one of the four different ways they are doing so], then you could take the company and sell it for the money we put into it and that would be a bad deal for us.\" You mean your share of the company in such a situation isn't equal to the amount of money you put in? First off, I don't believe you because this valuation is kind of a joke and you've spent weeks telling us scary stories to try and keep it down, and secondly, your inability to get the equity you want for your money is your problem, not mine. That is like saying you think you're getting a bad deal so you want to cheat me to get a better deal? So let me get this straight, I took real risk and built up sweat equity, but you want my shares to be discounted effectively because you don't trust me? Ok, how about we discount your shares because I don't trust you? (I don't trust anyone who doesn't trust me. Usually they're projecting their own intentions.) Also, all you're doing-- at best-- is putting money in. Money can be acquired from any number of places and methods. The expertise we gained while building the company is irreplaceable and the knowledge of our own product and the risk we took getting it to here is far more valuable than your money. So, we have a split of the shares that accounts for that. The shares you get account for all of that.\n\n>\"trust us\". Nope, if you don't trust me, don't do a deal with me.\n\n>Don't even get me started on founders vesting their shares. You build a company, you have sweat equity, but the VC wants to reset the vesting? Why ? You can't vote unvested shares. They will give you a song and dance about \"what if a founder leaves?\" Well, we covered that in our articles of incorporation because we're not idiots, but they will ignore that and insist that \"all founders must vest all their shares\". (this is more common on early VC deals.) That's straight up taking paid for (with equity) and earn shares and turning them into a class of potential shares. Nope Nope Nope. Give founders part of the option pool as an incentive, fine. But reseting is just setting you up to be sucker punched when they want to replace a founder (because they don't like how things are going and need a scapegoat, no matter that it's the worst thing for the business at that point. But Tada! All your shares you already earned are now vesting again! Look at that! Even thought the other founders don't want you out, you don't have enough votes!\n\n>I think that the culture of \"startups\" over the past decade has become a bit cargo cult where there's a specific plane you build to get the money to rain from the sky.\n\n>This is: Go to accelerator, do VC deal, take the VC money and buy growth, use that to do another VC deal, rinse and repeat until you either stumble onto a working business (Uber, AirBnB) or you go bust (get Satisfaction)\n\n>The problem with this is that the cost of those VC deals are not in the founders interests. Far too often they hit base hits and build viable fast growing companies and then get taken out and don't get adequately compensated (and all the non-founder employees really get screwed.)\n\n>The other problems with this is once you take money from a VC you're locked into trying, and repeatedly betting the company, on being the next Uber. Being 37 Signals is not sufficient. Being Github (before the A18Z investment) is not sufficient.... even though both of those are obviously great fast growing companies that would make their founders and employees a lot of money at a liquidation event. And such event is far less likely under VCs because they want a $1B valuation (in fact their fund NEEDS a $1B valuation to cover all the losers)... whereas a $50M, $100M, $250M or $500M valuation (with no dilution from taking VC money) even though it's drastically smaller would result in the founders and early employees getting rich, and even the later employees getting a nice bonus.\n\n>Take angel money on good, clean, simple terms. If you need that to get going, go for it.\n\n>I think the age of the VCs is past. They just haven't realized it yet.\n\n>Ok, whenever I say things that are critical of VCs I get a lot of responses that are sorta knee jerk defenses of VCs. I've been working for startups and founding startups for over 25 years. I've seen it back when it was much worse and it cost a lot more to do a company. I've ridden this industry from BEFORE the dotcom bubble started to inflate. I'm speaking form experience here. Even when the VCs are \"good\" - in the top %10 of the VCs I've had direct experience with-- the deal isn't good for the founders in the end. They paid too much for their money.\n\n>You want VC money. Ok, why? Because that's your dream? Your dream should be to build a company.\n\n>Your plan should be to build a compelling product or service that really makes people go crazy with desire to throw money at you for it. I'm talking about CUSTOMERS.\n\n>All the time you spend dealign with VCs takes away from that and the deals aren't good.\n\n>You need money? Ok, go on Angel.co, get backed by a syndicate. Find Angels in your community. Charge for your product from day one. If github can do it, you can do it. Plow your profits into growth and product development. Take as little money as you can to get top product market fit. VC money is wasted before that point anyway. Even angel money should just be used to keep the lights on until you get to product market fit. Once you haver that, you have revenue, maybe take some more angel money to jumpstart marketing, but plow your operational profits int growing the business.\n\n>Don't delude yourself into thinking your pokemon website is a billion dollar business. It isn't.\n\n>Don't even waste time chasing VCs. By definition that are bad at picking and they will try to force you to bet it all only our pokemon wiki being a billion dollar business.\n\n>GS may have made a bunch of mistakes, but I'm using decades of experience here to reach my conclusions.\n\n>If you go thru YC or TechStars (but not any other accelerator) then maybe you might have a real business that could be a billion dollar business, but even then why not raise angel money instead of VC money? And I mean angel money on terms like the YC deferred-valuation deal that replaces convertible notes. (can't remember the name at the moment.)\nDon't do any deal with liquidation preferences or any other kind of shenanigans. (And don't wave your hands about why VCs need LP in front of me. Your math doesn't add up, it can't add up.)\n\n>The model will never change until VCs realize they are dinosaurs. Or let VCs fund late stage deals, I'm sure their terms are not so terrible (unless the company is dying.)\n\n>But VCs for startups are obsolete.\n\nfrom [Sprinklr Acquires GetSatisfaction, Founders Get Nothing](https://news.ycombinator.com/item?id=9365123) (Hacker News)",
            "mobiledoc": null,
            "html": "<blockquote>\n  <p>VCs aren't assholes, generally, but their standard terms are a bad deal for founders, generally. I've thought about this a lot over the past 25 years. In the past I've seen VCs do really bad things (like force decisions that set the company back 18 months bad.) The problem is, when you get a \"good\" VC that doesn't force bad decisions on you ,the cost of the money, mostly in deal terms, is too damn high.</p>\n  \n  <p>And when you push back on them about this the response is you get are generally:</p>\n  \n  <p>\"This is a standard term\" eg: everybody else is doing it. Well, tough. I'm actually reading before signing.</p>\n  \n  <p>\"If we don't have this method of double dipping [one of the four different ways they are doing so], then you could take the company and sell it for the money we put into it and that would be a bad deal for us.\" You mean your share of the company in such a situation isn't equal to the amount of money you put in? First off, I don't believe you because this valuation is kind of a joke and you've spent weeks telling us scary stories to try and keep it down, and secondly, your inability to get the equity you want for your money is your problem, not mine. That is like saying you think you're getting a bad deal so you want to cheat me to get a better deal? So let me get this straight, I took real risk and built up sweat equity, but you want my shares to be discounted effectively because you don't trust me? Ok, how about we discount your shares because I don't trust you? (I don't trust anyone who doesn't trust me. Usually they're projecting their own intentions.) Also, all you're doing-- at best-- is putting money in. Money can be acquired from any number of places and methods. The expertise we gained while building the company is irreplaceable and the knowledge of our own product and the risk we took getting it to here is far more valuable than your money. So, we have a split of the shares that accounts for that. The shares you get account for all of that.</p>\n  \n  <p>\"trust us\". Nope, if you don't trust me, don't do a deal with me.</p>\n  \n  <p>Don't even get me started on founders vesting their shares. You build a company, you have sweat equity, but the VC wants to reset the vesting? Why ? You can't vote unvested shares. They will give you a song and dance about \"what if a founder leaves?\" Well, we covered that in our articles of incorporation because we're not idiots, but they will ignore that and insist that \"all founders must vest all their shares\". (this is more common on early VC deals.) That's straight up taking paid for (with equity) and earn shares and turning them into a class of potential shares. Nope Nope Nope. Give founders part of the option pool as an incentive, fine. But reseting is just setting you up to be sucker punched when they want to replace a founder (because they don't like how things are going and need a scapegoat, no matter that it's the worst thing for the business at that point. But Tada! All your shares you already earned are now vesting again! Look at that! Even thought the other founders don't want you out, you don't have enough votes!</p>\n  \n  <p>I think that the culture of \"startups\" over the past decade has become a bit cargo cult where there's a specific plane you build to get the money to rain from the sky.</p>\n  \n  <p>This is: Go to accelerator, do VC deal, take the VC money and buy growth, use that to do another VC deal, rinse and repeat until you either stumble onto a working business (Uber, AirBnB) or you go bust (get Satisfaction)</p>\n  \n  <p>The problem with this is that the cost of those VC deals are not in the founders interests. Far too often they hit base hits and build viable fast growing companies and then get taken out and don't get adequately compensated (and all the non-founder employees really get screwed.)</p>\n  \n  <p>The other problems with this is once you take money from a VC you're locked into trying, and repeatedly betting the company, on being the next Uber. Being 37 Signals is not sufficient. Being Github (before the A18Z investment) is not sufficient.... even though both of those are obviously great fast growing companies that would make their founders and employees a lot of money at a liquidation event. And such event is far less likely under VCs because they want a $1B valuation (in fact their fund NEEDS a $1B valuation to cover all the losers)... whereas a $50M, $100M, $250M or $500M valuation (with no dilution from taking VC money) even though it's drastically smaller would result in the founders and early employees getting rich, and even the later employees getting a nice bonus.</p>\n  \n  <p>Take angel money on good, clean, simple terms. If you need that to get going, go for it.</p>\n  \n  <p>I think the age of the VCs is past. They just haven't realized it yet.</p>\n  \n  <p>Ok, whenever I say things that are critical of VCs I get a lot of responses that are sorta knee jerk defenses of VCs. I've been working for startups and founding startups for over 25 years. I've seen it back when it was much worse and it cost a lot more to do a company. I've ridden this industry from BEFORE the dotcom bubble started to inflate. I'm speaking form experience here. Even when the VCs are \"good\" - in the top %10 of the VCs I've had direct experience with-- the deal isn't good for the founders in the end. They paid too much for their money.</p>\n  \n  <p>You want VC money. Ok, why? Because that's your dream? Your dream should be to build a company.</p>\n  \n  <p>Your plan should be to build a compelling product or service that really makes people go crazy with desire to throw money at you for it. I'm talking about CUSTOMERS.</p>\n  \n  <p>All the time you spend dealign with VCs takes away from that and the deals aren't good.</p>\n  \n  <p>You need money? Ok, go on Angel.co, get backed by a syndicate. Find Angels in your community. Charge for your product from day one. If github can do it, you can do it. Plow your profits into growth and product development. Take as little money as you can to get top product market fit. VC money is wasted before that point anyway. Even angel money should just be used to keep the lights on until you get to product market fit. Once you haver that, you have revenue, maybe take some more angel money to jumpstart marketing, but plow your operational profits int growing the business.</p>\n  \n  <p>Don't delude yourself into thinking your pokemon website is a billion dollar business. It isn't.</p>\n  \n  <p>Don't even waste time chasing VCs. By definition that are bad at picking and they will try to force you to bet it all only our pokemon wiki being a billion dollar business.</p>\n  \n  <p>GS may have made a bunch of mistakes, but I'm using decades of experience here to reach my conclusions.</p>\n  \n  <p>If you go thru YC or TechStars (but not any other accelerator) then maybe you might have a real business that could be a billion dollar business, but even then why not raise angel money instead of VC money? And I mean angel money on terms like the YC deferred-valuation deal that replaces convertible notes. (can't remember the name at the moment.)\n  Don't do any deal with liquidation preferences or any other kind of shenanigans. (And don't wave your hands about why VCs need LP in front of me. Your math doesn't add up, it can't add up.)</p>\n  \n  <p>The model will never change until VCs realize they are dinosaurs. Or let VCs fund late stage deals, I'm sure their terms are not so terrible (unless the company is dying.)</p>\n  \n  <p>But VCs for startups are obsolete.</p>\n</blockquote>\n\n<p>from <a href=\"https://news.ycombinator.com/item?id=9365123\">Sprinklr Acquires GetSatisfaction, Founders Get Nothing</a> (Hacker News)</p>",
            "amp": null,
            "image": "/content/images/2015/04/win81stock-2880.png",
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-04-13 10:52:05",
            "created_by": 1,
            "updated_at": "2016-08-10 19:08:31",
            "updated_by": 1,
            "published_at": "2015-04-13 10:59:20",
            "published_by": 1
          },
          {
            "id": 13,
            "uuid": "7fed4723-e4da-42d7-bc4d-ba3b5603539d",
            "title": "Monkey Traps",
            "slug": "monkey-traps",
            "markdown": ">“It’s only after we’ve lost everything that we’re free to do anything.”\n\nThat was a sentence from Chuck Palahniuk's *Fight Club*. I just realized how true it is these days.\n\nQuite recently\\*, I read this awesome article posted on [The Crew Blog](http://blog.pickcrew.com/past-experience-blinding/).\n\nIt wrote about how our past experiences can color how we see the future and blind us from the multitude of opportunities out there. I'll show a section I liked.\n\n![](/content/images/2015/04/0-QxBo6AFwhxQjsauA.jpg)\n> In Zen and the Art of Motorcycle Maintenance, Robert Pirsig describes ‘the old South Indian Monkey Trap‘ — a hollowed-out coconut chained to a stake with some rice inside that can only be reached through a very small hole. When the monkey grabs the rice his clenched fist won’t fit back through the hole and he’s trapped — not by anything physical, but because he just won’t let go.\n\nI realized that I have *way* too many monkey traps. Monkey traps that aren't even good, even damaging to my sanity. Included are gaming stuff and other things. [Sunk Cost Fallacy](https://en.wikipedia.org/wiki/Sunk_costs#Loss_aversion_and_the_sunk_cost_fallacy) might be one of the reason why it's hard to let go.\n\n\nSo I'm decluttering. Gradually. I'm currently in the state where I only have 7 shirts, 2 pants, 2 jackets and formal/undies in my drawer. Most of my stuff have been picked up by my family away from my dorm. It's freeing. \n\nThere was a story about a guy who can fit *everything* that he owns into a bag. The question \"Is this all you have\" at the airports just got literal. He can tell you each and every items that he has, because he only owns the essentials.\n\nNow can you? I don't really need to know the answer, but I will try to live like that, *physically* and *mentally*. I still have many things to do though as change doesn't happen overweek. But I'm on my way.\n\nI think that in the age of consumerism and abundant choices, the best way to live is by being a minimalist.\n\n\n![](/content/images/2015/04/1-Z2sWiLQd8tkfDrXJGTMbMQ.png)\n\nBe free from your monkey traps.\n\n\n##Read List\n\n- https://medium.com/who-what-why/your-past-experiences-are-blinding-you-bd3902b762e6\n- http://dspace.brunel.ac.uk/bitstream/2438/2276/1/Einstellung-Cognition.pdf\n- http://time.com/3738202/minimalism-clutter-too-much-stuff/\n- http://www.reddit.com/r/minimalism/comments/2v29mi/everything\\_i\\_own\\_fits\\_onto\\_my\\_bike/\n\n\n>“There was nowhere to go but everywhere. So just keep on rolling under the stars.” Jack Kerouac, On the Road",
            "mobiledoc": null,
            "html": "<blockquote>\n  <p>“It’s only after we’ve lost everything that we’re free to do anything.”</p>\n</blockquote>\n\n<p>That was a sentence from Chuck Palahniuk's <em>Fight Club</em>. I just realized how true it is these days.</p>\n\n<p>Quite recently*, I read this awesome article posted on <a href=\"http://blog.pickcrew.com/past-experience-blinding/\">The Crew Blog</a>.</p>\n\n<p>It wrote about how our past experiences can color how we see the future and blind us from the multitude of opportunities out there. I'll show a section I liked.</p>\n\n<p><img src=\"/content/images/2015/04/0-QxBo6AFwhxQjsauA.jpg\" alt=\"\" /></p>\n\n<blockquote>\n  <p>In Zen and the Art of Motorcycle Maintenance, Robert Pirsig describes ‘the old South Indian Monkey Trap‘ — a hollowed-out coconut chained to a stake with some rice inside that can only be reached through a very small hole. When the monkey grabs the rice his clenched fist won’t fit back through the hole and he’s trapped — not by anything physical, but because he just won’t let go.</p>\n</blockquote>\n\n<p>I realized that I have <em>way</em> too many monkey traps. Monkey traps that aren't even good, even damaging to my sanity. Included are gaming stuff and other things. <a href=\"https://en.wikipedia.org/wiki/Sunk_costs#Loss_aversion_and_the_sunk_cost_fallacy\">Sunk Cost Fallacy</a> might be one of the reason why it's hard to let go.</p>\n\n<p>So I'm decluttering. Gradually. I'm currently in the state where I only have 7 shirts, 2 pants, 2 jackets and formal/undies in my drawer. Most of my stuff have been picked up by my family away from my dorm. It's freeing. </p>\n\n<p>There was a story about a guy who can fit <em>everything</em> that he owns into a bag. The question \"Is this all you have\" at the airports just got literal. He can tell you each and every items that he has, because he only owns the essentials.</p>\n\n<p>Now can you? I don't really need to know the answer, but I will try to live like that, <em>physically</em> and <em>mentally</em>. I still have many things to do though as change doesn't happen overweek. But I'm on my way.</p>\n\n<p>I think that in the age of consumerism and abundant choices, the best way to live is by being a minimalist.</p>\n\n<p><img src=\"/content/images/2015/04/1-Z2sWiLQd8tkfDrXJGTMbMQ.png\" alt=\"\" /></p>\n\n<p>Be free from your monkey traps.</p>\n\n<h2 id=\"readlist\">Read List</h2>\n\n<ul>\n<li><a href=\"https://medium.com/who-what-why/your-past-experiences-are-blinding-you-bd3902b762e6\">https://medium.com/who-what-why/your-past-experiences-are-blinding-you-bd3902b762e6</a></li>\n<li><a href=\"http://dspace.brunel.ac.uk/bitstream/2438/2276/1/Einstellung-Cognition.pdf\">http://dspace.brunel.ac.uk/bitstream/2438/2276/1/Einstellung-Cognition.pdf</a></li>\n<li><a href=\"http://time.com/3738202/minimalism-clutter-too-much-stuff/\">http://time.com/3738202/minimalism-clutter-too-much-stuff/</a></li>\n<li><a href=\"http://www.reddit.com/r/minimalism/comments/2v29mi/everything_i_own_fits_onto_my_bike/\">http://www.reddit.com/r/minimalism/comments/2v29mi/everything_i_own_fits_onto_my_bike/</a></li>\n</ul>\n\n<blockquote>\n  <p>“There was nowhere to go but everywhere. So just keep on rolling under the stars.” Jack Kerouac, On the Road</p>\n</blockquote>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-04-19 22:21:07",
            "created_by": 1,
            "updated_at": "2015-04-19 23:22:11",
            "updated_by": 1,
            "published_at": "2015-04-19 23:04:42",
            "published_by": 1
          },
          {
            "id": 14,
            "uuid": "424ff306-59e9-444c-9c0e-ec6f032929a6",
            "title": "Empty Throne (Personal Log 20150511)",
            "slug": "empty-throne",
            "markdown": "There was once a young woman who struggled against the world with me. A person who reigned in a throne deeper than my heart itself.\n\nAlongside, there was a draft of some gibberish writing, a manifestation of the rawest form of my emotions. Child-like, perhaps, but surely as fair as the subject described. Maybe less.\n\nBut now, there's none. The throne is empty and the paper is blank.\n\nFor all we know, the maiden is maybe seeking for another throne(s?).\n\nAnd the writing, maybe it's waiting for another paper.",
            "mobiledoc": null,
            "html": "<p>There was once a young woman who struggled against the world with me. A person who reigned in a throne deeper than my heart itself.</p>\n\n<p>Alongside, there was a draft of some gibberish writing, a manifestation of the rawest form of my emotions. Child-like, perhaps, but surely as fair as the subject described. Maybe less.</p>\n\n<p>But now, there's none. The throne is empty and the paper is blank.</p>\n\n<p>For all we know, the maiden is maybe seeking for another throne(s?).</p>\n\n<p>And the writing, maybe it's waiting for another paper.</p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-05-11 16:26:21",
            "created_by": 1,
            "updated_at": "2016-12-07 13:17:29",
            "updated_by": 1,
            "published_at": "2015-05-11 16:55:07",
            "published_by": 1
          },
          {
            "id": 15,
            "uuid": "054a02c3-9e6f-4859-a935-4e937c19a211",
            "title": "Final Assignment Tech Stack (Devlog 20150527)",
            "slug": "ta-progress-report-devlog-20150527",
            "markdown": "![](/content/images/2015/05/2015-05-27-015436.jpg)\n\nHello.\n\nIt's been a while since I updated about my final project, is it not?\n\nAs a matter of fact, I'm still building it.\n\nFor those who forgot, and the uninitiated, my project was about *Modular Home Automation*. I will update about it in a sec.\n\n---\n\nSo far, the project has gone through several major changes. The first iteration (day 0) is no different than the old system made by my colleagues (Victor, Dhimas, Wahyu) which used [WebIOPi](https://code.google.com/p/webiopi/) to control the Pi's GPIO directly. This proved to be *very* inefficient so we scrapped it pretty quick.\n\nThe second iteration used PHP as its back-end. We aimed it to be some kind of web-app which can later be translated into native apps through help from services like [PhoneGap](http://phonegap.com/) or others. I wanted to use Laravel for the PHP back-end, but I realized that it does not solve the problem of communication between the server and the device controller (a Raspberry Pi)\n\n![](/content/images/2015/05/Raspberry-Pi-GPIO-Layout-Model-B-Plus.png)\n\n---\n\nOur third iteration, which is what we have now, solved almost all of our needs in fulfilling our specs. This is the stack we use.\n\n# Devices\n\n## Slave\n\n- Arduino-based circuit with XBEE for communication to Pi.\n![](/content/images/2015/05/Switch-Replacer.png)\n- For lamp controller, we wanted to make this configuration to enable choosing between manual mode or automation mode. It was scrapped for the unreliability and confusion it might cause. We'll keep things simple for now.\n\n##Controller\n- Raspberry Pi v2 running a client app as a service.\n- Client app is a Node.js app, using [Socket.io](http://socket.io/) to communicate (receive and send events) with the server. This removes the need to configure port forwarding shenanigans and also enabling real-time communication easily. Talk about efficiency, baby.\n- For now, the controller talks to the above devices using star topology. This has some concerns, but this will do for a while.\n\n# Server\n- Our server is a Node.js app with MongoDB database.\n- It serves RESTful APIs, something really cool I learned while I interned in [Bornevia](http://bornevia.com/) earlier this year. Put Socketio and many, many good practices too, while we're at it. (If you're a dev, you won't regret landing a job there, the culture is so intensely fun. If you're a user, do try the software. They make a great CRM software. Will blog about this later.)\n- Back again, it also serves as a Websocket server for socket.io.\n\n# Client\n- We created an Android client for this.\n- APIs are consumed using ~~Retrofit~~ primitive Apache's HTTP.\n- Socket.io client, but only for notifications from Controller, such as Camera Triggers.\n\nSo yeah that's it for now. You can review our codes in our [Github](https://www.github.com/modulair) and give critics, suggestions, or even pull requests. Be sure to come to EEDAYS next week @ ITB.\n\nBack to work now,\n-O",
            "mobiledoc": null,
            "html": "<p><img src=\"/content/images/2015/05/2015-05-27-015436.jpg\" alt=\"\" /></p>\n\n<p>Hello.</p>\n\n<p>It's been a while since I updated about my final project, is it not?</p>\n\n<p>As a matter of fact, I'm still building it.</p>\n\n<p>For those who forgot, and the uninitiated, my project was about <em>Modular Home Automation</em>. I will update about it in a sec.</p>\n\n<hr />\n\n<p>So far, the project has gone through several major changes. The first iteration (day 0) is no different than the old system made by my colleagues (Victor, Dhimas, Wahyu) which used <a href=\"https://code.google.com/p/webiopi/\">WebIOPi</a> to control the Pi's GPIO directly. This proved to be <em>very</em> inefficient so we scrapped it pretty quick.</p>\n\n<p>The second iteration used PHP as its back-end. We aimed it to be some kind of web-app which can later be translated into native apps through help from services like <a href=\"http://phonegap.com/\">PhoneGap</a> or others. I wanted to use Laravel for the PHP back-end, but I realized that it does not solve the problem of communication between the server and the device controller (a Raspberry Pi)</p>\n\n<p><img src=\"/content/images/2015/05/Raspberry-Pi-GPIO-Layout-Model-B-Plus.png\" alt=\"\" /></p>\n\n<hr />\n\n<p>Our third iteration, which is what we have now, solved almost all of our needs in fulfilling our specs. This is the stack we use.</p>\n\n<h1 id=\"devices\">Devices</h1>\n\n<h2 id=\"slave\">Slave</h2>\n\n<ul>\n<li>Arduino-based circuit with XBEE for communication to Pi.\n<img src=\"/content/images/2015/05/Switch-Replacer.png\" alt=\"\" /></li>\n<li>For lamp controller, we wanted to make this configuration to enable choosing between manual mode or automation mode. It was scrapped for the unreliability and confusion it might cause. We'll keep things simple for now.</li>\n</ul>\n\n<h2 id=\"controller\">Controller</h2>\n\n<ul>\n<li>Raspberry Pi v2 running a client app as a service.</li>\n<li>Client app is a Node.js app, using <a href=\"http://socket.io/\">Socket.io</a> to communicate (receive and send events) with the server. This removes the need to configure port forwarding shenanigans and also enabling real-time communication easily. Talk about efficiency, baby.</li>\n<li>For now, the controller talks to the above devices using star topology. This has some concerns, but this will do for a while.</li>\n</ul>\n\n<h1 id=\"server\">Server</h1>\n\n<ul>\n<li>Our server is a Node.js app with MongoDB database.</li>\n<li>It serves RESTful APIs, something really cool I learned while I interned in <a href=\"http://bornevia.com/\">Bornevia</a> earlier this year. Put Socketio and many, many good practices too, while we're at it. (If you're a dev, you won't regret landing a job there, the culture is so intensely fun. If you're a user, do try the software. They make a great CRM software. Will blog about this later.)</li>\n<li>Back again, it also serves as a Websocket server for socket.io.</li>\n</ul>\n\n<h1 id=\"client\">Client</h1>\n\n<ul>\n<li>We created an Android client for this.</li>\n<li>APIs are consumed using <del>Retrofit</del> primitive Apache's HTTP.</li>\n<li>Socket.io client, but only for notifications from Controller, such as Camera Triggers.</li>\n</ul>\n\n<p>So yeah that's it for now. You can review our codes in our <a href=\"https://www.github.com/modulair\">Github</a> and give critics, suggestions, or even pull requests. Be sure to come to EEDAYS next week @ ITB.</p>\n\n<p>Back to work now, <br />\n-O</p>",
            "amp": null,
            "image": "/content/images/2016/09/mustadi-xyz--4-.png",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-05-26 18:55:28",
            "created_by": 1,
            "updated_at": "2016-09-27 11:05:40",
            "updated_by": 1,
            "published_at": "2015-05-26 19:42:10",
            "published_by": 1
          },
          {
            "id": 16,
            "uuid": "6f9edb83-4a1a-4e8e-85f9-5d4c6176e1a1",
            "title": "Camera Motion Detection and Real-time Notification to Android through Socket.io (Devlog 20150528)",
            "slug": "camera-motion-detection-and-real-time-notification-through-websocket-devlog-20150528",
            "markdown": "![](/content/images/2015/05/2015-05-28-012114.jpg)\n\nGood evening, everyone in my timezone. Logging in from my partner's dorm room.\n\nToday I setup a notification for [Lavrsen](http://www.lavrsen.dk/)'s [Motion](http://www.lavrsen.dk/foswiki/bin/view/Motion/WebHome) app that connects to an Android system.\n\nFirst things first, a bit of introduction. \n\n>Motion is a program that monitors the video signal from cameras. It is able to detect if a significant part of the picture has changed; in other words, it can detect motion.\n\n>The program is written in C and is made for the Linux operating system, (using the video4linux interface). Motion is a command line based tool whose output can be either jpeg, ppm fies or mpeg video sequences. Motion is strictly command line driven and can run as a daemon with a rather small footprint and do.\n\nSo yeah we are using this for our [Final Project](http://blog.muhammadmustadi.com/2015/05/26/ta-progress-report-devlog-20150527/)'s webcam integration. There's an email notification built already [using SSMTP and mpack](http://ozzmaker.com/2012/12/03/send-email-from-the-raspberry-pi-or-linux-command-line-with-attachments/) but we'll not cover that this time. Motion is available for streaming, but for reasons, we are only using it's motion-detecting capabilities.\n\nMotion can be set up to execute commands for various triggers, we will use its `on_motion_detected` event listener.\n\nFirst, we will create a nodejs app at `~`to emit camera trigger events to our Socket.io server. We will do this in our Raspberry Pi, but any other systems will do as fine.\n\n$`mkdir /home/pi/camera && cd $_`\n\n$`npm init` (follow through the instructions as you see fit)\n\n$`npm i --save socket.io-client`\n\n$`nano camera.js`\n\ntype the code\n\n```js\n\t\t\n    var io = require('socket.io-client')('http://modulair.muhammadmustadi.com');\n        \n    io.on('connect', function (data) {\n        io.emit('motion_detected', {message: 'motion detected', timestamp: Date.now()})\n    });\n        \n    //exit process after server receives data\n    io.on('motion_received', function (data) {\n        io.disconnect();\n        process.exit();\n    });\n```\n\nand add that to `motion.conf`:\n\n$`sudo nano /etc/motion/motion.conf`\n\n    ...\n    on_motion_detected node /home/pi/camera/camera.js && <other commands such as mpack>\n    ...\n    \n$`sudo reboot` to make the changes take effect.\n\n---\n\nFor the socket.io server, we make some changes.\n\n    // example Express app\n    var app = require('express')();\n    var http = require('http').Server(app);\n    var io = require('socket.io')(http);\n    \n    io.on('connection', function (socket) {\n    // ...\n    socket.on('motion_detected', function (data) {\n        io.emit('motion_notification', data);\n        socket.emit('motion_received', {message: 'motion received.'});\n    });\n    // ...\n    \n\nYou can see that we simply pass the `motion_detected` payload to `motion_notification`, which will be used by the Android client. `motion_received` is then sent back to the one-off node app so that it can close connection and exit the process accordingly.\n\n---\n\nFor the Android App, we will create a socketio-client, event listener, and a simple notification builder. example is my DashboardActivity.\n\n    import com.github.nkzawa.socketio.client.IO;\n    import com.github.nkzawa.socketio.client.Socket;\n    import com.github.nkzawa.emitter.Emitter;\n    \n    // ...\n    \n    public class DashboardActivity extends ActionBarActivity {\n\n      private Socket mSocket;\n      {\n          try {\n              mSocket = IO.socket(\"http://modulair.muhammadmustadi.com\");\n          } catch (URISyntaxException e) {}\n      }\n      \n      @Override\n      protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        mSocket.on(\"motion_notification\", new Emitter.Listener() {\n            @Override\n            public void call(final Object... args) {\n                runOnUiThread(new Runnable() {\n                    @Override\n                    public void run() {\n                        JSONObject data = (JSONObject) args[0];\n                        String messageCam;\n                        try {\n                            messageCam = data.getString(\"message\");\n                        } catch (JSONException e) {\n                            return;\n                        }\n                        Log.v(\"camera\", messageCam);\n                        createNotification(messageCam);\n                    }\n                });\n            }\n        });\n\n        mSocket.connect();\n        \n        // ...\n      }\n      \n          private void createNotification(String message) {\n        NotificationCompat.Builder mBuilder =\n                new NotificationCompat.Builder(this)\n                        .setSmallIcon(R.mipmap.ic_launcher)\n                        .setContentTitle(\"Modulair notification\")\n                        .setContentText(message);\n                        // Creates an explicit intent for an Activity in your app\n        Intent resultIntent = new Intent(this, DashboardActivity.class);\n        // The stack builder object will contain an artificial back stack for the\n        // started Activity.\n        // This ensures that navigating backward from the Activity leads out of\n        // your application to the Home screen.\n        TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);\n        // Adds the back stack for the Intent (but not the Intent itself)\n        stackBuilder.addParentStack(DashboardActivity.class);\n        // Adds the Intent that starts the Activity to the top of the stack\n        stackBuilder.addNextIntent(resultIntent);\n        PendingIntent resultPendingIntent =\n                stackBuilder.getPendingIntent(\n                        0,\n                        PendingIntent.FLAG_UPDATE_CURRENT\n                );\n        mBuilder.setContentIntent(resultPendingIntent);\n        NotificationManager mNotificationManager =\n                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n                // TODO: the integer '1' should be changed later\n        mNotificationManager.notify(1, mBuilder.build());\n      }\n    \n    // ...\n    \n      @Override\n      public void onDestroy() {\n        super.onDestroy();\n\n        mSocket.disconnect();\n        mSocket.off(\"motion_notification\");\n\n      }\n    }\n    \n\nbrief explanation:\n\n    import com.github.nkzawa.socketio.client.IO;\n    import com.github.nkzawa.socketio.client.Socket;\n    import com.github.nkzawa.emitter.Emitter;\n    \nis for importing, don't forget to put\n\n    dependencies {\n    \tcompile 'com.github.nkzawa:socket.io-client:0.3.0'\n    }\n    \nin your `build.gradle`.\n\n    private Socket mSocket;\n      {\n          try {\n              mSocket = IO.socket(\"http://modulair.muhammadmustadi.com\");\n          } catch (URISyntaxException e) {}\n      }\n      \n is for implementing socketio-client\n \n    mSocket.on(\"motion_notification\", new Emitter.Listener() {\n            @Override\n            public void call(final Object... args) {\n                runOnUiThread(new Runnable() {\n                    @Override\n                    public void run() {\n                        JSONObject data = (JSONObject) args[0];\n                        String messageCam;\n                        try {\n                            messageCam = data.getString(\"message\");\n                        } catch (JSONException e) {\n                            return;\n                        }\n                        Log.v(\"camera\", messageCam);\n                        createNotification(messageCam);\n                    }\n                });\n            }\n        });\n\n        mSocket.connect();\n        \nis for declaring events to listen (it *is* chainable) and initializing the socketio connection.\n\n      \n          private void createNotification(String message) {...}\n\nis for creating notifications\n\nand don't forget\n\n\t  @Override\n      public void onDestroy() {\n        super.onDestroy();\n\n        mSocket.disconnect();\n        mSocket.off(\"motion_notification\");\n\n      }\n      \nto properly close the socketio connection and shut down the event listener(s).\n\nSo yeah, hope this helps. Please do comment and/or point out where I fucked things up. (I'm still learning.) Happy Hacking! :)\n\nLogging off,\n-O\n\n![](/content/images/2015/05/0.png)",
            "mobiledoc": null,
            "html": "<p><img src=\"/content/images/2015/05/2015-05-28-012114.jpg\" alt=\"\" /></p>\n\n<p>Good evening, everyone in my timezone. Logging in from my partner's dorm room.</p>\n\n<p>Today I setup a notification for <a href=\"http://www.lavrsen.dk/\">Lavrsen</a>'s <a href=\"http://www.lavrsen.dk/foswiki/bin/view/Motion/WebHome\">Motion</a> app that connects to an Android system.</p>\n\n<p>First things first, a bit of introduction. </p>\n\n<blockquote>\n  <p>Motion is a program that monitors the video signal from cameras. It is able to detect if a significant part of the picture has changed; in other words, it can detect motion.</p>\n  \n  <p>The program is written in C and is made for the Linux operating system, (using the video4linux interface). Motion is a command line based tool whose output can be either jpeg, ppm fies or mpeg video sequences. Motion is strictly command line driven and can run as a daemon with a rather small footprint and do.</p>\n</blockquote>\n\n<p>So yeah we are using this for our <a href=\"http://blog.muhammadmustadi.com/2015/05/26/ta-progress-report-devlog-20150527/\">Final Project</a>'s webcam integration. There's an email notification built already <a href=\"http://ozzmaker.com/2012/12/03/send-email-from-the-raspberry-pi-or-linux-command-line-with-attachments/\">using SSMTP and mpack</a> but we'll not cover that this time. Motion is available for streaming, but for reasons, we are only using it's motion-detecting capabilities.</p>\n\n<p>Motion can be set up to execute commands for various triggers, we will use its <code>on_motion_detected</code> event listener.</p>\n\n<p>First, we will create a nodejs app at <code>~</code>to emit camera trigger events to our Socket.io server. We will do this in our Raspberry Pi, but any other systems will do as fine.</p>\n\n<p>$<code>mkdir /home/pi/camera &amp;&amp; cd $_</code></p>\n\n<p>$<code>npm init</code> (follow through the instructions as you see fit)</p>\n\n<p>$<code>npm i --save socket.io-client</code></p>\n\n<p>$<code>nano camera.js</code></p>\n\n<p>type the code</p>\n\n<pre><code class=\"language-js\">    var io = require('socket.io-client')('http://modulair.muhammadmustadi.com');\n\n    io.on('connect', function (data) {\n        io.emit('motion_detected', {message: 'motion detected', timestamp: Date.now()})\n    });\n\n    //exit process after server receives data\n    io.on('motion_received', function (data) {\n        io.disconnect();\n        process.exit();\n    });\n</code></pre>\n\n<p>and add that to <code>motion.conf</code>:</p>\n\n<p>$<code>sudo nano /etc/motion/motion.conf</code></p>\n\n<pre><code>...\non_motion_detected node /home/pi/camera/camera.js &amp;&amp; &lt;other commands such as mpack&gt;\n...\n</code></pre>\n\n<p>$<code>sudo reboot</code> to make the changes take effect.</p>\n\n<hr />\n\n<p>For the socket.io server, we make some changes.</p>\n\n<pre><code>// example Express app\nvar app = require('express')();\nvar http = require('http').Server(app);\nvar io = require('socket.io')(http);\n\nio.on('connection', function (socket) {\n// ...\nsocket.on('motion_detected', function (data) {\n    io.emit('motion_notification', data);\n    socket.emit('motion_received', {message: 'motion received.'});\n});\n// ...\n</code></pre>\n\n<p>You can see that we simply pass the <code>motion_detected</code> payload to <code>motion_notification</code>, which will be used by the Android client. <code>motion_received</code> is then sent back to the one-off node app so that it can close connection and exit the process accordingly.</p>\n\n<hr />\n\n<p>For the Android App, we will create a socketio-client, event listener, and a simple notification builder. example is my DashboardActivity.</p>\n\n<pre><code>import com.github.nkzawa.socketio.client.IO;\nimport com.github.nkzawa.socketio.client.Socket;\nimport com.github.nkzawa.emitter.Emitter;\n\n// ...\n\npublic class DashboardActivity extends ActionBarActivity {\n\n  private Socket mSocket;\n  {\n      try {\n          mSocket = IO.socket(\"http://modulair.muhammadmustadi.com\");\n      } catch (URISyntaxException e) {}\n  }\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    mSocket.on(\"motion_notification\", new Emitter.Listener() {\n        @Override\n        public void call(final Object... args) {\n            runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    JSONObject data = (JSONObject) args[0];\n                    String messageCam;\n                    try {\n                        messageCam = data.getString(\"message\");\n                    } catch (JSONException e) {\n                        return;\n                    }\n                    Log.v(\"camera\", messageCam);\n                    createNotification(messageCam);\n                }\n            });\n        }\n    });\n\n    mSocket.connect();\n\n    // ...\n  }\n\n      private void createNotification(String message) {\n    NotificationCompat.Builder mBuilder =\n            new NotificationCompat.Builder(this)\n                    .setSmallIcon(R.mipmap.ic_launcher)\n                    .setContentTitle(\"Modulair notification\")\n                    .setContentText(message);\n                    // Creates an explicit intent for an Activity in your app\n    Intent resultIntent = new Intent(this, DashboardActivity.class);\n    // The stack builder object will contain an artificial back stack for the\n    // started Activity.\n    // This ensures that navigating backward from the Activity leads out of\n    // your application to the Home screen.\n    TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);\n    // Adds the back stack for the Intent (but not the Intent itself)\n    stackBuilder.addParentStack(DashboardActivity.class);\n    // Adds the Intent that starts the Activity to the top of the stack\n    stackBuilder.addNextIntent(resultIntent);\n    PendingIntent resultPendingIntent =\n            stackBuilder.getPendingIntent(\n                    0,\n                    PendingIntent.FLAG_UPDATE_CURRENT\n            );\n    mBuilder.setContentIntent(resultPendingIntent);\n    NotificationManager mNotificationManager =\n            (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n            // TODO: the integer '1' should be changed later\n    mNotificationManager.notify(1, mBuilder.build());\n  }\n\n// ...\n\n  @Override\n  public void onDestroy() {\n    super.onDestroy();\n\n    mSocket.disconnect();\n    mSocket.off(\"motion_notification\");\n\n  }\n}\n</code></pre>\n\n<p>brief explanation:</p>\n\n<pre><code>import com.github.nkzawa.socketio.client.IO;\nimport com.github.nkzawa.socketio.client.Socket;\nimport com.github.nkzawa.emitter.Emitter;\n</code></pre>\n\n<p>is for importing, don't forget to put</p>\n\n<pre><code>dependencies {\n    compile 'com.github.nkzawa:socket.io-client:0.3.0'\n}\n</code></pre>\n\n<p>in your <code>build.gradle</code>.</p>\n\n<pre><code>private Socket mSocket;\n  {\n      try {\n          mSocket = IO.socket(\"http://modulair.muhammadmustadi.com\");\n      } catch (URISyntaxException e) {}\n  }\n</code></pre>\n\n<p>is for implementing socketio-client</p>\n\n<pre><code>mSocket.on(\"motion_notification\", new Emitter.Listener() {\n        @Override\n        public void call(final Object... args) {\n            runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    JSONObject data = (JSONObject) args[0];\n                    String messageCam;\n                    try {\n                        messageCam = data.getString(\"message\");\n                    } catch (JSONException e) {\n                        return;\n                    }\n                    Log.v(\"camera\", messageCam);\n                    createNotification(messageCam);\n                }\n            });\n        }\n    });\n\n    mSocket.connect();\n</code></pre>\n\n<p>is for declaring events to listen (it <em>is</em> chainable) and initializing the socketio connection.</p>\n\n<pre><code>      private void createNotification(String message) {...}\n</code></pre>\n\n<p>is for creating notifications</p>\n\n<p>and don't forget</p>\n\n<pre><code>  @Override\n  public void onDestroy() {\n    super.onDestroy();\n\n    mSocket.disconnect();\n    mSocket.off(\"motion_notification\");\n\n  }\n</code></pre>\n\n<p>to properly close the socketio connection and shut down the event listener(s).</p>\n\n<p>So yeah, hope this helps. Please do comment and/or point out where I fucked things up. (I'm still learning.) Happy Hacking! :)</p>\n\n<p>Logging off, <br />\n-O</p>\n\n<p><img src=\"/content/images/2015/05/0.png\" alt=\"\" /></p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-05-27 18:19:44",
            "created_by": 1,
            "updated_at": "2016-08-11 09:22:18",
            "updated_by": 1,
            "published_at": "2015-05-27 19:55:42",
            "published_by": 1
          },
          {
            "id": 17,
            "uuid": "5ab5a506-e949-4996-a9fe-732b36f5981a",
            "title": "Google I/O Extended Bandung 2015",
            "slug": "g",
            "markdown": "![](/content/images/2015/05/2015-05-28-201205-2.jpg)\n\nEvening! I'm at Co & Co Space now, where they host this year's Google I/O extended for Bandung. Will try to live report, stay tuned!\n\n2100: opening by Co&Co and gdg team\n\n2120: android x unity by technical director Agate Studio ",
            "mobiledoc": null,
            "html": "<p><img src=\"/content/images/2015/05/2015-05-28-201205-2.jpg\" alt=\"\" /></p>\n\n<p>Evening! I'm at Co &amp; Co Space now, where they host this year's Google I/O extended for Bandung. Will try to live report, stay tuned!</p>\n\n<p>2100: opening by Co&amp;Co and gdg team</p>\n\n<p>2120: android x unity by technical director Agate Studio </p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-05-28 13:12:28",
            "created_by": 1,
            "updated_at": "2015-08-28 08:08:00",
            "updated_by": 1,
            "published_at": "2015-05-28 13:19:00",
            "published_by": 1
          },
          {
            "id": 18,
            "uuid": "9b9a6c88-ee85-413f-af49-f37b7a2a9169",
            "title": "Rookie Mistakes in Haskell (Devlog 20150610)",
            "slug": "rookie-mistakes-in-haskell-devlog-20150610",
            "markdown": "![](/content/images/2015/06/2015-06-10-123227.jpg)\n1. Incrementing by `x = x + 1` and then running it\n2. using `drop` to an infinite list\n3. TBD...",
            "mobiledoc": null,
            "html": "<p><img src=\"/content/images/2015/06/2015-06-10-123227.jpg\" alt=\"\" />\n1. Incrementing by <code>x = x + 1</code> and then running it <br />\n2. using <code>drop</code> to an infinite list <br />\n3. TBD...</p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-06-10 05:29:18",
            "created_by": 1,
            "updated_at": "2015-08-28 08:07:48",
            "updated_by": 1,
            "published_at": "2015-06-10 05:35:46",
            "published_by": 1
          },
          {
            "id": 19,
            "uuid": "d3c99bd0-503c-4505-a92e-5d6b71b9cf28",
            "title": "Head First Into Haskell || Project Euler Problem [1..10] (Haskell)",
            "slug": "head-first-into-haskell-project-euler-problem-1-haskell",
            "markdown": "#####I'm learning Haskell.\n\nWhat better way to learn than jumping head first and test it in [Project Euler](projecteuler.net).\n\n---\n#####introduction\n\nI've just freshly installed Haskell from [here](https://www.haskell.org/downloads/linux), I edit the code in [Atom](https://atom.io/packages/ide-haskell), and I run the code in [GHC interactive](https://www.haskell.org/ghc).\n\nThere are many resources in learning Haskell but I am reading [this](http://learnyouahaskell.com/starting-out) as my primary source. Any more info would be helpful.\n\nSo yeah. Cowabunga functional programming!\n\n---\n#####problem 1\n\n>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.\n\n>Find the sum of all the multiples of 3 or 5 below 1000.\n\n######solution\n\nI think it's pretty straightforward.\n\nWe can just use Haskell's *List Comprehension* for this and `sum` the output\n\n`solution = sum [x | x<-[1..999], (mod x 3 == 0) || (mod x 5 == 0)]`\n\nrunning `solution` gives us:\n\n`233168`,\n\nWhich is the correct answer. Phew.\n\n---\n\n#####Problem 2\n>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\n\n>`1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...`\n\n>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\n\n######solution\n\nShit. How do we do this in Haskell. Okay.\n\nFirst we define `fibo`, an infinite list of Fibonacci numbers with:\n\n`fibo = 1:2:(map (\\ (x,y) -> x+y) $ zip fibo (tail fibo))`\n\nthen we are going to use `takeWhile` in a list comprehension like problem 1.\n\n`sum [x | x <- takeWhile (< 4000000) fibo, even x]`\n\nwhich returns\n\n`4613732`.\n\nYUM! Pretty straightforward! I also learned that every 3 indexes after `2` is an even number! Elementary school math, but I didn't notice for so long!\n\n1 (odd) - 2 (even) - Odd (odd + even) - Odd (even + odd) - Even (odd + odd) - ...\n\n---\n\n#####problem 3\n>The prime factors of 13195 are 5, 7, 13 and 29.\n\n>What is the largest prime factor of the number 600851475143 ?\n\n######solution\n\nOkay it's definitely a `max` of a list here. Now to find the list of prime factors...\n\nShould we use a sieve or should we just iterate over all the integers...?\n\nHardcore mode? Hardcore mode it is.\n\n\n\n",
            "mobiledoc": null,
            "html": "<h5 id=\"imlearninghaskell\">I'm learning Haskell.</h5>\n\n<p>What better way to learn than jumping head first and test it in <a href=\"projecteuler.net\">Project Euler</a>.</p>\n\n<hr />\n\n<h5 id=\"introduction\">introduction</h5>\n\n<p>I've just freshly installed Haskell from <a href=\"https://www.haskell.org/downloads/linux\">here</a>, I edit the code in <a href=\"https://atom.io/packages/ide-haskell\">Atom</a>, and I run the code in <a href=\"https://www.haskell.org/ghc\">GHC interactive</a>.</p>\n\n<p>There are many resources in learning Haskell but I am reading <a href=\"http://learnyouahaskell.com/starting-out\">this</a> as my primary source. Any more info would be helpful.</p>\n\n<p>So yeah. Cowabunga functional programming!</p>\n\n<hr />\n\n<h5 id=\"problem1\">problem 1</h5>\n\n<blockquote>\n  <p>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.</p>\n  \n  <p>Find the sum of all the multiples of 3 or 5 below 1000.</p>\n</blockquote>\n\n<h6 id=\"solution\">solution</h6>\n\n<p>I think it's pretty straightforward.</p>\n\n<p>We can just use Haskell's <em>List Comprehension</em> for this and <code>sum</code> the output</p>\n\n<p><code>solution = sum [x | x&lt;-[1..999], (mod x 3 == 0) || (mod x 5 == 0)]</code></p>\n\n<p>running <code>solution</code> gives us:</p>\n\n<p><code>233168</code>,</p>\n\n<p>Which is the correct answer. Phew.</p>\n\n<hr />\n\n<h5 id=\"problem2\">Problem 2</h5>\n\n<blockquote>\n  <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>\n  \n  <p><code>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</code></p>\n  \n  <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>\n</blockquote>\n\n<h6 id=\"solution\">solution</h6>\n\n<p>Shit. How do we do this in Haskell. Okay.</p>\n\n<p>First we define <code>fibo</code>, an infinite list of Fibonacci numbers with:</p>\n\n<p><code>fibo = 1:2:(map (\\ (x,y) -&gt; x+y) $ zip fibo (tail fibo))</code></p>\n\n<p>then we are going to use <code>takeWhile</code> in a list comprehension like problem 1.</p>\n\n<p><code>sum [x | x &lt;- takeWhile (&lt; 4000000) fibo, even x]</code></p>\n\n<p>which returns</p>\n\n<p><code>4613732</code>.</p>\n\n<p>YUM! Pretty straightforward! I also learned that every 3 indexes after <code>2</code> is an even number! Elementary school math, but I didn't notice for so long!</p>\n\n<p>1 (odd) - 2 (even) - Odd (odd + even) - Odd (even + odd) - Even (odd + odd) - ...</p>\n\n<hr />\n\n<h5 id=\"problem3\">problem 3</h5>\n\n<blockquote>\n  <p>The prime factors of 13195 are 5, 7, 13 and 29.</p>\n  \n  <p>What is the largest prime factor of the number 600851475143 ?</p>\n</blockquote>\n\n<h6 id=\"solution\">solution</h6>\n\n<p>Okay it's definitely a <code>max</code> of a list here. Now to find the list of prime factors...</p>\n\n<p>Should we use a sieve or should we just iterate over all the integers...?</p>\n\n<p>Hardcore mode? Hardcore mode it is.</p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-06-10 06:23:19",
            "created_by": 1,
            "updated_at": "2015-08-28 08:07:29",
            "updated_by": 1,
            "published_at": "2015-06-10 06:43:53",
            "published_by": 1
          },
          {
            "id": 20,
            "uuid": "d6aefec1-9d1c-4959-9fd3-44d210201dbd",
            "title": "Creating API-Consuming Bot Users For Slack In NodeJS (Devlog 20150625)",
            "slug": "creating-bot-users-for-slack-in-nodejs-devlog-20150625",
            "markdown": "![](/content/images/2015/06/futurism_productimage3.jpg)\n#####intro\nFyeah hello again devs!\n\n![](/content/images/2015/06/2015-06-25-220629.jpg)\n\nAs you all knew, the last two days there was a *big* event being held near me. Can you guess?\n\nYeah, It's [Echelon Asia Summit 2015](http://e27.co/echelon/asia/).\n\nI didn't come though. Oh well but yeah. I then spent my 2 days researching how to integrate my [Home Automation API](http://blog.muhammadmustadi.com/2015/02/10/modulair-development/) to our team's Slack. And I successfully did it. Without further ado, let's get to *the point* now.\n\n**tl;dr: don't be discouraged to try and create slack bots, it's not as hard as it seems. see how I did it below.**\n\n#####the point\n\n![](/content/images/2015/06/------slack.png)\n\nSo yeah. Slack, as you all know, is a\n\n>... real-time messaging, archiving and search for modern teams.\n\n(If you haven't tried it for your team, you should.)\n\nOur team at [Kolaborasi](http://kolaborasi.co) uses it for communications. And Slack opens its API for *a bunch* of [integrations](https://slack.com/integrations), including possibilities for webhooks and **Bots**.\n\nBot users are interesting, because they listen to every messages in its channel, and then decide if they should do anything with it or not.\n\nThere were several libraries to implement bots in NodeJS.\n\n- https://github.com/xoxco/node-slack\n- https://github.com/trinchan/slackbot\n- https://github.com/slackhq/node-slack-client\n- https://github.com/xBytez/slackbotapi\n\nbut I fell in love with the last two, and after experimenting, I chose the last one because of its simplicity.\n\n###### working principle\n\nSo Slack seems to be built over WebSocket. (CMIIW)\n\nSo **after** authenticating, our bot needs to listen to the `'message'` event broadcasted by the Websocket server and then decide what to do based on the payload.\n\nOur bot then will have to make a `http` request to the outside server, and then based on the response (`200`/`404`/else) send a message back to its Slack channel.\n\n###### how we're going to do it\n\nWe're going to use `slackbotapi` npm package fo all things slack and `request` for http request. Install the dependencies using\n\n`npm i --save slackbotapi request`\n\nand start editing our file, `servant.js`. We'll just modify the example from `slackbotapi` library to ease things up.\n\n    // Requiring our modules\n    var slackAPI = require('slackbotapi');\n    var request = require('request');\n\nThen we initiate the bot and give it an API token which you can get on Team menu > Configure Integrations:\n![](/content/images/2015/06/Selection_551.png)\n\nand follow through the simple instructions.\n\n    // Starting\n    var slack = new slackAPI({\n\t    'token': \"xoxb-TOKENTOKENTOKENTOKEN\",\n\t    'logging': true\n    });\n\nOf course, use your own token on `'token':`.\n\nThen we listen to `'message'`\n\n    // Slack on EVENT message, send data.\n    slack.on('message', function(data) {\n    \t// If no text, return.\n\t    if(typeof data.text == 'undefined') return;\n\nYou can respond to messages directly (or split the first word and look for `@mentions`) like:\n\n    \t// If someone says 'cake!!' respond to their message with \"@user OOH, CAKE!! :cake\"\n    \tif(data.text === 'cake!!') slack.sendMsg(data.channel, \"@\"+slack.getUser(data.user).name+\" OOH, CAKE!! :cake:\")\n\n**or** you can create a command character like:\n\n    \t\t// If the first character starts with %, you can change this to your own prefix of course.\n    \tif(data.text.charAt(0) === '%') {\n    \t\t// Split the command and it's arguments into an array\n    \t\tvar command = data.text.substring(1).split(' ');\n\n    \t\t// If command[2] is not undefined use command[1] to have all arguments in comand[1]\n\t\t    if (typeof command[2] != \"undefined\") {\n\t\t\t    for (var i = 2; i < command.length; i++) {\n\t\t\t\t    command[1] = command[1] + ' ' + command[i];\n\t\t\t    }\n    \t\t}\n\nWe will use command chars for this.\n\nThen we make a case checking:\n\n\t\t\t// Switch to check which command has been requested.\n\t\t\tswitch (command[0].toLowerCase()) {\n\t\t\t\t// If hello\n\t\t\t\tcase \"hello\":\n\t\t\t\t\t// Send message.\n\t\t\t\t\tslack.sendMsg(data.channel, \"Oh, hello @\"+slack.getUser(data.user).name+\" !\")\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"hue\":\n\t\t\t\t\tslack.sendMsg(data.channel, \"@\"+slack.getUser(data.user).name+\" brbrbrbrbrb!\")\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"say\":\n\t\t\t\t\tvar say = data.text.split('%say ');\n\t\t\t\t\tslack.sendMsg(data.channel, say[1]);\n\t\t\t\tbreak;\n\t\t\t\tcase \"debug\":\n\t\t\t\t\tconsole.log(slack.data.ims);\n\t\t\t\tbreak;\n\nAfter seeing those implementations, we can start seeing the point more clearly. We literally just have to create another command and just do a `http` request as any nodejs apps would.\n\n\t\t\t\tcase \"toggle\":\n\t\t\t\t\trequest.post(\n\t\t\t\t\t\t'http://modulair.muhammadmustadi.com/v1/subsystems/XXXXXXXXXXXXXXXXXXXX/toggle/X',\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tfunction (error, response, body) {\n\t\t\t\t\t\t\tvar msg = {};\n\t\t\t\t\t\t\tvar arr = [];\n\t\t\t\t\t\t\tif (!error && response.statusCode == 200) {\n\t\t\t\t\t\t\t\tslack.sendMsg(data.channel, \"done.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\nwe then run the bot `$node servant.js`\n\nand BOOM! your team's bot can now utilize the Internet's **MANY** Open API's, and in this case, my team can now toggle our front lamp on or off by talking to a Slack bot.\n\n![](/content/images/2015/06/Selection_552.png)\n\nThanks for reading through, my code can be seen here https://gist.github.com/mathdroid/759789332e485d879f8b. (not different, really.)\n\nFuture improvements can use https://github.com/NaturalNode/natural for natural language processing, and also we can add more affirmative or negative messages to spice up its response.\n\nHope it helps. Happy hacking!",
            "mobiledoc": null,
            "html": "<p><img src=\"/content/images/2015/06/futurism_productimage3.jpg\" alt=\"\" /></p>\n\n<h5 id=\"intro\">intro</h5>\n\n<p>Fyeah hello again devs!</p>\n\n<p><img src=\"/content/images/2015/06/2015-06-25-220629.jpg\" alt=\"\" /></p>\n\n<p>As you all knew, the last two days there was a <em>big</em> event being held near me. Can you guess?</p>\n\n<p>Yeah, It's <a href=\"http://e27.co/echelon/asia/\">Echelon Asia Summit 2015</a>. I was going to attend too (as a visitor, of course) but for some miscommunication and other things, I could not accompany my work partner <a href=\"https://twitter.com/adryanhafizh\">@adryanhafizh</a> who went there.</p>\n\n<p>Oh well but yeah. I then spent my 2 days researching how to integrate my <a href=\"http://blog.muhammadmustadi.com/2015/02/10/modulair-development/\">Home Automation API</a> to our team's Slack. And I successfully did it. Without further ado, let's get to <em>the point</em> now.</p>\n\n<p><strong>tl;dr: don't be discouraged to try and create slack bots, it's not as hard as it seems. see how I did it below.</strong></p>\n\n<h5 id=\"thepoint\">the point</h5>\n\n<p><img src=\"/content/images/2015/06/------slack.png\" alt=\"\" /></p>\n\n<p>So yeah. Slack, as you all know, is a</p>\n\n<blockquote>\n  <p>... real-time messaging, archiving and search for modern teams.</p>\n</blockquote>\n\n<p>(If you haven't tried it for your team, you should.)</p>\n\n<p>Our team at <a href=\"http://kolaborasi.co\">Kolaborasi</a> uses it for communications. And Slack opens its API for <em>a bunch</em> of <a href=\"https://slack.com/integrations\">integrations</a>, including possibilities for webhooks and <strong>Bots</strong>.</p>\n\n<p>Bot users are interesting, because they listen to every messages in its channel, and then decide if they should do anything with it or not.</p>\n\n<p>There were several libraries to implement bots in NodeJS.</p>\n\n<ul>\n<li><a href=\"https://github.com/xoxco/node-slack\">https://github.com/xoxco/node-slack</a></li>\n<li><a href=\"https://github.com/trinchan/slackbot\">https://github.com/trinchan/slackbot</a></li>\n<li><a href=\"https://github.com/slackhq/node-slack-client\">https://github.com/slackhq/node-slack-client</a></li>\n<li><a href=\"https://github.com/xBytez/slackbotapi\">https://github.com/xBytez/slackbotapi</a></li>\n</ul>\n\n<p>but I fell in love with the last two, and after experimenting, I chose the last one because of its simplicity.</p>\n\n<h6 id=\"workingprinciple\">working principle</h6>\n\n<p>So Slack seems to be built over WebSocket. (CMIIW)</p>\n\n<p>So <strong>after</strong> authenticating, our bot needs to listen to the <code>'message'</code> event broadcasted by the Websocket server and then decide what to do based on the payload.</p>\n\n<p>Our bot then will have to make a <code>http</code> request to the outside server, and then based on the response (<code>200</code>/<code>404</code>/else) send a message back to its Slack channel.</p>\n\n<h6 id=\"howweregoingtodoit\">how we're going to do it</h6>\n\n<p>We're going to use <code>slackbotapi</code> npm package fo all things slack and <code>request</code> for http request. Install the dependencies using</p>\n\n<p><code>npm i --save slackbotapi request</code></p>\n\n<p>and start editing our file, <code>servant.js</code>. We'll just modify the example from <code>slackbotapi</code> library to ease things up.</p>\n\n<pre><code>// Requiring our modules\nvar slackAPI = require('slackbotapi');\nvar request = require('request');\n</code></pre>\n\n<p>Then we initiate the bot and give it an API token which you can get on Team menu > Configure Integrations: <br />\n<img src=\"/content/images/2015/06/Selection_551.png\" alt=\"\" /></p>\n\n<p>and follow through the simple instructions.</p>\n\n<pre><code>// Starting\nvar slack = new slackAPI({\n    'token': \"xoxb-TOKENTOKENTOKENTOKEN\",\n    'logging': true\n});\n</code></pre>\n\n<p>Of course, use your own token on <code>'token':</code>.</p>\n\n<p>Then we listen to <code>'message'</code></p>\n\n<pre><code>// Slack on EVENT message, send data.\nslack.on('message', function(data) {\n    // If no text, return.\n    if(typeof data.text == 'undefined') return;\n</code></pre>\n\n<p>You can respond to messages directly (or split the first word and look for <code>@mentions</code>) like:</p>\n\n<pre><code>    // If someone says 'cake!!' respond to their message with \"@user OOH, CAKE!! :cake\"\n    if(data.text === 'cake!!') slack.sendMsg(data.channel, \"@\"+slack.getUser(data.user).name+\" OOH, CAKE!! :cake:\")\n</code></pre>\n\n<p><strong>or</strong> you can create a command character like:</p>\n\n<pre><code>        // If the first character starts with %, you can change this to your own prefix of course.\n    if(data.text.charAt(0) === '%') {\n        // Split the command and it's arguments into an array\n        var command = data.text.substring(1).split(' ');\n\n        // If command[2] is not undefined use command[1] to have all arguments in comand[1]\n        if (typeof command[2] != \"undefined\") {\n            for (var i = 2; i &lt; command.length; i++) {\n                command[1] = command[1] + ' ' + command[i];\n            }\n        }\n</code></pre>\n\n<p>We will use command chars for this.</p>\n\n<p>Then we make a case checking:</p>\n\n<pre><code>        // Switch to check which command has been requested.\n        switch (command[0].toLowerCase()) {\n            // If hello\n            case \"hello\":\n                // Send message.\n                slack.sendMsg(data.channel, \"Oh, hello @\"+slack.getUser(data.user).name+\" !\")\n            break;\n\n            case \"hue\":\n                slack.sendMsg(data.channel, \"@\"+slack.getUser(data.user).name+\" brbrbrbrbrb!\")\n            break;\n\n            case \"say\":\n                var say = data.text.split('%say ');\n                slack.sendMsg(data.channel, say[1]);\n            break;\n            case \"debug\":\n                console.log(slack.data.ims);\n            break;\n</code></pre>\n\n<p>After seeing those implementations, we can start seeing the point more clearly. We literally just have to create another command and just do a <code>http</code> request as any nodejs apps would.</p>\n\n<pre><code>            case \"toggle\":\n                request.post(\n                    'http://modulair.muhammadmustadi.com/v1/subsystems/XXXXXXXXXXXXXXXXXXXX/toggle/X',\n                    {},\n                    function (error, response, body) {\n                        var msg = {};\n                        var arr = [];\n                        if (!error &amp;&amp; response.statusCode == 200) {\n                            slack.sendMsg(data.channel, \"done.\");\n                        }\n                    }\n                );\n            break;\n        }\n    }\n});\n</code></pre>\n\n<p>we then run the bot <code>$node servant.js</code></p>\n\n<p>and BOOM! your team's bot can now utilize the Internet's <strong>MANY</strong> Open API's, and in this case, my team can now toggle our front lamp on or off by talking to a Slack bot.</p>\n\n<p><img src=\"/content/images/2015/06/Selection_552.png\" alt=\"\" /></p>\n\n<p>Thanks for reading through, my code can be seen here <a href=\"https://gist.github.com/mathdroid/759789332e485d879f8b\">https://gist.github.com/mathdroid/759789332e485d879f8b</a>. (not different, really.)</p>\n\n<p>Future improvements can use <a href=\"https://github.com/NaturalNode/natural\">https://github.com/NaturalNode/natural</a> for natural language processing, and also we can add more affirmative or negative messages to spice up its response.</p>\n\n<p>Hope it helps. Happy hacking!</p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-06-25 15:01:58",
            "created_by": 1,
            "updated_at": "2016-08-10 19:06:31",
            "updated_by": 1,
            "published_at": "2015-06-25 16:06:19",
            "published_by": 1
          },
          {
            "id": 21,
            "uuid": "89a2d016-f10f-4557-89b5-43222f8ee519",
            "title": "On and On",
            "slug": "on-and-on",
            "markdown": "\nToday's repeat-list.\n\n<iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/88109897&amp;color=ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false\"></iframe>\n\n    And it goes on and on and on and on and on and on\n    Laying out a pavement in my head\n    And it goes on and on and on and on and on and on\n    It's way past just a game\n\n    Oh my love, just set me free, take away the leash that ties me on to you.\n    Oh my love, why wont you leave? Take away your hand so I can detach from you, uh, uhu\n    You, you, you, you\n",
            "mobiledoc": null,
            "html": "<p>Today's repeat-list.</p>\n\n<iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/88109897&amp;color=ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false\"></iframe>\n\n<pre><code>And it goes on and on and on and on and on and on\nLaying out a pavement in my head\nAnd it goes on and on and on and on and on and on\nIt's way past just a game\n\nOh my love, just set me free, take away the leash that ties me on to you.\nOh my love, why wont you leave? Take away your hand so I can detach from you, uh, uhu\nYou, you, you, you\n</code></pre>",
            "amp": null,
            "image": "/content/images/2015/08/white-bed-sheet-background---bed-and-bath.jpg",
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-08-24 08:05:29",
            "created_by": 1,
            "updated_at": "2016-08-10 19:01:33",
            "updated_by": 1,
            "published_at": "2015-08-24 08:10:57",
            "published_by": 1
          },
          {
            "id": 22,
            "uuid": "fc9d2637-c599-464c-b732-5665980beea9",
            "title": "21 In Review (Personal Log 20150828)",
            "slug": "blog",
            "markdown": "*My last day being a 21-year-old.*\n\n*I have nothing to say.*\n\n*Some would say that it could have been better.* \n\n*But it always could have been better, right?*\n\n---\n\nWe do not seek happiness. We have contentedness.\n\nAnd it feels more freeing, does it not.\n\nLet's run shit and make banks, **Odi**.\n\n-- A concerned part of yourself. We are always here.\n\n---\n![](/content/images/2015/08/cake.png)\n\n",
            "mobiledoc": null,
            "html": "<p><em>My last day being a 21-year-old.</em></p>\n\n<p><em>I have nothing to say.</em></p>\n\n<p><em>Some would say that it could have been better.</em> </p>\n\n<p><em>But it always could have been better, right?</em></p>\n\n<hr />\n\n<p>We do not seek happiness. We have contentedness.</p>\n\n<p>And it feels more freeing, does it not.</p>\n\n<p>Let's run shit and make banks, <strong>Odi</strong>.</p>\n\n<p>-- A concerned part of yourself. We are always here.</p>\n\n<hr />\n\n<p><img src=\"/content/images/2015/08/cake.png\" alt=\"\" /></p>",
            "amp": null,
            "image": "/content/images/2015/09/photo-1433321768402-e8ed97b0324c.jpg",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-08-28 09:43:05",
            "created_by": 1,
            "updated_at": "2016-08-10 19:02:31",
            "updated_by": 1,
            "published_at": "2015-08-28 11:47:14",
            "published_by": 1
          },
          {
            "id": 23,
            "uuid": "29dbdce2-2fe2-4bde-b328-ac75e8fc6fcb",
            "title": "You've been upgraded to the latest version of Ghost",
            "slug": "ghost-0-7",
            "markdown": "You've just upgraded to the latest version of Ghost and we've made a few changes that you should probably know about!\n\n## Woah, why does everything look different?\n\nAfter two years and hundreds of thousands of users, we learned a great deal about what was (and wasn't) working in the old Ghost admin user interface. What you're looking at is Ghost's first major UI refresh, with a strong focus on being more usable and robust all round.\n\n![New Design](https://ghost.org/images/zelda.png)\n\nThe main navigation menu, previously located at the top of your screen, has now moved over to the left. This makes it way easier to work with on mobile devices, and has the added benefit of providing ample space for upcoming features!\n\n## Lost and found: Your old posts\n\nFrom talking to many of you we understand that finding old posts in the admin area was a real pain; so we've added a new magical search bar which lets you quickly find posts for editing, without having to scroll endlessly. Take it for a spin!\n\n![Search](https://ghost.org/images/search.gif)\n\nQuestions? Comments? Send us a tweet [@TryGhost](https://twitter.com/tryghost)\n\nOh, and yes – you can safely delete this draft post!",
            "mobiledoc": null,
            "html": "<p>You've just upgraded to the latest version of Ghost and we've made a few changes that you should probably know about!</p>\n\n<h2 id=\"woahwhydoeseverythinglookdifferent\">Woah, why does everything look different?</h2>\n\n<p>After two years and hundreds of thousands of users, we learned a great deal about what was (and wasn't) working in the old Ghost admin user interface. What you're looking at is Ghost's first major UI refresh, with a strong focus on being more usable and robust all round.</p>\n\n<p><img src=\"https://ghost.org/images/zelda.png\" alt=\"New Design\" /></p>\n\n<p>The main navigation menu, previously located at the top of your screen, has now moved over to the left. This makes it way easier to work with on mobile devices, and has the added benefit of providing ample space for upcoming features!</p>\n\n<h2 id=\"lostandfoundyouroldposts\">Lost and found: Your old posts</h2>\n\n<p>From talking to many of you we understand that finding old posts in the admin area was a real pain; so we've added a new magical search bar which lets you quickly find posts for editing, without having to scroll endlessly. Take it for a spin!</p>\n\n<p><img src=\"https://ghost.org/images/search.gif\" alt=\"Search\" /></p>\n\n<p>Questions? Comments? Send us a tweet <a href=\"https://twitter.com/tryghost\">@TryGhost</a></p>\n\n<p>Oh, and yes – you can safely delete this draft post!</p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-09-08 04:54:37",
            "created_by": 1,
            "updated_at": "2016-08-10 17:10:12",
            "updated_by": 1,
            "published_at": "2015-09-08 04:54:37",
            "published_by": null
          },
          {
            "id": 24,
            "uuid": "b54e6416-d16c-4517-93a6-a35aa2ad00a1",
            "title": "Personal Log 20151010",
            "slug": "false-senses",
            "markdown": "Hello there, ghosts, whoever you are.\n\nI've been wanting to update you on the stuff I encountered lately, but I could not find the time.\n\nI know, I know. Classic me.\n\nTruth is, I have a lot of drafts in my backlog. But I don't know how to finish them.\n\nAlright. I just wanna tell you something that's been bugging me quite a bit for a time. \n\n---\n\nLately, I have been messing around with things that aren't mine. Aren't mine, as in literally owned by other people. I put my marks on them. I do freaky stuff with them. I utilized them for my own good.\n\n> I commit changes to them, and they change me back.\n\nYou know that too, right? It emerges from inside you. The false, fleeting sense of attachment and possession.\n\nYou start to think that they are yours.\n\nBut no.\n\nWe have to realize that we are only hackers. *Human* hackers.\n\nDetachment is what's required in our field.\n\nWe know that it's only a matter of time.\n\nA matter of time until the next code patch.\n\nA matter of time until she moves back in with her significant other.\n\n---\n\nI'll keep you updated, restless spirits.",
            "mobiledoc": null,
            "html": "<p>Hello there, ghosts, whoever you are.</p>\n\n<p>I've been wanting to update you on the stuff I encountered lately, but I could not find the time.</p>\n\n<p>I know, I know. Classic me.</p>\n\n<p>Truth is, I have a lot of drafts in my backlog. But I don't know how to finish them.</p>\n\n<p>Alright. I just wanna tell you something that's been bugging me quite a bit for a time. </p>\n\n<hr />\n\n<p>Lately, I have been messing around with things that aren't mine. Aren't mine, as in literally owned by other people. I put my marks on them. I do freaky stuff with them. I utilized them for my own good.</p>\n\n<blockquote>\n  <p>I commit changes to them, and they change me back.</p>\n</blockquote>\n\n<p>You know that too, right? It emerges from inside you. The false, fleeting sense of attachment and possession.</p>\n\n<p>You start to think that they are yours.</p>\n\n<p>But no.</p>\n\n<p>We have to realize that we are only hackers. <em>Human</em> hackers.</p>\n\n<p>Detachment is what's required in our field.</p>\n\n<p>We know that it's only a matter of time.</p>\n\n<p>A matter of time until the next code patch.</p>\n\n<p>A matter of time until she moves back in with her significant other.</p>\n\n<hr />\n\n<p>I'll keep you updated, restless spirits.</p>",
            "amp": null,
            "image": "/content/images/2015/09/orange-daylily1.jpg",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-09-10 09:25:32",
            "created_by": 1,
            "updated_at": "2016-08-10 19:00:54",
            "updated_by": 1,
            "published_at": "2015-09-10 09:51:53",
            "published_by": 1
          },
          {
            "id": 25,
            "uuid": "9da44342-e54a-4299-941c-aaf80d078c28",
            "title": "(Untitled)",
            "slug": "untitled-6",
            "markdown": "",
            "mobiledoc": null,
            "html": "",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-09-11 05:23:37",
            "created_by": 1,
            "updated_at": "2015-09-11 05:23:41",
            "updated_by": 1,
            "published_at": null,
            "published_by": null
          },
          {
            "id": 26,
            "uuid": "f88b3335-fd4f-4a09-ba6d-9148690e6ba2",
            "title": "ARCH",
            "slug": "arch",
            "markdown": "#Notes\n- `rfkill unblock all` helps a lot.\n- check em hardware buttonz",
            "mobiledoc": null,
            "html": "<h1 id=\"notes\">Notes</h1>\n\n<ul>\n<li><code>rfkill unblock all</code> helps a lot.</li>\n<li>check em hardware buttonz</li>\n</ul>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-09-12 13:35:03",
            "created_by": 1,
            "updated_at": "2015-09-12 18:35:38",
            "updated_by": 1,
            "published_at": null,
            "published_by": null
          },
          {
            "id": 27,
            "uuid": "0923eb04-7af0-4ab1-a8f9-bf01801b20c2",
            "title": "Personal Log 20151015",
            "slug": "show-me",
            "markdown": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/_2Nh-gbEs5o\" frameborder=\"0\" allowfullscreen></iframe>\n\n---\n\n1. I played games again. Dammit. We are not going to fall into that hole again, Odi.\n\n2. A really close friend told me a great news. A happy news, really. But damn if it wasn't scary. At least for me. We have a long time until we need to think about that, no?\n\n3. I really miss the feeling of deep mutual empathy. Should I find one? Make one? As a [determinist](https://en.wikipedia.org/wiki/Determinism), I don't quite believe that we should rely on fate for this. `Jodoh gak akan kemana` is such a colossal bull shite.\n\nSo yeah, ghosts. Can you see the future? Would you show me if things are going to get better?\n\nJust kidding. We know it will. We will force it to.\n\n---\n\n```\nDon’t let me show cruelty\nThough I may make mistakes\nDon’t let me show ugliness\nThough I know I can hate\nAnd don’t let me show evil\nThough it might be all I take\n\nShow me love\nShow me love\nShow me love\n\nDon’t let me think weakly\nThough I know that I can break\nKeep me away from apathy\nWhile I am still awake\nAnd don’t let me think too long\nOf the one I’m bound to face\n```\n",
            "mobiledoc": null,
            "html": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/_2Nh-gbEs5o\" frameborder=\"0\" allowfullscreen></iframe>\n\n<hr />\n\n<ol>\n<li><p>I played games again. Dammit. We are not going to fall into that hole again, Odi.</p></li>\n<li><p>A really close friend told me a great news. A happy news, really. But damn if it wasn't scary. At least for me. We have a long time until we need to think about that, no?</p></li>\n<li><p>I really miss the feeling of deep mutual empathy. Should I find one? Make one? As a <a href=\"https://en.wikipedia.org/wiki/Determinism\">determinist</a>, I don't quite believe that we should rely on fate for this. <code>Jodoh gak akan kemana</code> is such a colossal bull shite.</p></li>\n</ol>\n\n<p>So yeah, ghosts. Can you see the future? Would you show me if things are going to get better?</p>\n\n<p>Just kidding. We know it will. We will force it to.</p>\n\n<hr />\n\n<pre><code>Don’t let me show cruelty  \nThough I may make mistakes  \nDon’t let me show ugliness  \nThough I know I can hate  \nAnd don’t let me show evil  \nThough it might be all I take\n\nShow me love  \nShow me love  \nShow me love\n\nDon’t let me think weakly  \nThough I know that I can break  \nKeep me away from apathy  \nWhile I am still awake  \nAnd don’t let me think too long  \nOf the one I’m bound to face  \n</code></pre>",
            "amp": null,
            "image": "/content/images/2015/09/IMG_0724-1200x800.jpg",
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": "",
            "author_id": 1,
            "created_at": "2015-09-14 17:15:19",
            "created_by": 1,
            "updated_at": "2016-12-07 13:18:32",
            "updated_by": 1,
            "published_at": "2015-09-14 17:41:53",
            "published_by": 1
          },
          {
            "id": 28,
            "uuid": "5b705964-bcc3-401a-b28f-ccff1dd2cfdf",
            "title": "Hook, Line, and Sinker",
            "slug": "hook-line-and-sinker",
            "markdown": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/X8tOngmlES0\" frameborder=\"0\" allowfullscreen></iframe>\n\n---\n\n>Wait, you are not mine!\n\n---\n\n```I'm alive\nI feel it now\nI never knew I'll find it on you\nOut of line we got ourselves\nIn a look, wait we are not fine\nWait, you are not mine!\nWe find \n\nOur eyes stuck looking at\nOur eyes are making out\nWe're not made for this\nFighting love\nOur eyes stuck looking at\nOur eyes are making out\nWe're too close to be out of touch!\nOut of touch, ooh oh\nOut of touch\n\nLay away, silent corner\nSide by side, we follow our minds\nWalk it on, then we trip\nOn the line, wait we are not fine\nWait, you are not mine!\nWe find \n\nOur eyes stuck looking at\nOur eyes are making out\nWe're not made for this\nFighting love\nOur eyes stuck looking at\nOur eyes are making out\nWe're too close to be out of touch!\nOur eyes stuck looking at\nOur eyes are making out\nWe're not made for this\nFighting love\nOur eyes stuck looking at\nOur eyes are making out\nWe're too close to be out of touch!\n\nI can't stay low\nI'm always glad when we wake up\nI'm just as there as you\nSo, when we wake up\nI can't stay low\nI'm always glad when we wake up\nI'm just as there as you\nSo, when we wake up\n\nOur eyes stuck looking at\nOur eyes are making out\nWe're not made for this\nFighting love\nOur eyes stuck looking at\nOur eyes are making out\nWe're too close to be out of touch!\nOur eyes stuck looking at\nOur eyes are making out\nWe're not made for this\nFighting love\nOur eyes stuck looking at\nOur eyes are making out\nWe're too close to be out of touch!\nOh oh, out of touch\nOh oh, out of touch\nOut of touch\n```",
            "mobiledoc": null,
            "html": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/X8tOngmlES0\" frameborder=\"0\" allowfullscreen></iframe>\n\n<hr />\n\n<blockquote>\n  <p>Wait, you are not mine!</p>\n</blockquote>\n\n<hr />\n\n<pre><code class=\"language-I'm alive\">I feel it now  \nI never knew I'll find it on you  \nOut of line we got ourselves  \nIn a look, wait we are not fine  \nWait, you are not mine!  \nWe find \n\nOur eyes stuck looking at  \nOur eyes are making out  \nWe're not made for this  \nFighting love  \nOur eyes stuck looking at  \nOur eyes are making out  \nWe're too close to be out of touch!  \nOut of touch, ooh oh  \nOut of touch\n\nLay away, silent corner  \nSide by side, we follow our minds  \nWalk it on, then we trip  \nOn the line, wait we are not fine  \nWait, you are not mine!  \nWe find \n\nOur eyes stuck looking at  \nOur eyes are making out  \nWe're not made for this  \nFighting love  \nOur eyes stuck looking at  \nOur eyes are making out  \nWe're too close to be out of touch!  \nOur eyes stuck looking at  \nOur eyes are making out  \nWe're not made for this  \nFighting love  \nOur eyes stuck looking at  \nOur eyes are making out  \nWe're too close to be out of touch!\n\nI can't stay low  \nI'm always glad when we wake up  \nI'm just as there as you  \nSo, when we wake up  \nI can't stay low  \nI'm always glad when we wake up  \nI'm just as there as you  \nSo, when we wake up\n\nOur eyes stuck looking at  \nOur eyes are making out  \nWe're not made for this  \nFighting love  \nOur eyes stuck looking at  \nOur eyes are making out  \nWe're too close to be out of touch!  \nOur eyes stuck looking at  \nOur eyes are making out  \nWe're not made for this  \nFighting love  \nOur eyes stuck looking at  \nOur eyes are making out  \nWe're too close to be out of touch!  \nOh oh, out of touch  \nOh oh, out of touch  \nOut of touch  \n</code></pre>",
            "amp": null,
            "image": "/content/images/2015/09/photo-1437941792454-bacef7a7f736.jpg",
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-09-20 06:20:42",
            "created_by": 1,
            "updated_at": "2016-08-10 17:11:42",
            "updated_by": 1,
            "published_at": "2015-09-20 06:27:34",
            "published_by": 1
          },
          {
            "id": 29,
            "uuid": "cd90e02c-abcc-4683-ac17-b252f1d696f7",
            "title": "React Native on Android",
            "slug": "react-native-on-android",
            "markdown": "Here I will record the paths taken in troubleshooting my `react-native` experience.\n\n# Problems:\n\n## 1. Cannot install React Native app via `react-native run-android` in Xiaomi phone\n\n### Troubleshoot\n\nDisable MiUI Optimization in Developer Options.\n\n\n## 2. No dev menu for debugging React Native after pressing Menu button\n\n### Troubleshoot\n\nSettings > App > [YOUR_APP] > Enable Popup\n\n\n## 3. Error on `react-native run-android`\n\n> _Unable to downoad JS bundle ...< continued >_\n\n### Troubleshoot\nObsolete since a while ago, this is not a problem anymore.\n```\nreact-native start > /dev/null 2>&1 &\nadb reverse tcp:8081 tcp:8081\n```\n",
            "mobiledoc": null,
            "html": "<p>Here I will record the paths taken in troubleshooting my <code>react-native</code> experience.</p>\n\n<h1 id=\"problems\">Problems:</h1>\n\n<h2 id=\"1cannotinstallreactnativeappviareactnativerunandroidinxiaomiphone\">1. Cannot install React Native app via <code>react-native run-android</code> in Xiaomi phone</h2>\n\n<h3 id=\"troubleshoot\">Troubleshoot</h3>\n\n<p>Disable MiUI Optimization in Developer Options.</p>\n\n<h2 id=\"2nodevmenufordebuggingreactnativeafterpressingmenubutton\">2. No dev menu for debugging React Native after pressing Menu button</h2>\n\n<h3 id=\"troubleshoot\">Troubleshoot</h3>\n\n<p>Settings > App > [YOUR_APP] > Enable Popup</p>\n\n<h2 id=\"3erroronreactnativerunandroid\">3. Error on <code>react-native run-android</code></h2>\n\n<blockquote>\n  <p><em>Unable to downoad JS bundle ...&lt; continued ></em></p>\n</blockquote>\n\n<h3 id=\"troubleshoot\">Troubleshoot</h3>\n\n<p>Obsolete since a while ago, this is not a problem anymore.  </p>\n\n<pre><code>react-native start &gt; /dev/null 2&gt;&amp;1 &amp;  \nadb reverse tcp:8081 tcp:8081  \n</code></pre>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-09-25 06:56:48",
            "created_by": 1,
            "updated_at": "2016-09-27 11:10:06",
            "updated_by": 1,
            "published_at": "2015-09-25 07:01:59",
            "published_by": 1
          },
          {
            "id": 30,
            "uuid": "30db2ae4-0112-463f-9925-f54b774c26c8",
            "title": "Summer Blip",
            "slug": "summer-blip",
            "markdown": "<iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/161016444&amp;color=ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false\"></iframe>\n\n---\n\nWith back full of scratches.\nArms full of bite marks.\nLegs full of glycogen.\nAnd head full of conflict.\n\nI gotta ask you.\nWhere did you come from, creature.\n\nIs this the second coming of the first iPhone from 2007.\nGodsent.\nAlien technology.\nDream-like.\n\nI don't ever wanna wake up.\n\n---\n\n```\nBeen weeks I been living and your smiles are giving me all types of treble\n\nWeak knees I been given and those nights are making me star-struck and metal\n\nStay free\nDon’t go\nCuz we don’t need no\n\nTry to be living as your vice and can you be my type?\n\nCuz we need to be given a good life and can I be your type of metal?\n\nStay free\nDon’t go\nCuz we don’t need no shows\n\nWe don’t need no shows\nWe don’t need no shows\n\nPay for the devil a plug to a pedal I’m your type\nWeak knees from the level I’m sick from the treble I’m your type of metal\n\nWeak knees don’t go\nCuz we don’t need no shows\n\nShe’s sweet as battery, man I got nothin\nYou kiss an enemy’s hands, I got nothing\nWe got an animal band and that’s something\nIt’s not love if it’s just fucking\n\nWe don’t need no shows\n```",
            "mobiledoc": null,
            "html": "<iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/161016444&amp;color=ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false\"></iframe>\n\n<hr />\n\n<p>With back full of scratches. <br />\nArms full of bite marks. <br />\nLegs full of glycogen. <br />\nAnd head full of conflict.</p>\n\n<p>I gotta ask you. <br />\nWhere did you come from, creature.</p>\n\n<p>Is this the second coming of the first iPhone from 2007. <br />\nGodsent. <br />\nAlien technology. <br />\nDream-like.</p>\n\n<p>I don't ever wanna wake up.</p>\n\n<hr />\n\n<pre><code>Been weeks I been living and your smiles are giving me all types of treble\n\nWeak knees I been given and those nights are making me star-struck and metal\n\nStay free  \nDon’t go  \nCuz we don’t need no\n\nTry to be living as your vice and can you be my type?\n\nCuz we need to be given a good life and can I be your type of metal?\n\nStay free  \nDon’t go  \nCuz we don’t need no shows\n\nWe don’t need no shows  \nWe don’t need no shows\n\nPay for the devil a plug to a pedal I’m your type  \nWeak knees from the level I’m sick from the treble I’m your type of metal\n\nWeak knees don’t go  \nCuz we don’t need no shows\n\nShe’s sweet as battery, man I got nothin  \nYou kiss an enemy’s hands, I got nothing  \nWe got an animal band and that’s something  \nIt’s not love if it’s just fucking\n\nWe don’t need no shows  \n</code></pre>",
            "amp": null,
            "image": "/content/images/2015/09/72adf455.jpg",
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-09-28 04:26:47",
            "created_by": 1,
            "updated_at": "2016-08-10 17:09:54",
            "updated_by": 1,
            "published_at": "2015-09-28 04:53:55",
            "published_by": 1
          },
          {
            "id": 31,
            "uuid": "efc9487b-48d7-415f-a212-07fd62c902e4",
            "title": "5 Steps to Shake Out from Crippling Anxiety",
            "slug": "5-4-3-2-1",
            "markdown": "This method helped a lot with my depression. Let us not dwell in sadness. 😀 \n\nRemember the [5-4-3-2-1](https://www.reddit.com/r/AskReddit/comments/3z79yl/redditors_how_do_you_shake_yourselves_out_of_it/cyk3upf) method. It's rather simple.\n\n> Identify 5 things that you can see\n\n> Identify 4 things you can feel (your back against the chair, etc.)\n\n> 3 things you can hear (a car driving by, the tv, your own breath)\n\n> 2 things you can smell (we couldn't really smell anything so they said think of 2 smells that we like)\n\n> 1 thing that you like about yourself\n\nGo to a quiet place, sit down comfortably and pay attention to all of the sounds around you. See how many different sounds you can hear.\n\n**The more you pay attention to your physical senses, the more you pull yourself out of your mind.**",
            "mobiledoc": null,
            "html": "<p>This method helped a lot with my depression. Let us not dwell in sadness. 😀 </p>\n\n<p>Remember the <a href=\"https://www.reddit.com/r/AskReddit/comments/3z79yl/redditors_how_do_you_shake_yourselves_out_of_it/cyk3upf\">5-4-3-2-1</a> method. It's rather simple.</p>\n\n<blockquote>\n  <p>Identify 5 things that you can see</p>\n  \n  <p>Identify 4 things you can feel (your back against the chair, etc.)</p>\n  \n  <p>3 things you can hear (a car driving by, the tv, your own breath)</p>\n  \n  <p>2 things you can smell (we couldn't really smell anything so they said think of 2 smells that we like)</p>\n  \n  <p>1 thing that you like about yourself</p>\n</blockquote>\n\n<p>Go to a quiet place, sit down comfortably and pay attention to all of the sounds around you. See how many different sounds you can hear.</p>\n\n<p><strong>The more you pay attention to your physical senses, the more you pull yourself out of your mind.</strong></p>",
            "amp": null,
            "image": "",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2016-01-03 17:40:07",
            "created_by": 1,
            "updated_at": "2016-08-10 18:49:31",
            "updated_by": 1,
            "published_at": "2016-01-03 17:50:57",
            "published_by": 1
          },
          {
            "id": 32,
            "uuid": "3d8c4637-d319-41f7-b20e-d8a887e382f4",
            "title": "NMAP Adventures : The Apartment of Jarrdin (or, why starting your own 'ISP' is probably a bad idea.)",
            "slug": "nmap-adventures-the-apartment-of-jarrdin-or-why-starting-your-own-isp-is-probably-a-bad-idea",
            "markdown": "PS: `technical people`, go [here]().\n\n---\n\nI've been living in The Jarrdin Apartment in Bandung for almost a year, now. My room is on the 21st floor and I've got quite a view of Bandung from here. My place is decent enough to live in (I love it) but the Apartment complex itself is a ~~big pile of shit ~~mess. No, I'm not talking about the [regulation violation](http://fokusjabar.com/2014/04/10/pembangunan-apartemen-jarrdin-diindikasi-tak-meiliki-izin-lingkungan/) or even the fact that [some guy died two floors below me last October](http://daerah.sindonews.com/read/1055128/21/seminggu-tewas-mayat-usep-membusuk-di-apartemen-jardin-1445432753).\n\nI'm talking about the services. More importantly, the internet service. (Although, if you live here and you want to know how to get free electricity forever you can ask me in private.)\n\n\n\n",
            "mobiledoc": null,
            "html": "<p>PS: <code>technical people</code>, go <a href=\"\">here</a>.</p>\n\n<hr />\n\n<p>I've been living in The Jarrdin Apartment in Bandung for almost a year, now. My room is on the 21st floor and I've got quite a view of Bandung from here. My place is decent enough to live in (I love it) but the Apartment complex itself is a <del>big pile of shit </del>mess. No, I'm not talking about the <a href=\"http://fokusjabar.com/2014/04/10/pembangunan-apartemen-jarrdin-diindikasi-tak-meiliki-izin-lingkungan/\">regulation violation</a> or even the fact that <a href=\"http://daerah.sindonews.com/read/1055128/21/seminggu-tewas-mayat-usep-membusuk-di-apartemen-jardin-1445432753\">some guy died two floors below me last October</a>.</p>\n\n<p>I'm talking about the services. More importantly, the internet service. (Although, if you live here and you want to know how to get free electricity forever you can ask me in private.)</p>",
            "amp": null,
            "image": null,
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2016-02-18 16:25:18",
            "created_by": 1,
            "updated_at": "2016-02-19 00:31:15",
            "updated_by": 1,
            "published_at": null,
            "published_by": null
          },
          {
            "id": 33,
            "uuid": "bff15d31-fd8d-41dc-83c3-3f4ca72960c5",
            "title": "Borrowing Internet Connection (or, how not to make your own ISP)",
            "slug": "borrowing-internet-connection-or-how-not-to-make-your-own-isp",
            "markdown": "Okay. Have you ever taken a girl into your apartment some late night, promising some Netflix? And when the TV turned on, something was off, and then she coyly said *hey, the Netflix doesn't seem to work* and you remembered you **hadn't paid** the Internet service for this month?\n\nWhat would you do in that situation?\n\nOf course, if you're smooth like me, you'd say\n\n> It's okay, I got this.\n\nand then proceed to ~~offer something else instead~~ **HACK INTO THE MAINFRAME**.\n\ntl;dr: Internet works again, she does not seem impressed. I watched Synchronicity (2015) later and wrote this.\n\n#Background\n\nI live in Jarrdin Apartment in Bandung. The service is abysmal. In almost every sense. Does not exclude the Internet service.\n\nInstead of letting users pick and choose their own ISP, or at least do some cooperation with a big and reputable ISP, they chose to provide their own. How?\n\nThey bought a single line from [Jogja Media Net](http://web.jogjamedianet.com/) and split it into *their own* subscribers with a MikroTik router.\n\nThey manage their own subscription (I bet no tech above spreadsheet app) and disconnect the non-paying user like me using IP or MAC address blocking. The connection to each room is using Static IP addresses.\n\nCan you see the fault already?\n\n#Prerequisite\n\n1. `nmap`\n\nThat's it. Seriously. Although for some fun I did use some fun `routersploit` actions.\n\n#The Fun Begins\n\n(disclaimer: ok, ok I cheated. I used some `traceroute` and other stuff to know the topology of my network way before this. It's just habit, you know.)\n\nFact #1: My computer is connected to my router (192.168.0.1)\n\n\nFact #2: My router is still connected to its parent (192.168.140.1)\n\nFact #3: The parent router is still accessible in browser (port 80) [not offline] but my router does not have access to the Internet.\n\nAssumption #1: The Internet cannot be down for all customer since it would cause outrage\n\nAssumption #2: My router's IP or MAC Address is blocked from connecting to the internet.\n\n##Proving Assumptions\n\nFirst, check for sibling routers in my building.\n\nWe run `sudo nmap 192.168.140.1/24`.\n\n![](/content/images/2016/06/2016-06-17-232514_1366x768_scrot.png)\n\nFig.1 *`nmap` results on the left side*\n\nWe saw there's a lot of other IP addresses (routers) with **OPEN!** `http-alt` ports. AMAZING!\n\nThe `http-alt` port is the one for remotely logging in to your router, a default setting in a bad installation. Make sure you turn this off!\n\nSeeing those incompetences, one would not be stupid to try and check for default passwords for those routers.\n\nChecking in for `192.168.140.15:8000` with `admin:admin` yields a successful result.\n\n![](/content/images/2016/06/2016-06-17-225357_1366x768_scrot.png)\n\nFig. 2 *yes we're in*\n\nAfter we're in, we can see that the internet is working in this router.\n\nOur next step would be to impersonate our router as this working one. But since we are not able to know whether it's IP or MAC or both, we have to assume the worst.\n\nWe take note of this router's MAC Address, and then change it to something other. Afterwards, we change their static WAN IP Address to an address not used in our `nmap` results, in this case, `192.168.140.18`.\n\nMake sure it's successful and the internet still works. Don't disturb other people.\n\nWe then spoof our own MAC as the previous one, and we change our static IP to `.15`.\n\n**Voila!**\n\n![](/content/images/2016/06/2016-06-17-232542_1366x768_scrot.png)\n\nFig. 3 *It works!*\n\nThere goes our quest for internet and Netflix. Sadly, I took half an hour to do this and she's not in the mood for Netflix anymore. Oh well.\n\n\n##Other Fun Stuff\n\nRemember I mentioned `routersploit`? Well, I wanted to use it on the main MikroTik. But those devices rarely has a vulnerability except for the really old ones. Found a sibling router with vulns though and did some fun\n\n![](/content/images/2016/06/2016-06-17-232525_1366x768_scrot.png)\n\nFig. 4 *`routersploit` results on the right: blind console! What would `rm -rf /` do? Answer: nothing, apparently.* \n\n#Conclusion\n\n- Don't make your own 'ISP'\n\n- If you do, use standardized solutions\n\n- Don't lie to customers about the speed they're getting\n\nMany lessons learned, and I guess I have to pay for the Internet tomorrow. (or not. (yes of course I have to.))",
            "mobiledoc": null,
            "html": "<p>Okay. Have you ever taken a girl into your apartment some late night, promising some Netflix? And when the TV turned on, something was off, and then she coyly said <em>hey, the Netflix doesn't seem to work</em> and you remembered you <strong>hadn't paid</strong> the Internet service for this month?</p>\n\n<p>What would you do in that situation?</p>\n\n<p>Of course, if you're smooth like me, you'd say</p>\n\n<blockquote>\n  <p>It's okay, I got this.</p>\n</blockquote>\n\n<p>and then proceed to <del>offer something else instead</del> <strong>HACK INTO THE MAINFRAME</strong>.</p>\n\n<p>tl;dr: Internet works again, she does not seem impressed. I watched Synchronicity (2015) later and wrote this.</p>\n\n<h1 id=\"background\">Background</h1>\n\n<p>I live in Jarrdin Apartment in Bandung. The service is abysmal. In almost every sense. Does not exclude the Internet service.</p>\n\n<p>Instead of letting users pick and choose their own ISP, or at least do some cooperation with a big and reputable ISP, they chose to provide their own. How?</p>\n\n<p>They bought a single line from <a href=\"http://web.jogjamedianet.com/\">Jogja Media Net</a> and split it into <em>their own</em> subscribers with a MikroTik router.</p>\n\n<p>They manage their own subscription (I bet no tech above spreadsheet app) and disconnect the non-paying user like me using IP or MAC address blocking. The connection to each room is using Static IP addresses.</p>\n\n<p>Can you see the fault already?</p>\n\n<h1 id=\"prerequisite\">Prerequisite</h1>\n\n<ol>\n<li><code>nmap</code></li>\n</ol>\n\n<p>That's it. Seriously. Although for some fun I did use some fun <code>routersploit</code> actions.</p>\n\n<h1 id=\"thefunbegins\">The Fun Begins</h1>\n\n<p>(disclaimer: ok, ok I cheated. I used some <code>traceroute</code> and other stuff to know the topology of my network way before this. It's just habit, you know.)</p>\n\n<p>Fact #1: My computer is connected to my router (192.168.0.1)</p>\n\n<p>Fact #2: My router is still connected to its parent (192.168.140.1)</p>\n\n<p>Fact #3: The parent router is still accessible in browser (port 80) [not offline] but my router does not have access to the Internet.</p>\n\n<p>Assumption #1: The Internet cannot be down for all customer since it would cause outrage</p>\n\n<p>Assumption #2: My router's IP or MAC Address is blocked from connecting to the internet.</p>\n\n<h2 id=\"provingassumptions\">Proving Assumptions</h2>\n\n<p>First, check for sibling routers in my building.</p>\n\n<p>We run <code>sudo nmap 192.168.140.1/24</code>.</p>\n\n<p><img src=\"/content/images/2016/06/2016-06-17-232514_1366x768_scrot.png\" alt=\"\" /></p>\n\n<p>Fig.1 <em><code>nmap</code> results on the left side</em></p>\n\n<p>We saw there's a lot of other IP addresses (routers) with <strong>OPEN!</strong> <code>http-alt</code> ports. AMAZING!</p>\n\n<p>The <code>http-alt</code> port is the one for remotely logging in to your router, a default setting in a bad installation. Make sure you turn this off!</p>\n\n<p>Seeing those incompetences, one would not be stupid to try and check for default passwords for those routers.</p>\n\n<p>Checking in for <code>192.168.140.15:8000</code> with <code>admin:admin</code> yields a successful result.</p>\n\n<p><img src=\"/content/images/2016/06/2016-06-17-225357_1366x768_scrot.png\" alt=\"\" /></p>\n\n<p>Fig. 2 <em>yes we're in</em></p>\n\n<p>After we're in, we can see that the internet is working in this router.</p>\n\n<p>Our next step would be to impersonate our router as this working one. But since we are not able to know whether it's IP or MAC or both, we have to assume the worst.</p>\n\n<p>We take note of this router's MAC Address, and then change it to something other. Afterwards, we change their static WAN IP Address to an address not used in our <code>nmap</code> results, in this case, <code>192.168.140.18</code>.</p>\n\n<p>Make sure it's successful and the internet still works. Don't disturb other people.</p>\n\n<p>We then spoof our own MAC as the previous one, and we change our static IP to <code>.15</code>.</p>\n\n<p><strong>Voila!</strong></p>\n\n<p><img src=\"/content/images/2016/06/2016-06-17-232542_1366x768_scrot.png\" alt=\"\" /></p>\n\n<p>Fig. 3 <em>It works!</em></p>\n\n<p>There goes our quest for internet and Netflix. Sadly, I took half an hour to do this and she's not in the mood for Netflix anymore. Oh well.</p>\n\n<h2 id=\"otherfunstuff\">Other Fun Stuff</h2>\n\n<p>Remember I mentioned <code>routersploit</code>? Well, I wanted to use it on the main MikroTik. But those devices rarely has a vulnerability except for the really old ones. Found a sibling router with vulns though and did some fun</p>\n\n<p><img src=\"/content/images/2016/06/2016-06-17-232525_1366x768_scrot.png\" alt=\"\" /></p>\n\n<p>Fig. 4 <em><code>routersploit</code> results on the right: blind console! What would <code>rm -rf /</code> do? Answer: nothing, apparently.</em> </p>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<ul>\n<li><p>Don't make your own 'ISP'</p></li>\n<li><p>If you do, use standardized solutions</p></li>\n<li><p>Don't lie to customers about the speed they're getting</p></li>\n</ul>\n\n<p>Many lessons learned, and I guess I have to pay for the Internet tomorrow. (or not. (yes of course I have to.))</p>",
            "amp": null,
            "image": "",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2016-06-17 19:14:14",
            "created_by": 1,
            "updated_at": "2016-08-10 17:52:14",
            "updated_by": 1,
            "published_at": "2016-06-17 20:04:38",
            "published_by": 1
          },
          {
            "id": 34,
            "uuid": "eaed7cf2-eb8c-496c-9e6f-a60c1ab1cb37",
            "title": "Scraping with Axios and Cheerio (Or, How I Got My Campus' Geolocation Data)",
            "slug": "scraping-with-node-or-how-i-got-my-campus-geolocation-data",
            "markdown": "Scraping the web is one of the oldest job since the birth of the internet. This time, I will show you how to scrape, while also showing you how I got the data of **every** rooms in my campus (including empty ones) and their exact position in the floor they are in (using polygons).\n\n# The Problem\n\nMy campus (Institut Teknologi Bandung) has already made an online directory of rooms, located on http://petakampus.itb.ac.id. But it's sluggish and requires Google Earth plugin (which is only available on Firefox and IE 32 bit (and not **Google** Chrome)). YAWN.\n\n![](/content/images/2016/08/2016-08-12-221747_1366x768_scrot.png) Fig. 1\n\nThey even have the indoor maps using polygons as I said above.\n\n![](/content/images/2016/08/72-Labtek-VI-Dapur.png) Fig. 2\n\n# The Solution\n\nFirst of all, here's a rule you should remember. *Everything that can be accessed via the browser, can be crawled.* We just need to know the structure of the data. Check everywhere, thoroughly.\n\n## Step 1: Know Its Structure\n\nOpen the website (if you want to crawl a website) and view the source. `F12` in Chrome, for example. For some websites the data is available in plaintext inside the `<body>` tag.\n\n![](/content/images/2016/08/2016-08-12-211724_1366x768_scrot.png) Fig. 3\n\n\nBut sometimes, website like `petakampus` uses a plugin (e.g Maps, Google Earth) which can not be crawled by plaintext.\n\n![](/content/images/2016/08/2016-08-12-224151_1366x768_scrot.png) Fig. 4\n\nYou have to realize that the plugin **must** be initialized by something. Usually that something is a `<script>` inside the `<head>` tag.\n\n![](/content/images/2016/08/2016-08-12-224752_1366x768_scrot.png) Fig. 5: Voila! Polygons!\n\n## Step 2: Craft the Scraper\n\nThere are many tools to scrape with. We are going to use NodeJS tools since they have handy DOM selectors.\n\nThere's a fast and slim scraper named [`Osmosis`](https://github.com/rchipka/node-osmosis), and also the **HUGE** Electron-based scraper (can even screenshoot) [`Nightmare`](https://github.com/segmentio/nightmare). We will use the middleground for this one, the familiar [`Cheerio`](https://github.com/cheeriojs/cheerio).\n\nWe also need HTTP Client for this. I am choosing [`Axios`](https://github.com/mzabriskie/axios) since it is `Promise` based.\n\n`$ npm i --save axios cheerio`\n\nFirst we will craft the scraper for the list of rooms in [Fig.3]. Each room is in a table data `<td>` tag. Perfect! ☺ \n\n```js\nconst axios = require('axios')\nconst cheerio = require('cheerio')\n\nconst url = 'http://petakampus.itb.ac.id/search/search_map.php'\nconst rooms = []\n\naxios.get(url).then((response) => {\n  var $ = cheerio.load(response.data);\n  $('td').each((i, elm) => {\n    let child = $(elm).children().first()\n...\n```\nYay for data! But the room name and building name is polluted with chevron and unneeded spaces!\n```js\n...\n    let childText = child.text().split('»').join('').slice(1).split(', ')\n    let name = childText.slice(0, -1).join(', ')\n    let building = childText[childText.length - 1]\n...\n```\nCool! Now we parse the room's metadata from its `onClick` attribute.\n```js\n...\n    let attrib = child.attr('onclick').split('javascript:lookat2(').join('').split(')').join('').split(', ').join(',').split(',')\n    // The lat and lon here is just the general position of the building the room is in.\n    let room = {\n      name,\n      building,\n      lat: attrib[0],\n      lon: attrib[1],\n      alt: attrib[2],\n      heading: attrib[3],\n      tilt: attrib[4],\n      range: attrib[5],\n      buildingId: attrib[6],\n      floorId: attrib[7],\n      gId: attrib[8],\n      roomId: attrib[7] + attrib[8]\n    }\n    rooms.push(room)\n  })\n  return rooms\n})\n```\n\n`rooms` is now an array of all room listed there. Not bad, right? Now for the harder part. We will scrape a Google Earth plugin like shown in [Fig. 5]. I will assume you already made an array of `floors` made from the data we scrape above.\n\n```js\n.then(obj => {\n  let { floors } = obj\n  let validatedRoomPolygons = []\n\n  return axios.all(floors.map(floor => {\n    return promiseThrottle.add(() => axios.get(baseUrl + `lantai_gmap2.php?id_gedung=${floor.buildingId}&id_lantai=${floor.id}&gid=${floor.rooms[0].gId}`)).then(response => {\n      let $ = cheerio.load(response.data)\n...\n```\nWait. The data is inside a `<script>` tag. So we need to parse the script as `String`, iterate over all `var triangleCoords`, and skip the first index (before the first `var triangleCoords`) because it does not contain any data.\n\nPS: `promiseThrottle` is used to throttle the request since the `petakampus` server will refuse >15 request per second.\n```js\n...\n      let rawPolygons = $('script')[1].children[0].data.split('var triangleCoords = [\\r\\n           \\r\\n        \\r\\n').slice(1)\n      let parsedPolygons = rawPolygons.map(rawPolygon => {\n        let newPolygon = {\n          type: 'polygon',\n          name: rawPolygon.split('document.getElementById(\\'ifk\\').innerHTML = \\'')[1].split('\\';')[0],\n          buildingName: floor.buildingName,\n\n          buildingId: floor.buildingId,\n          floorId: floor.id,\n          coordinates: rawPolygon.split('    \\r\\n    ];')[0].split('new google.maps.LatLng(').filter((elm, i) => {\n            return i > 0\n          }).map((coordString, i) => {\n            return coordString.split('),')[0].split(',').map((coordNumber) => {\n              let realNumber = Number(coordNumber)\n              return realNumber\n            })\n          }).filter((coordinate) => {\n            return ((coordinate[0] != null) && (coordinate[1] != null))\n          })\n        }\n        return newPolygon\n      })\n      validatedRoomPolygons.push(parsedPolygons.slice(-1)[0])\n      return {floorId: floor.id, buildingId: floor.buildingId, polygons: parsedPolygons.slice(0, -1)}\n    }).catch(reason => {\n      console.log(reason)\n      console.log(floor.id)\n    })\n  }))\n\n```\n\nYay! It's apparently not that hard, we just need to be careful in `slice`, `split`, and `join`ing the script string.\n\n# Conclusion\n\nSeeing the example above, one could use the knowledge to further scrape for more data. I have personally collected the geo data from above and made it available to access in http://campusmap.mustadi.xyz. The source is available in https://github.com/mathdroid/campusmap.\n\nSo now I am building the map client for Android and iOS using React Native. Those who want to contribute, please contact me! Or make a PR in the repo. (The server is using `Koa`, but still uses `mongo` for the DB. Migrating help to `Postgres` is highly appreciated.) 😉 \n\nHope this helps, and happy scraping!\n\n<a class=\"github-button\" href=\"https://github.com/mathdroid\" data-count-href=\"/mathdroid/followers\" data-count-api=\"/users/mathdroid#followers\" data-count-aria-label=\"# followers on GitHub\" aria-label=\"Follow @mathdroid on GitHub\">Follow @mathdroid</a>\n<a class=\"github-button\" href=\"https://github.com/mathdroid/campusmap\" data-icon=\"octicon-star\" data-count-href=\"/mathdroid/campusmap/stargazers\" data-count-api=\"/repos/mathdroid/campusmap#stargazers_count\" data-count-aria-label=\"# stargazers on GitHub\" aria-label=\"Star mathdroid/campusmap on GitHub\">Star mathdroid/campusmap</a>",
            "mobiledoc": null,
            "html": "<p>Scraping the web is one of the oldest job since the birth of the internet. This time, I will show you how to scrape, while also showing you how I got the data of <strong>every</strong> rooms in my campus (including empty ones) and their exact position in the floor they are in (using polygons).</p>\n\n<h1 id=\"theproblem\">The Problem</h1>\n\n<p>My campus (Institut Teknologi Bandung) has already made an online directory of rooms, located on <a href=\"http://petakampus.itb.ac.id\">http://petakampus.itb.ac.id</a>. But it's sluggish and requires Google Earth plugin (which is only available on Firefox and IE 32 bit (and not <strong>Google</strong> Chrome)). YAWN.</p>\n\n<p><img src=\"/content/images/2016/08/2016-08-12-221747_1366x768_scrot.png\" alt=\"\" title=\"\" /> Fig. 1</p>\n\n<p>They even have the indoor maps using polygons as I said above.</p>\n\n<p><img src=\"/content/images/2016/08/72-Labtek-VI-Dapur.png\" alt=\"\" title=\"\" /> Fig. 2</p>\n\n<h1 id=\"thesolution\">The Solution</h1>\n\n<p>First of all, here's a rule you should remember. <em>Everything that can be accessed via the browser, can be crawled.</em> We just need to know the structure of the data. Check everywhere, thoroughly.</p>\n\n<h2 id=\"step1knowitsstructure\">Step 1: Know Its Structure</h2>\n\n<p>Open the website (if you want to crawl a website) and view the source. <code>F12</code> in Chrome, for example. For some websites the data is available in plaintext inside the <code>&lt;body&gt;</code> tag.</p>\n\n<p><img src=\"/content/images/2016/08/2016-08-12-211724_1366x768_scrot.png\" alt=\"\" title=\"\" /> Fig. 3</p>\n\n<p>But sometimes, website like <code>petakampus</code> uses a plugin (e.g Maps, Google Earth) which can not be crawled by plaintext.</p>\n\n<p><img src=\"/content/images/2016/08/2016-08-12-224151_1366x768_scrot.png\" alt=\"\" title=\"\" /> Fig. 4</p>\n\n<p>You have to realize that the plugin <strong>must</strong> be initialized by something. Usually that something is a <code>&lt;script&gt;</code> inside the <code>&lt;head&gt;</code> tag.</p>\n\n<p><img src=\"/content/images/2016/08/2016-08-12-224752_1366x768_scrot.png\" alt=\"\" title=\"\" /> Fig. 5: Voila! Polygons!</p>\n\n<h2 id=\"step2craftthescraper\">Step 2: Craft the Scraper</h2>\n\n<p>There are many tools to scrape with. We are going to use NodeJS tools since they have handy DOM selectors.</p>\n\n<p>There's a fast and slim scraper named <a href=\"https://github.com/rchipka/node-osmosis\"><code>Osmosis</code></a>, and also the <strong>HUGE</strong> Electron-based scraper (can even screenshoot) <a href=\"https://github.com/segmentio/nightmare\"><code>Nightmare</code></a>. We will use the middleground for this one, the familiar <a href=\"https://github.com/cheeriojs/cheerio\"><code>Cheerio</code></a>.</p>\n\n<p>We also need HTTP Client for this. I am choosing <a href=\"https://github.com/mzabriskie/axios\"><code>Axios</code></a> since it is <code>Promise</code> based.</p>\n\n<p><code>$ npm i --save axios cheerio</code></p>\n\n<p>First we will craft the scraper for the list of rooms in [Fig.3]. Each room is in a table data <code>&lt;td&gt;</code> tag. Perfect! ☺ </p>\n\n<pre><code class=\"language-js\">const axios = require('axios')  \nconst cheerio = require('cheerio')\n\nconst url = 'http://petakampus.itb.ac.id/search/search_map.php'  \nconst rooms = []\n\naxios.get(url).then((response) =&gt; {  \n  var $ = cheerio.load(response.data);\n  $('td').each((i, elm) =&gt; {\n    let child = $(elm).children().first()\n...\n</code></pre>\n\n<p>Yay for data! But the room name and building name is polluted with chevron and unneeded spaces!  </p>\n\n<pre><code class=\"language-js\">...\n    let childText = child.text().split('»').join('').slice(1).split(', ')\n    let name = childText.slice(0, -1).join(', ')\n    let building = childText[childText.length - 1]\n...\n</code></pre>\n\n<p>Cool! Now we parse the room's metadata from its <code>onClick</code> attribute.  </p>\n\n<pre><code class=\"language-js\">...\n    let attrib = child.attr('onclick').split('javascript:lookat2(').join('').split(')').join('').split(', ').join(',').split(',')\n    // The lat and lon here is just the general position of the building the room is in.\n    let room = {\n      name,\n      building,\n      lat: attrib[0],\n      lon: attrib[1],\n      alt: attrib[2],\n      heading: attrib[3],\n      tilt: attrib[4],\n      range: attrib[5],\n      buildingId: attrib[6],\n      floorId: attrib[7],\n      gId: attrib[8],\n      roomId: attrib[7] + attrib[8]\n    }\n    rooms.push(room)\n  })\n  return rooms\n})\n</code></pre>\n\n<p><code>rooms</code> is now an array of all room listed there. Not bad, right? Now for the harder part. We will scrape a Google Earth plugin like shown in [Fig. 5]. I will assume you already made an array of <code>floors</code> made from the data we scrape above.</p>\n\n<pre><code class=\"language-js\">.then(obj =&gt; {\n  let { floors } = obj\n  let validatedRoomPolygons = []\n\n  return axios.all(floors.map(floor =&gt; {\n    return promiseThrottle.add(() =&gt; axios.get(baseUrl + `lantai_gmap2.php?id_gedung=${floor.buildingId}&amp;id_lantai=${floor.id}&amp;gid=${floor.rooms[0].gId}`)).then(response =&gt; {\n      let $ = cheerio.load(response.data)\n...\n</code></pre>\n\n<p>Wait. The data is inside a <code>&lt;script&gt;</code> tag. So we need to parse the script as <code>String</code>, iterate over all <code>var triangleCoords</code>, and skip the first index (before the first <code>var triangleCoords</code>) because it does not contain any data.</p>\n\n<p>PS: <code>promiseThrottle</code> is used to throttle the request since the <code>petakampus</code> server will refuse >15 request per second.  </p>\n\n<pre><code class=\"language-js\">...\n      let rawPolygons = $('script')[1].children[0].data.split('var triangleCoords = [\\r\\n           \\r\\n        \\r\\n').slice(1)\n      let parsedPolygons = rawPolygons.map(rawPolygon =&gt; {\n        let newPolygon = {\n          type: 'polygon',\n          name: rawPolygon.split('document.getElementById(\\'ifk\\').innerHTML = \\'')[1].split('\\';')[0],\n          buildingName: floor.buildingName,\n\n          buildingId: floor.buildingId,\n          floorId: floor.id,\n          coordinates: rawPolygon.split('    \\r\\n    ];')[0].split('new google.maps.LatLng(').filter((elm, i) =&gt; {\n            return i &gt; 0\n          }).map((coordString, i) =&gt; {\n            return coordString.split('),')[0].split(',').map((coordNumber) =&gt; {\n              let realNumber = Number(coordNumber)\n              return realNumber\n            })\n          }).filter((coordinate) =&gt; {\n            return ((coordinate[0] != null) &amp;&amp; (coordinate[1] != null))\n          })\n        }\n        return newPolygon\n      })\n      validatedRoomPolygons.push(parsedPolygons.slice(-1)[0])\n      return {floorId: floor.id, buildingId: floor.buildingId, polygons: parsedPolygons.slice(0, -1)}\n    }).catch(reason =&gt; {\n      console.log(reason)\n      console.log(floor.id)\n    })\n  }))\n</code></pre>\n\n<p>Yay! It's apparently not that hard, we just need to be careful in <code>slice</code>, <code>split</code>, and <code>join</code>ing the script string.</p>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>Seeing the example above, one could use the knowledge to further scrape for more data. I have personally collected the geo data from above and made it available to access in <a href=\"http://campusmap.mustadi.xyz\">http://campusmap.mustadi.xyz</a>. The source is available in <a href=\"https://github.com/mathdroid/campusmap\">https://github.com/mathdroid/campusmap</a>.</p>\n\n<p>So now I am building the map client for Android and iOS using React Native. Those who want to contribute, please contact me! Or make a PR in the repo. (The server is using <code>Koa</code>, but still uses <code>mongo</code> for the DB. Migrating help to <code>Postgres</code> is highly appreciated.) 😉 </p>\n\n<p>Hope this helps, and happy scraping!</p>\n\n<p><a class=\"github-button\" href=\"https://github.com/mathdroid\" data-count-href=\"/mathdroid/followers\" data-count-api=\"/users/mathdroid#followers\" data-count-aria-label=\"# followers on GitHub\" aria-label=\"Follow @mathdroid on GitHub\">Follow @mathdroid</a> <br />\n<a class=\"github-button\" href=\"https://github.com/mathdroid/campusmap\" data-icon=\"octicon-star\" data-count-href=\"/mathdroid/campusmap/stargazers\" data-count-api=\"/repos/mathdroid/campusmap#stargazers_count\" data-count-aria-label=\"# stargazers on GitHub\" aria-label=\"Star mathdroid/campusmap on GitHub\">Star mathdroid/campusmap</a></p>",
            "amp": null,
            "image": "/content/images/2016/08/photo-1429305336325-b84ace7eba3b.jpg",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": "Scraping petakampus.itb.ac.id with Axios and Cheerio",
            "meta_description": "Scraping the web is one of the oldest job since the birth of the internet. This time, I will show you how to scrape using Axios and Cheerio in NodeJS.",
            "author_id": 1,
            "created_at": "2016-08-12 14:52:39",
            "created_by": 1,
            "updated_at": "2016-08-13 07:28:42",
            "updated_by": 1,
            "published_at": "2016-08-12 16:41:58",
            "published_by": 1
          },
          {
            "id": 35,
            "uuid": "1ab5c160-f6a7-4515-9a61-702943452670",
            "title": "Purpose",
            "slug": "purpose",
            "markdown": "It has been some fairly hard weeks for me. But I'm not here to complain.\n\nAmidst the things that are going on, I finally found a purpose. A purpose I love, a purpose without attachment to anyone.\n\nI am going to work until no one has to work anymore. Everything else is secondary.",
            "mobiledoc": null,
            "html": "<p>It has been some fairly hard weeks for me. But I'm not here to complain.</p>\n\n<p>Amidst the things that are going on, I finally found a purpose. A purpose I love, a purpose without attachment to anyone.</p>\n\n<p>I am going to work until no one has to work anymore. Everything else is secondary.</p>",
            "amp": null,
            "image": "/content/images/2015/03/wRWj8zm.jpg",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-03-16 10:23:43",
            "created_by": 1,
            "updated_at": "2015-03-16 12:42:48",
            "updated_by": 1,
            "published_at": "2015-03-16 10:27:13",
            "published_by": 1
          },
          {
            "id": 36,
            "uuid": "3244dff9-4a27-43e3-af8d-4122eecf9433",
            "title": "Asynchronous Functions (Or, What Roving Food Stalls Can Learn From JavaScript)",
            "slug": "asynchronous-functions-or-what-roving-food-stalls-can-learn-from-javascript",
            "markdown": "*Asynchronous Functions. Callbacks. Promises.* **What the heck are these?** I asked myself that question several years ago, when I was still new to JavaScript. I came from the *nice, predictable,* and *Synchronous* world of embedded systems (think Arduino and low-level circuitry) and I was flabbergasted at first. I've since managed to understand the concept and now I will try to explain with simple examples to those who haven't.\n\n# Pedagang Mie Keliling\n\n![](/content/images/2016/08/bakso.jpeg)\n\n\nImagine a roving noodle stall. (Or those of you not familiar with these, imagine an Ice Cream Truck which serves the ice cream on plates, silverware included.) The stall has two methods, which are `findCustomers()` and `serveCustomers()`. \n\n`findCustomers()` move the stall 50m forward and generate noise to call customers, returning `true` if anyone comes. \n\n`serveCustomers()` makes it stop by a while to serve those customers (and those in the general area) and wait until the customers are finished to take back the plates and silverware.\n\n\n\nAnd that, is our example application.\n\n# Synchronous Code\n\nIf you are keen enough, maybe you can already see that most of those stalls operate synchronously. We'll try to put those in code terms.\n\n```js\nlet isOpen = true\nlet customerFound = false\n\nwhile (isOpen) {\n  if (!customerFound) {\n    customerFound = findCustomers()\n  } else {\n    serveCustomers()\n    customerFound = false\n  }\n}\n```\n\nlet me remind you that `findCustomers()` and `serveCustomers()` are both **sync** methods. Those of you familiar with Arduino might see the polling nature of the app resembles Arduino's `loop()` function.\n\nFirst of all. This code **works**. It's good enough for the stalls. But **what if?** What if there's another customer, hungry for noodles, 100m ahead while the stall is in serving mode? That other customer would simply not get served until the current ones are finished. Tasks like these are called **blocking** or **synchronous**.\n\nIn an application UI (or browser) that behavior is not expected at all. We can't have our program go around the UI asking the question \"has this button been clicked\" (has the customers finished their meal) and \"has this button been clicked\" and so on. This ties up resources looping around the UI just checking in case something has happened. \n\nThis isn't how most UI frameworks organize things. Instead they implement an event handling system. The user clicking a button is defined as an event and you can associate code with each event - the event handler. When the event occurs the event handler is run. \n\nThis is such a familiar pattern that we hardy give it a second thought but you should. For example, suppose there are three buttons on the screen and the user clicks on all three at high speed - do three different event handlers get started? \n\nIn most cases the answer is no, only one event handler is started at a time. The most common event handling architecture is single threaded - that is it only has one thread of execution and at any one time only one instruction in your entire program is being obeyed, which is analogous to our stall can only serve a customer at a time.\n\n# Asynchronous Code\n\nSynchronous functions are generally not a big problem because we have fast computers, and most event handlers are executed instantly.\n\nBut what about long-running tasks, like fetching data from third-party servers, and API calls? And for our stall, the serving part?\n\nThis is where **async** functions come in. While **sync** functions require our stall to wait until their completions, **async** tasks can be started and then put aside until later, while our stall proceeds to the next steps of the program.\n\nConsider a function `asyncServeCustomers(callback)`.\n\n```js\nfunction asyncServeCustomers (cb) {\n  makeAndGiveNoodleToCustomers()\n  cb()\n}\n```\n\nand we run it like this:\n\n```js\nlet isOpen = true\n\nfunction finishedEating () {\n  // Call the stall to notify, or return the plates \n  // with drones, or whatever.\n}\n\nwhile (isOpen) {\n  if (findCustomers()) {\n    asyncsServeCustomers(finishedEating)\n  }\n}\n```\n\nThink of it like our stall serves the meal with a piece of paper with a link to trackable GPS coordinate of our stall (for the customers to return our plates) or at least a number to call to after they finish eating. Our driver can then stroll back down there and get the plates.\n\nNow our stall can continue roving after it serves the meal to the customer, without having to wait for **those annoying customers who eat so damn slow** (like me) and serve other potential customers instead.\n\n# Promises\n\n> What about promises??\n\nIf you’ve done any serious work in JavaScript, you have probably had to face callbacks, nested inside of callbacks, nested inside of callbacks. \n\n![](/content/images/2016/08/promises-and-chaining-in-angularjs-into-callback-hell-and-back-again-17-638.jpg)\n\nPromises, like callbacks, provide a way to deal with deferred work. (Returning the result of query to the client when it comes back from the database, or waiting the for customers to eat.) \n\nThe main advantage of a promise over a callback is that you have an instance of an object that represents that deferred work. Let's say for example that you wanted to do two things in parallel after some asynchronous action. With callbacks, you would have to create a new callback that managed that flow. With promises, you can get a promise from the first action and pass it to methods that do the next action and get promises back.\n\nIt is not much different since in JavaScript, Promises use callback functions to specify what to do after a Promise has been resolved or rejected.\n\n```js\nfunction asyncServeCustomers (customer) {\n  return new Promise(function (resolve, reject) {\n    var noodle = new Noodle()\n    noodle.onfinished = function () {\n      resolve(customerLocation)\n    }\n    noodle.onerror = function () {\n      reject(customerLocation)\n    }\n  })\n}\n\n```\n\nWhere `resolve` and `reject` are callbacks to handle async events.\n\n```js\n...\nlet curLoc = [LAT, LON]\n...\n\n  asyncServeCustomer(curLoc).then(function (location) {\n    console.log(`customer in ${location} finished eating!`)\n  }).catch(function (location) {\n    console.log(`there's an error in customer ${location}!`)\n  })\n``` \nRegardless of the number of actions to process the `curLoc`, the level of callback functions used stays at one, which is a lot more maintainable and readable then using callback functions alone. \n\nI would say the biggest advantage is that it can lead to cleaner simpler code which is easier to test and maintain.\n\n\n# Conclusion\n\nAnd that is asynchronous code. There are many other resources which can explain it better than me but at least we can confirm here that the workflow of food stalls can learn a lot from Javascript.\n\nThere is still much to be explained, like Event Loop mentioned above, but it will be a subject for another post. Right now, I'm gonna enjoy my noodles.\n\n![](/content/images/2016/08/608369.jpg)\n\nCiao!",
            "mobiledoc": null,
            "html": "<p><em>Asynchronous Functions. Callbacks. Promises.</em> <strong>What the heck are these?</strong> I asked myself that question several years ago, when I was still new to JavaScript. I came from the <em>nice, predictable,</em> and <em>Synchronous</em> world of embedded systems (think Arduino and low-level circuitry) and I was flabbergasted at first. I've since managed to understand the concept and now I will try to explain with simple examples to those who haven't.</p>\n\n<h1 id=\"pedagangmiekeliling\">Pedagang Mie Keliling</h1>\n\n<p><img src=\"/content/images/2016/08/bakso.jpeg\" alt=\"\" /></p>\n\n<p>Imagine a roving noodle stall. (Or those of you not familiar with these, imagine an Ice Cream Truck which serves the ice cream on plates, silverware included.) The stall has two methods, which are <code>findCustomers()</code> and <code>serveCustomers()</code>. </p>\n\n<p><code>findCustomers()</code> move the stall 50m forward and generate noise to call customers, returning <code>true</code> if anyone comes. </p>\n\n<p><code>serveCustomers()</code> makes it stop by a while to serve those customers (and those in the general area) and wait until the customers are finished to take back the plates and silverware.</p>\n\n<p>And that, is our example application.</p>\n\n<h1 id=\"synchronouscode\">Synchronous Code</h1>\n\n<p>If you are keen enough, maybe you can already see that most of those stalls operate synchronously. We'll try to put those in code terms.</p>\n\n<pre><code class=\"language-js\">let isOpen = true  \nlet customerFound = false\n\nwhile (isOpen) {  \n  if (!customerFound) {\n    customerFound = findCustomers()\n  } else {\n    serveCustomers()\n    customerFound = false\n  }\n}\n</code></pre>\n\n<p>let me remind you that <code>findCustomers()</code> and <code>serveCustomers()</code> are both <strong>sync</strong> methods. Those of you familiar with Arduino might see the polling nature of the app resembles Arduino's <code>loop()</code> function.</p>\n\n<p>First of all. This code <strong>works</strong>. It's good enough for the stalls. But <strong>what if?</strong> What if there's another customer, hungry for noodles, 100m ahead while the stall is in serving mode? That other customer would simply not get served until the current ones are finished. Tasks like these are called <strong>blocking</strong> or <strong>synchronous</strong>.</p>\n\n<p>In an application UI (or browser) that behavior is not expected at all. We can't have our program go around the UI asking the question \"has this button been clicked\" (has the customers finished their meal) and \"has this button been clicked\" and so on. This ties up resources looping around the UI just checking in case something has happened. </p>\n\n<p>This isn't how most UI frameworks organize things. Instead they implement an event handling system. The user clicking a button is defined as an event and you can associate code with each event - the event handler. When the event occurs the event handler is run. </p>\n\n<p>This is such a familiar pattern that we hardy give it a second thought but you should. For example, suppose there are three buttons on the screen and the user clicks on all three at high speed - do three different event handlers get started? </p>\n\n<p>In most cases the answer is no, only one event handler is started at a time. The most common event handling architecture is single threaded - that is it only has one thread of execution and at any one time only one instruction in your entire program is being obeyed, which is analogous to our stall can only serve a customer at a time.</p>\n\n<h1 id=\"asynchronouscode\">Asynchronous Code</h1>\n\n<p>Synchronous functions are generally not a big problem because we have fast computers, and most event handlers are executed instantly.</p>\n\n<p>But what about long-running tasks, like fetching data from third-party servers, and API calls? And for our stall, the serving part?</p>\n\n<p>This is where <strong>async</strong> functions come in. While <strong>sync</strong> functions require our stall to wait until their completions, <strong>async</strong> tasks can be started and then put aside until later, while our stall proceeds to the next steps of the program.</p>\n\n<p>Consider a function <code>asyncServeCustomers(callback)</code>.</p>\n\n<pre><code class=\"language-js\">function asyncServeCustomers (cb) {  \n  makeAndGiveNoodleToCustomers()\n  cb()\n}\n</code></pre>\n\n<p>and we run it like this:</p>\n\n<pre><code class=\"language-js\">let isOpen = true\n\nfunction finishedEating () {  \n  // Call the stall to notify, or return the plates \n  // with drones, or whatever.\n}\n\nwhile (isOpen) {  \n  if (findCustomers()) {\n    asyncsServeCustomers(finishedEating)\n  }\n}\n</code></pre>\n\n<p>Think of it like our stall serves the meal with a piece of paper with a link to trackable GPS coordinate of our stall (for the customers to return our plates) or at least a number to call to after they finish eating. Our driver can then stroll back down there and get the plates.</p>\n\n<p>Now our stall can continue roving after it serves the meal to the customer, without having to wait for <strong>those annoying customers who eat so damn slow</strong> (like me) and serve other potential customers instead.</p>\n\n<h1 id=\"promises\">Promises</h1>\n\n<blockquote>\n  <p>What about promises??</p>\n</blockquote>\n\n<p>If you’ve done any serious work in JavaScript, you have probably had to face callbacks, nested inside of callbacks, nested inside of callbacks. </p>\n\n<p><img src=\"/content/images/2016/08/promises-and-chaining-in-angularjs-into-callback-hell-and-back-again-17-638.jpg\" alt=\"\" /></p>\n\n<p>Promises, like callbacks, provide a way to deal with deferred work. (Returning the result of query to the client when it comes back from the database, or waiting the for customers to eat.) </p>\n\n<p>The main advantage of a promise over a callback is that you have an instance of an object that represents that deferred work. Let's say for example that you wanted to do two things in parallel after some asynchronous action. With callbacks, you would have to create a new callback that managed that flow. With promises, you can get a promise from the first action and pass it to methods that do the next action and get promises back.</p>\n\n<p>It is not much different since in JavaScript, Promises use callback functions to specify what to do after a Promise has been resolved or rejected.</p>\n\n<pre><code class=\"language-js\">function asyncServeCustomers (customer) {  \n  return new Promise(function (resolve, reject) {\n    var noodle = new Noodle()\n    noodle.onfinished = function () {\n      resolve(customerLocation)\n    }\n    noodle.onerror = function () {\n      reject(customerLocation)\n    }\n  })\n}\n</code></pre>\n\n<p>Where <code>resolve</code> and <code>reject</code> are callbacks to handle async events.</p>\n\n<pre><code class=\"language-js\">...\nlet curLoc = [LAT, LON]  \n...\n\n  asyncServeCustomer(curLoc).then(function (location) {\n    console.log(`customer in ${location} finished eating!`)\n  }).catch(function (location) {\n    console.log(`there's an error in customer ${location}!`)\n  })\n</code></pre>\n\n<p>\nRegardless of the number of actions to process the <code>curLoc</code>, the level of callback functions used stays at one, which is a lot more maintainable and readable then using callback functions alone. </p>\n\n<p>I would say the biggest advantage is that it can lead to cleaner simpler code which is easier to test and maintain.</p>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>And that is asynchronous code. There are many other resources which can explain it better than me but at least we can confirm here that the workflow of food stalls can learn a lot from Javascript.</p>\n\n<p>There is still much to be explained, like Event Loop mentioned above, but it will be a subject for another post. Right now, I'm gonna enjoy my noodles.</p>\n\n<p><img src=\"/content/images/2016/08/608369.jpg\" alt=\"\" /></p>\n\n<p>Ciao!</p>",
            "amp": null,
            "image": "/content/images/2016/09/mustadi-xyz--3-.png",
            "featured": 0,
            "page": 0,
            "status": "published",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2016-08-27 09:31:35",
            "created_by": 1,
            "updated_at": "2016-09-26 00:48:25",
            "updated_by": 1,
            "published_at": "2016-08-27 11:47:59",
            "published_by": 1
          },
          {
            "id": 37,
            "uuid": "a446b024-7476-4285-896d-d42dda33df35",
            "title": "Muhammad Mustadi",
            "slug": "me",
            "markdown": "Hi there, welcome! People call me **Odi**. You may also know me by my screen name, @**mathdroid**. My passion for making stuff is deeply entrenched since I was a kid, and so is my interest in computers. I majored in [Electrical Engineering][1], where I found my true calling, which is [automation][2]. I keep dreaming this version of the world where people no longer have to do dirty jobs anymore, where humanity is [served][3] [by][4] [machines][5], and nobody has to [struggle][6] just to keep themselves alive. I'm working my best to help achieve that cause, but everything must start small, so nowadays I try to make beautiful and performant programs. (Currently in love with [Javascript][7].)\n\nI still [Tweet][8] sometimes 😉, and if 140 characters aren't enough, I put them into my [Blog][9]. Sometimes I do interesting stuff with codes that I put on my [GitHub][10]. My friends and family can find me on [Facebook][11] or [Path][12], and even in [Instagram][13], although I rarely post there. I make chill playlists on [Spotify][14] and track them on [Last.fm][15].\n\nYou can reach me via the contact form above. If you want to encrypt your messages, my PGP key is hosted on my [Keybase][16]. Cheers! 🍻\n\nP.S: for recruiters, here's my [résumé][17].\n\n[1]: https://itb.ac.id\n[2]: https://en.wikipedia.org/wiki/Automation\n[3]: https://en.wikipedia.org/wiki/Robotics\n[4]: https://en.wikipedia.org/wiki/Military_robot\n[5]: https://en.wikipedia.org/wiki/Domestic_robot\n[6]: https://en.wikipedia.org/wiki/Basic_income\n[7]: https://babeljs.io/\n[8]: https://twitter.com/mathdroid\n[9]: https://mustadi.xyz\n[10]: https://github.com/mathdroid\n[11]: https://www.facebook.com/mathdroid\n[12]: https://www.path.com/profile/3GZaRp\n[13]: https://instagram.com/idatsum\n[14]: https://play.spotify.com/user/12164039257\n[15]: http://last.fm/user/mathdroid\n[16]: https://keybase.io/mathdroid\n[17]: https://standardresume.co/MuhammadMustadi\n  ",
            "mobiledoc": null,
            "html": "<p>Hi there, welcome! People call me <strong>Odi</strong>. You may also know me by my screen name, @<strong>mathdroid</strong>. My passion for making stuff is deeply entrenched since I was a kid, and so is my interest in computers. I majored in <a href=\"https://itb.ac.id\">Electrical Engineering</a>, where I found my true calling, which is <a href=\"https://en.wikipedia.org/wiki/Automation\">automation</a>. I keep dreaming this version of the world where people no longer have to do dirty jobs anymore, where humanity is <a href=\"https://en.wikipedia.org/wiki/Robotics\">served</a> <a href=\"https://en.wikipedia.org/wiki/Military_robot\">by</a> <a href=\"https://en.wikipedia.org/wiki/Domestic_robot\">machines</a>, and nobody has to <a href=\"https://en.wikipedia.org/wiki/Basic_income\">struggle</a> just to keep themselves alive. I'm working my best to help achieve that cause, but everything must start small, so nowadays I try to make beautiful and performant programs. (Currently in love with <a href=\"https://babeljs.io/\">Javascript</a>.)</p>\n\n<p>I still <a href=\"https://twitter.com/mathdroid\">Tweet</a> sometimes 😉, and if 140 characters aren't enough, I put them into my <a href=\"https://mustadi.xyz\">Blog</a>. Sometimes I do interesting stuff with codes that I put on my <a href=\"https://github.com/mathdroid\">GitHub</a>. My friends and family can find me on <a href=\"https://www.facebook.com/mathdroid\">Facebook</a> or <a href=\"https://www.path.com/profile/3GZaRp\">Path</a>, and even in <a href=\"https://instagram.com/idatsum\">Instagram</a>, although I rarely post there. I make chill playlists on <a href=\"https://play.spotify.com/user/12164039257\">Spotify</a> and track them on <a href=\"http://last.fm/user/mathdroid\">Last.fm</a>.</p>\n\n<p>You can reach me via the contact form above. If you want to encrypt your messages, my PGP key is hosted on my <a href=\"https://keybase.io/mathdroid\">Keybase</a>. Cheers! 🍻</p>\n\n<p>P.S: for recruiters, here's my <a href=\"https://standardresume.co/MuhammadMustadi\">résumé</a>.</p>",
            "amp": null,
            "image": "/content/images/2016/10/mustadi-xyz-me-mini.jpg",
            "featured": 0,
            "page": 1,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2016-10-06 02:03:16",
            "created_by": 1,
            "updated_at": "2016-10-06 02:28:06",
            "updated_by": 1,
            "published_at": null,
            "published_by": null
          },
          {
            "id": 38,
            "uuid": "51df0c8e-2ef8-469e-883c-f8a3ad3b5218",
            "title": "Blob of Colors (Personal Log 20150317)",
            "slug": "blob-of-colors",
            "markdown": "Took some walk today. Around the campus. Literally. For half an hour? The weather was pretty fine. Listened to this the whole walk. \n\n<iframe width=\"100%\" height=\"450\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/88086168&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;visual=true\"></iframe>\n\nThe isolation was great, actually. I defocus my eyes as much as I can, until I no longer *see* people. Just blob of colors, obstacles that must be avoided.\n\nMade me cherish the warmth of the sun and the breeze of the wind more. I'm gonna do this more often.\n\n---\n\nPS: early preview of Clocky!\n\n![](/content/images/2015/03/Clocky_541.png)",
            "mobiledoc": null,
            "html": "<p>Took some walk today. Around the campus. Literally. For half an hour? The weather was pretty fine. Listened to this the whole walk. </p>\n\n<iframe width=\"100%\" height=\"450\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/88086168&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;visual=true\"></iframe>\n\n<p>The isolation was great, actually. I defocus my eyes as much as I can, until I no longer <em>see</em> people. Just blob of colors, obstacles that must be avoided.</p>\n\n<p>Made me cherish the warmth of the sun and the breeze of the wind more. I'm gonna do this more often.</p>\n\n<hr />\n\n<p>PS: early preview of Clocky!</p>\n\n<p><img src=\"/content/images/2015/03/Clocky_541.png\" alt=\"\" /></p>",
            "amp": null,
            "image": "/content/images/2015/03/Kp17JXD.jpg",
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-03-17 09:19:08",
            "created_by": 1,
            "updated_at": "2016-12-07 13:16:59",
            "updated_by": 1,
            "published_at": "2015-03-17 09:27:05",
            "published_by": 1
          },
          {
            "id": 39,
            "uuid": "538bab88-0d6a-403e-92f9-b1d70fb7a710",
            "title": "Find That Someone",
            "slug": "find-that-someone",
            "markdown": "This is by far, according to me, Monstercat's best release. The quality, the music video. Liking this so much.\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/h7aunPoTU64\" frameborder=\"0\" allowfullscreen></iframe>\n\n---\n\n    I could tell you what I never ever said to her\n    But I could never love\n    But I could never love\n    I can do the things she wants\n    The things I did with her\n    But I could never love\n    But I could never love\n    Wish you could find that someone\n    Find that someone\n    Find that someone\n    With someone just like you\n    Just like you\n    If you could find that someone\n    Find that someone\n    Find that someone\n    With someone just like you\n    Just like you\n    You're a treasure in the sea\n    An adventure that I need\n    You're a treasure in the sea\n    An adventure that I need\n    I could tell you what I never ever said to her\n    But I could never love\n    But I could never love\n    I can do the things she wants\n    The things I did with her\n    But I could never love\n    But I could never love\n    Wish you could find that someone\n    Find that someone\n    Find that someone\n    With someone just like you\n    Just like you\n    If you could find that someone\n    Find that someone\n    Find that someone\n    With someone just like you\n    Just like you\n    You're a treasure in the sea\n    An adventure that I need\n    You're a treasure in the sea\n    An adventure that I need\n    You can tell me secrets\n    All the little things\n    But I would never keep it\n    I would never keep it\n    But if I tell you a secrets\n    All the little things\n    Wouldn't you like to keep it\n    Wouldn't you like to keep it\n    You can tell me secrets\n    All the little things\n    But I would never keep it\n    I would never keep it\n    But if I tell you a secrets\n    All the little things\n    Wouldn't you like to keep it\n    Wouldn't you like to keep it\n    Wish you could find that someone\n    Find that someone\n    Find that someone\n    With someone just like you\n    Just like you\n    If you could find that someone\n    Find that someone\n    Find that someone\n    With someone just like you\n    Just like you\n    You\n    You\n    With someone just like you\n    Just like you",
            "mobiledoc": null,
            "html": "<p>This is by far, according to me, Monstercat's best release. The quality, the music video. Liking this so much.</p>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/h7aunPoTU64\" frameborder=\"0\" allowfullscreen></iframe>\n\n<hr />\n\n<pre><code>I could tell you what I never ever said to her\nBut I could never love\nBut I could never love\nI can do the things she wants\nThe things I did with her\nBut I could never love\nBut I could never love\nWish you could find that someone\nFind that someone\nFind that someone\nWith someone just like you\nJust like you\nIf you could find that someone\nFind that someone\nFind that someone\nWith someone just like you\nJust like you\nYou're a treasure in the sea\nAn adventure that I need\nYou're a treasure in the sea\nAn adventure that I need\nI could tell you what I never ever said to her\nBut I could never love\nBut I could never love\nI can do the things she wants\nThe things I did with her\nBut I could never love\nBut I could never love\nWish you could find that someone\nFind that someone\nFind that someone\nWith someone just like you\nJust like you\nIf you could find that someone\nFind that someone\nFind that someone\nWith someone just like you\nJust like you\nYou're a treasure in the sea\nAn adventure that I need\nYou're a treasure in the sea\nAn adventure that I need\nYou can tell me secrets\nAll the little things\nBut I would never keep it\nI would never keep it\nBut if I tell you a secrets\nAll the little things\nWouldn't you like to keep it\nWouldn't you like to keep it\nYou can tell me secrets\nAll the little things\nBut I would never keep it\nI would never keep it\nBut if I tell you a secrets\nAll the little things\nWouldn't you like to keep it\nWouldn't you like to keep it\nWish you could find that someone\nFind that someone\nFind that someone\nWith someone just like you\nJust like you\nIf you could find that someone\nFind that someone\nFind that someone\nWith someone just like you\nJust like you\nYou\nYou\nWith someone just like you\nJust like you\n</code></pre>",
            "amp": null,
            "image": "/content/images/2015/03/televisor__monstercat__wallpaper_2_by_rekavm-d6392uf.png",
            "featured": 0,
            "page": 0,
            "status": "draft",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "author_id": 1,
            "created_at": "2015-03-19 01:05:28",
            "created_by": 1,
            "updated_at": "2016-08-10 19:12:44",
            "updated_by": 1,
            "published_at": "2015-03-19 01:09:00",
            "published_by": 1
          }
        ],
        "users": [
          {
            "id": 1,
            "uuid": "52cd63e4-2895-4388-8d7b-322cdcb7e1c4",
            "name": "Muhammad Mustadi",
            "slug": "muhammad",
            "password": "$2a$10$ep/guXM92p5cA3BG5oKzN.27CUAJHgndrjy4C0dCwN9JhpofuzH2.",
            "email": "muhammad.mustadi@gmail.com",
            "image": "//www.gravatar.com/avatar/ab34eb692fee1ed0de946bfce1177588?s=250&d=mm&r=x",
            "cover": null,
            "bio": null,
            "website": null,
            "location": null,
            "facebook": null,
            "twitter": null,
            "accessibility": null,
            "status": "active",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "tour": null,
            "last_login": "2017-01-29 10:00:58",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2017-01-29 10:00:58",
            "updated_by": 1
          },
          {
            "id": 2,
            "uuid": "3cdec332-1e8a-4a78-897a-f29e06b8a2e5",
            "name": "mathdroid",
            "slug": "mathdroid",
            "password": "$2a$10$0uHt06pj6rB/kgydPcOQdeglB6B/Iomn9ASc9XuDYW7NmZW8.tG7a",
            "email": "mathdroid@gmail.com",
            "image": null,
            "cover": null,
            "bio": null,
            "website": null,
            "location": null,
            "facebook": null,
            "twitter": null,
            "accessibility": null,
            "status": "invited",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "tour": null,
            "last_login": null,
            "created_at": "2016-11-08 10:09:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:09:44",
            "updated_by": 1
          },
          {
            "id": 3,
            "uuid": "a7028ab6-f722-463c-80bb-316d29fc5cab",
            "name": "operator",
            "slug": "operator",
            "password": "$2a$10$uZcEWo4G4AFgH3jgDXEXO.sU1nxjtkAv0xIWIAYTPlPQbXc7JNV6.",
            "email": "hi@mustadi.xyz",
            "image": null,
            "cover": null,
            "bio": null,
            "website": null,
            "location": null,
            "facebook": null,
            "twitter": null,
            "accessibility": null,
            "status": "active",
            "language": "en_US",
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "tour": null,
            "last_login": "2016-11-08 12:36:43",
            "created_at": "2016-11-08 10:09:44",
            "created_by": 1,
            "updated_at": "2016-11-08 12:36:43",
            "updated_by": 3
          }
        ],
        "roles": [
          {
            "id": 1,
            "uuid": "0efbb583-db31-4943-87b3-a87ed6aef0b5",
            "name": "Administrator",
            "description": "Administrators",
            "created_at": "2016-11-08 10:08:43",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:43",
            "updated_by": 1
          },
          {
            "id": 2,
            "uuid": "8917c97f-9bea-446a-9917-fc3b8e424098",
            "name": "Editor",
            "description": "Editors",
            "created_at": "2016-11-08 10:08:43",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:43",
            "updated_by": 1
          },
          {
            "id": 3,
            "uuid": "b11276a1-17fa-4463-9714-c9dd367e346b",
            "name": "Author",
            "description": "Authors",
            "created_at": "2016-11-08 10:08:43",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:43",
            "updated_by": 1
          },
          {
            "id": 4,
            "uuid": "1906769e-1442-460f-9ea2-49b628d213a3",
            "name": "Owner",
            "description": "Blog Owner",
            "created_at": "2016-11-08 10:08:43",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:43",
            "updated_by": 1
          }
        ],
        "roles_users": [
          {
            "id": 1,
            "role_id": 4,
            "user_id": 1
          },
          {
            "id": 2,
            "role_id": 3,
            "user_id": 2
          },
          {
            "id": 3,
            "role_id": 3,
            "user_id": 3
          }
        ],
        "permissions": [
          {
            "id": 1,
            "uuid": "399a4a3d-ec0d-4ae7-bf1e-08d4412def09",
            "name": "Export database",
            "object_type": "db",
            "action_type": "exportContent",
            "object_id": null,
            "created_at": "2016-11-08 10:08:43",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:43",
            "updated_by": 1
          },
          {
            "id": 2,
            "uuid": "1e233cc6-d380-4072-ad86-82b8627c6397",
            "name": "Import database",
            "object_type": "db",
            "action_type": "importContent",
            "object_id": null,
            "created_at": "2016-11-08 10:08:43",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:43",
            "updated_by": 1
          },
          {
            "id": 3,
            "uuid": "33080f2c-836d-44cc-8cb0-3ab227e978c0",
            "name": "Delete all content",
            "object_type": "db",
            "action_type": "deleteAllContent",
            "object_id": null,
            "created_at": "2016-11-08 10:08:43",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:43",
            "updated_by": 1
          },
          {
            "id": 4,
            "uuid": "48328266-682e-4eee-9cf9-2e84b094fcf9",
            "name": "Send mail",
            "object_type": "mail",
            "action_type": "send",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 5,
            "uuid": "2cf005c2-1a22-4b98-8327-23fd9a24f6b8",
            "name": "Browse notifications",
            "object_type": "notification",
            "action_type": "browse",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 6,
            "uuid": "8830445d-747f-45c8-8bd7-6d6421c43a4c",
            "name": "Add notifications",
            "object_type": "notification",
            "action_type": "add",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 7,
            "uuid": "70bcb247-e7a4-4a18-afa7-5f0223f02b78",
            "name": "Delete notifications",
            "object_type": "notification",
            "action_type": "destroy",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 8,
            "uuid": "1c46d345-0484-4862-89d0-2731093bbd35",
            "name": "Browse posts",
            "object_type": "post",
            "action_type": "browse",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 9,
            "uuid": "2020d0c5-1c4f-4044-9f5b-b518f8cd6a50",
            "name": "Read posts",
            "object_type": "post",
            "action_type": "read",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 10,
            "uuid": "2245b23e-2b92-45db-a6ae-ed825f59bc42",
            "name": "Edit posts",
            "object_type": "post",
            "action_type": "edit",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 11,
            "uuid": "3af96852-72cd-4349-81aa-b6422b1ea043",
            "name": "Add posts",
            "object_type": "post",
            "action_type": "add",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 12,
            "uuid": "73efbf79-1aac-4557-9ec6-b295a61a3f4d",
            "name": "Delete posts",
            "object_type": "post",
            "action_type": "destroy",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 13,
            "uuid": "8138697f-5050-482e-9e72-163843557c4e",
            "name": "Browse settings",
            "object_type": "setting",
            "action_type": "browse",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 14,
            "uuid": "8ddee0ed-91a5-400a-b849-56ff8df25d97",
            "name": "Read settings",
            "object_type": "setting",
            "action_type": "read",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 15,
            "uuid": "7c058e26-6fb8-4717-8788-58aff8c66ada",
            "name": "Edit settings",
            "object_type": "setting",
            "action_type": "edit",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 16,
            "uuid": "79c6abe6-ec9b-44b9-9886-c5eb6f443232",
            "name": "Generate slugs",
            "object_type": "slug",
            "action_type": "generate",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 17,
            "uuid": "2a9dc5f3-9627-4c39-9e7f-fa88008dc4c5",
            "name": "Browse tags",
            "object_type": "tag",
            "action_type": "browse",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 18,
            "uuid": "05e3e175-1545-40ea-8d5a-9613c0b84a52",
            "name": "Read tags",
            "object_type": "tag",
            "action_type": "read",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 19,
            "uuid": "13e95bb4-e519-497c-a942-a1d727442bea",
            "name": "Edit tags",
            "object_type": "tag",
            "action_type": "edit",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 20,
            "uuid": "d44690c4-11f6-47bc-a990-fd452ae03bff",
            "name": "Add tags",
            "object_type": "tag",
            "action_type": "add",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 21,
            "uuid": "359839e0-083e-4a72-839e-352ebf8b5dfe",
            "name": "Delete tags",
            "object_type": "tag",
            "action_type": "destroy",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 22,
            "uuid": "1afd8363-7d3e-4d8a-88fd-4276c40f231a",
            "name": "Browse themes",
            "object_type": "theme",
            "action_type": "browse",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 23,
            "uuid": "72048a7d-4d7a-4d98-ac4d-44eb1ed5de6a",
            "name": "Edit themes",
            "object_type": "theme",
            "action_type": "edit",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 24,
            "uuid": "a3383c61-718b-4a41-83a1-28d79b05c4ed",
            "name": "Upload themes",
            "object_type": "theme",
            "action_type": "add",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 25,
            "uuid": "4db868d8-e9fa-4365-9aa2-d36a9c691eb7",
            "name": "Download themes",
            "object_type": "theme",
            "action_type": "read",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 26,
            "uuid": "a44d8197-fc12-4671-84c7-f2f872a2df5c",
            "name": "Delete themes",
            "object_type": "theme",
            "action_type": "destroy",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 27,
            "uuid": "7c423733-a558-4616-98a0-67d11aae876b",
            "name": "Browse users",
            "object_type": "user",
            "action_type": "browse",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 28,
            "uuid": "136c9dec-a3d8-42e7-b1f9-c620ff1e8786",
            "name": "Read users",
            "object_type": "user",
            "action_type": "read",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 29,
            "uuid": "89d2f9a2-d282-48cf-ac43-ba593b55fe9d",
            "name": "Edit users",
            "object_type": "user",
            "action_type": "edit",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 30,
            "uuid": "b116b798-fcb8-4759-87a8-3341cb1a84a7",
            "name": "Add users",
            "object_type": "user",
            "action_type": "add",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 31,
            "uuid": "24acd3f7-f783-4e08-9bf4-ed4f97ccfce6",
            "name": "Delete users",
            "object_type": "user",
            "action_type": "destroy",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 32,
            "uuid": "e780dc3c-006e-4830-bb77-5da2814a1655",
            "name": "Assign a role",
            "object_type": "role",
            "action_type": "assign",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 33,
            "uuid": "86d45f98-8830-4c24-bc89-5f1d21d98669",
            "name": "Browse roles",
            "object_type": "role",
            "action_type": "browse",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 34,
            "uuid": "f65b636c-5bae-4102-8627-bef10c3c02db",
            "name": "Browse clients",
            "object_type": "client",
            "action_type": "browse",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 35,
            "uuid": "4b440043-4a03-43a0-9142-bbad6ca0601b",
            "name": "Read clients",
            "object_type": "client",
            "action_type": "read",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 36,
            "uuid": "41f0f51f-cca6-4d45-a9a3-e312760122f5",
            "name": "Edit clients",
            "object_type": "client",
            "action_type": "edit",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 37,
            "uuid": "b9ec86f7-1573-4611-ad4b-697a2ee4357c",
            "name": "Add clients",
            "object_type": "client",
            "action_type": "add",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 38,
            "uuid": "0c91dd92-f7f0-41ff-9e4f-d03c7a455ff9",
            "name": "Delete clients",
            "object_type": "client",
            "action_type": "destroy",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 39,
            "uuid": "cabc1748-2fd2-4262-8338-1d1f916f85ac",
            "name": "Browse subscribers",
            "object_type": "subscriber",
            "action_type": "browse",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 40,
            "uuid": "da256895-1530-47f1-a010-bf9d339ed755",
            "name": "Read subscribers",
            "object_type": "subscriber",
            "action_type": "read",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 41,
            "uuid": "0b4c1304-de88-4f42-bb02-b234cc1cbc5c",
            "name": "Edit subscribers",
            "object_type": "subscriber",
            "action_type": "edit",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 42,
            "uuid": "3c997a27-1c36-4cc6-bf26-87ac2286f38c",
            "name": "Add subscribers",
            "object_type": "subscriber",
            "action_type": "add",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          },
          {
            "id": 43,
            "uuid": "40d77402-529a-4fb3-ab43-d6fb44e6adbf",
            "name": "Delete subscribers",
            "object_type": "subscriber",
            "action_type": "destroy",
            "object_id": null,
            "created_at": "2016-11-08 10:08:44",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:44",
            "updated_by": 1
          }
        ],
        "permissions_users": [],
        "permissions_roles": [
          {
            "id": 1,
            "role_id": 1,
            "permission_id": 1
          },
          {
            "id": 2,
            "role_id": 1,
            "permission_id": 2
          },
          {
            "id": 3,
            "role_id": 1,
            "permission_id": 3
          },
          {
            "id": 4,
            "role_id": 1,
            "permission_id": 4
          },
          {
            "id": 5,
            "role_id": 1,
            "permission_id": 5
          },
          {
            "id": 6,
            "role_id": 1,
            "permission_id": 6
          },
          {
            "id": 7,
            "role_id": 1,
            "permission_id": 7
          },
          {
            "id": 8,
            "role_id": 1,
            "permission_id": 8
          },
          {
            "id": 9,
            "role_id": 1,
            "permission_id": 9
          },
          {
            "id": 10,
            "role_id": 1,
            "permission_id": 10
          },
          {
            "id": 11,
            "role_id": 1,
            "permission_id": 11
          },
          {
            "id": 12,
            "role_id": 1,
            "permission_id": 12
          },
          {
            "id": 13,
            "role_id": 1,
            "permission_id": 13
          },
          {
            "id": 14,
            "role_id": 1,
            "permission_id": 14
          },
          {
            "id": 15,
            "role_id": 1,
            "permission_id": 15
          },
          {
            "id": 16,
            "role_id": 1,
            "permission_id": 16
          },
          {
            "id": 17,
            "role_id": 1,
            "permission_id": 17
          },
          {
            "id": 18,
            "role_id": 1,
            "permission_id": 18
          },
          {
            "id": 19,
            "role_id": 1,
            "permission_id": 19
          },
          {
            "id": 20,
            "role_id": 1,
            "permission_id": 20
          },
          {
            "id": 21,
            "role_id": 1,
            "permission_id": 21
          },
          {
            "id": 22,
            "role_id": 1,
            "permission_id": 22
          },
          {
            "id": 23,
            "role_id": 1,
            "permission_id": 23
          },
          {
            "id": 24,
            "role_id": 1,
            "permission_id": 24
          },
          {
            "id": 25,
            "role_id": 1,
            "permission_id": 25
          },
          {
            "id": 26,
            "role_id": 1,
            "permission_id": 26
          },
          {
            "id": 27,
            "role_id": 1,
            "permission_id": 27
          },
          {
            "id": 28,
            "role_id": 1,
            "permission_id": 28
          },
          {
            "id": 29,
            "role_id": 1,
            "permission_id": 29
          },
          {
            "id": 30,
            "role_id": 1,
            "permission_id": 30
          },
          {
            "id": 31,
            "role_id": 1,
            "permission_id": 31
          },
          {
            "id": 32,
            "role_id": 1,
            "permission_id": 32
          },
          {
            "id": 33,
            "role_id": 1,
            "permission_id": 33
          },
          {
            "id": 34,
            "role_id": 1,
            "permission_id": 34
          },
          {
            "id": 35,
            "role_id": 1,
            "permission_id": 35
          },
          {
            "id": 36,
            "role_id": 1,
            "permission_id": 36
          },
          {
            "id": 37,
            "role_id": 1,
            "permission_id": 37
          },
          {
            "id": 38,
            "role_id": 1,
            "permission_id": 38
          },
          {
            "id": 39,
            "role_id": 1,
            "permission_id": 39
          },
          {
            "id": 40,
            "role_id": 1,
            "permission_id": 40
          },
          {
            "id": 41,
            "role_id": 1,
            "permission_id": 41
          },
          {
            "id": 42,
            "role_id": 1,
            "permission_id": 42
          },
          {
            "id": 43,
            "role_id": 1,
            "permission_id": 43
          },
          {
            "id": 44,
            "role_id": 2,
            "permission_id": 8
          },
          {
            "id": 45,
            "role_id": 2,
            "permission_id": 9
          },
          {
            "id": 46,
            "role_id": 2,
            "permission_id": 10
          },
          {
            "id": 47,
            "role_id": 2,
            "permission_id": 11
          },
          {
            "id": 48,
            "role_id": 2,
            "permission_id": 12
          },
          {
            "id": 49,
            "role_id": 2,
            "permission_id": 13
          },
          {
            "id": 50,
            "role_id": 2,
            "permission_id": 14
          },
          {
            "id": 51,
            "role_id": 2,
            "permission_id": 16
          },
          {
            "id": 52,
            "role_id": 2,
            "permission_id": 17
          },
          {
            "id": 53,
            "role_id": 2,
            "permission_id": 18
          },
          {
            "id": 54,
            "role_id": 2,
            "permission_id": 19
          },
          {
            "id": 55,
            "role_id": 2,
            "permission_id": 20
          },
          {
            "id": 56,
            "role_id": 2,
            "permission_id": 21
          },
          {
            "id": 57,
            "role_id": 2,
            "permission_id": 27
          },
          {
            "id": 58,
            "role_id": 2,
            "permission_id": 28
          },
          {
            "id": 59,
            "role_id": 2,
            "permission_id": 29
          },
          {
            "id": 60,
            "role_id": 2,
            "permission_id": 30
          },
          {
            "id": 61,
            "role_id": 2,
            "permission_id": 31
          },
          {
            "id": 62,
            "role_id": 2,
            "permission_id": 32
          },
          {
            "id": 63,
            "role_id": 2,
            "permission_id": 33
          },
          {
            "id": 64,
            "role_id": 2,
            "permission_id": 34
          },
          {
            "id": 65,
            "role_id": 2,
            "permission_id": 35
          },
          {
            "id": 66,
            "role_id": 2,
            "permission_id": 36
          },
          {
            "id": 67,
            "role_id": 2,
            "permission_id": 37
          },
          {
            "id": 68,
            "role_id": 2,
            "permission_id": 38
          },
          {
            "id": 69,
            "role_id": 2,
            "permission_id": 42
          },
          {
            "id": 70,
            "role_id": 3,
            "permission_id": 8
          },
          {
            "id": 71,
            "role_id": 3,
            "permission_id": 9
          },
          {
            "id": 72,
            "role_id": 3,
            "permission_id": 11
          },
          {
            "id": 73,
            "role_id": 3,
            "permission_id": 13
          },
          {
            "id": 74,
            "role_id": 3,
            "permission_id": 14
          },
          {
            "id": 75,
            "role_id": 3,
            "permission_id": 16
          },
          {
            "id": 76,
            "role_id": 3,
            "permission_id": 17
          },
          {
            "id": 77,
            "role_id": 3,
            "permission_id": 18
          },
          {
            "id": 78,
            "role_id": 3,
            "permission_id": 20
          },
          {
            "id": 79,
            "role_id": 3,
            "permission_id": 27
          },
          {
            "id": 80,
            "role_id": 3,
            "permission_id": 28
          },
          {
            "id": 81,
            "role_id": 3,
            "permission_id": 33
          },
          {
            "id": 82,
            "role_id": 3,
            "permission_id": 34
          },
          {
            "id": 83,
            "role_id": 3,
            "permission_id": 35
          },
          {
            "id": 84,
            "role_id": 3,
            "permission_id": 36
          },
          {
            "id": 85,
            "role_id": 3,
            "permission_id": 37
          },
          {
            "id": 86,
            "role_id": 3,
            "permission_id": 38
          },
          {
            "id": 87,
            "role_id": 3,
            "permission_id": 42
          }
        ],
        "permissions_apps": [],
        "settings": [
          {
            "id": 1,
            "uuid": "fcab6cff-1027-449b-aedf-60531259d4e6",
            "key": "databaseVersion",
            "value": "009",
            "type": "core",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:45",
            "updated_by": 1
          },
          {
            "id": 2,
            "uuid": "a6881c8b-286d-43a8-aaaa-bf3602ef91e3",
            "key": "dbHash",
            "value": "f739281e-f8b8-413c-a256-da399c41c613",
            "type": "core",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:45",
            "updated_by": 1
          },
          {
            "id": 3,
            "uuid": "a9d1cf66-b34f-4bfb-a7fc-01f6e77a632b",
            "key": "nextUpdateCheck",
            "value": "1485770422",
            "type": "core",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2017-01-29 10:00:22",
            "updated_by": 1
          },
          {
            "id": 4,
            "uuid": "1b7fc7c6-79f4-4ae8-a438-748f30ff8629",
            "key": "displayUpdateNotification",
            "value": "0.11.4",
            "type": "core",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2017-01-29 10:00:22",
            "updated_by": 1
          },
          {
            "id": 5,
            "uuid": "0336419f-26c3-4640-9b47-65aa65526725",
            "key": "seenNotifications",
            "value": "[]",
            "type": "core",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:45",
            "updated_by": 1
          },
          {
            "id": 6,
            "uuid": "5b9fd0d6-b1de-422f-86fa-48d54cd97132",
            "key": "migrations",
            "value": "{}",
            "type": "core",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-11-08 10:08:45",
            "updated_by": 1
          },
          {
            "id": 7,
            "uuid": "c4ce4d18-97ea-4ac7-b916-9dadc9a60661",
            "key": "title",
            "value": "The Odd Rocketship 🚀 💥",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 8,
            "uuid": "5d6bfa6c-14cf-41d9-abed-f1283f5fd5ea",
            "key": "description",
            "value": "@mathdroid's articles on security and Javascript. May or may not contain his personal life.",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 9,
            "uuid": "010840b5-89d8-4465-9b7f-a0f93d3e3be2",
            "key": "logo",
            "value": "/content/images/2016/09/m-u-s-ta-d-i----x-y-z--1-.png",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 10,
            "uuid": "66206188-24c9-4d72-81d3-de9a07488d60",
            "key": "cover",
            "value": "/content/images/2016/09/mustadi-xyz-opt.png",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 11,
            "uuid": "86c13d0e-00e2-4df9-aa30-17825215f476",
            "key": "defaultLang",
            "value": "en_US",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 12,
            "uuid": "c57393b5-067c-4469-8ad0-bad3d95539fe",
            "key": "postsPerPage",
            "value": "10",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 13,
            "uuid": "b838c3eb-9ca6-4718-9c9e-38f8908e26db",
            "key": "activeTimezone",
            "value": "Asia/Bangkok",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 14,
            "uuid": "a281776e-c10d-476f-80c3-bc9928309797",
            "key": "forceI18n",
            "value": "true",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 15,
            "uuid": "2a0eafa3-bb98-4222-ae58-f4b9dba04220",
            "key": "permalinks",
            "value": "/:year/:month/:day/:slug/",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 16,
            "uuid": "6480bd82-7c04-428a-82ff-1af0a23e8f37",
            "key": "ghost_head",
            "value": "<script>\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-60788487-1', 'auto');\n  ga('send', 'pageview');\n\n</script>",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 17,
            "uuid": "80c5476b-0434-40a0-a354-bcdbb1131254",
            "key": "ghost_foot",
            "value": "",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 18,
            "uuid": "ffd41d33-3a9a-4fa9-b23b-e951f669c3dc",
            "key": "facebook",
            "value": "mathdroid",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 19,
            "uuid": "95bd0ad4-111d-4423-8ba1-adc4b01fec63",
            "key": "twitter",
            "value": "@mathdroid",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 20,
            "uuid": "1eb90ba2-749d-435e-9b40-02f504a37baa",
            "key": "labs",
            "value": "{\"publicAPI\":true,\"internalTags\":true,\"subscribers\":true}",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 21,
            "uuid": "a1c55cb2-81f4-47f8-8678-a7eaaa407f04",
            "key": "navigation",
            "value": "[{\"label\":\"Home\",\"url\":\"/\"},{\"label\":\"GTHB\",\"url\":\"https://www.github.com/mathdroid/\"},{\"label\":\"TWTR\",\"url\":\"https://www.twitter.com/mathdroid\"},{\"label\":\"FB\",\"url\":\"https://fb.com/mathdroid\"},{\"label\":\"IG\",\"url\":\"https://instagram.com/idatsum\"},{\"label\":\"CV\",\"url\":\"https://standardresume.co/MuhammadMustadi\"}]",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 22,
            "uuid": "924d96e8-012e-4e91-911d-6d18d59b54e9",
            "key": "slack",
            "value": "[{\"url\":\"\"}]",
            "type": "blog",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 23,
            "uuid": "a34fb73d-3d50-4a02-a9e6-b9dedaba81de",
            "key": "activeApps",
            "value": "[]",
            "type": "app",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 24,
            "uuid": "0394c96c-b617-498b-879f-6780e3604f3f",
            "key": "installedApps",
            "value": "[]",
            "type": "app",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 25,
            "uuid": "00ccc156-e3fc-4834-abfe-348fbd4b751e",
            "key": "isPrivate",
            "value": "false",
            "type": "private",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 26,
            "uuid": "5f4e98d5-f473-4441-bb54-77286638980f",
            "key": "password",
            "value": "rudami717",
            "type": "private",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:47",
            "updated_by": 1
          },
          {
            "id": 27,
            "uuid": "c9cb822f-b925-41dd-b6bc-9c7879444cf8",
            "key": "activeTheme",
            "value": "casper",
            "type": "theme",
            "created_at": "2016-11-08 10:08:45",
            "created_by": 1,
            "updated_at": "2016-11-08 10:40:05",
            "updated_by": 1
          }
        ],
        "tags": [
          {
            "id": 2,
            "uuid": "f86f9659-26fa-42ab-ac2b-78405f76a4ba",
            "name": "Getting Started",
            "slug": "getting-started",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 3,
            "uuid": "a128eb71-7505-42ff-9d2c-a76813cfa217",
            "name": "Daily",
            "slug": "daily",
            "description": "",
            "image": "/content/images/2015/04/free-60-icons-59.png",
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 4,
            "uuid": "e2ff1d4d-335c-4cf7-b464-85fe169c5502",
            "name": "Blog",
            "slug": "blog",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 5,
            "uuid": "13c2f262-a399-4a80-a059-507ae548ca12",
            "name": "Technical",
            "slug": "technical",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 6,
            "uuid": "f255f0c8-3e68-45f8-a991-e7677987fb62",
            "name": "thought",
            "slug": "thought",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 7,
            "uuid": "bbeaa248-3827-43f5-a1da-63f93764beb3",
            "name": "Path",
            "slug": "path",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 8,
            "uuid": "162f513f-6a3d-4048-9897-9c2d0c221cb2",
            "name": "Modulair",
            "slug": "modulair",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 9,
            "uuid": "174481d3-d8f8-48f1-8177-10fa793f2c5a",
            "name": "Development",
            "slug": "development",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 10,
            "uuid": "111b8532-a6df-459f-8ff2-6afa9be2d890",
            "name": "Productivity",
            "slug": "productivity",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 11,
            "uuid": "0719361c-3071-4b3e-9de7-e225a436bf55",
            "name": "notes",
            "slug": "notes",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 12,
            "uuid": "8847670b-e961-487e-9fe9-c209278d58c7",
            "name": "college",
            "slug": "college",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 13,
            "uuid": "31ac7892-d323-44de-b93a-592cd61fff2b",
            "name": "arsikom",
            "slug": "arsikom",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 14,
            "uuid": "c5a5d33b-dcec-4682-8a7b-020002895b8f",
            "name": "music",
            "slug": "music",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 15,
            "uuid": "8201e79c-0f4a-4e9f-b599-2d4684106b28",
            "name": "personal",
            "slug": "personal",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 16,
            "uuid": "dc935f99-d0da-43e7-93ad-6992d462aa7b",
            "name": "security",
            "slug": "security",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 17,
            "uuid": "04d26cce-9763-4650-b95f-c2024326e309",
            "name": "hax",
            "slug": "hax",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 18,
            "uuid": "a3a02a4e-a766-43af-b200-c6c94e638dc4",
            "name": "Javascript",
            "slug": "javascript",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          },
          {
            "id": 19,
            "uuid": "878addb6-4403-49f2-9027-cc13114235e0",
            "name": "depression",
            "slug": "depression",
            "description": null,
            "image": null,
            "parent_id": null,
            "visibility": "public",
            "meta_title": null,
            "meta_description": null,
            "created_at": "2016-12-07 13:14:46",
            "created_by": 1,
            "updated_at": "2016-12-07 13:14:46",
            "updated_by": 1
          }
        ],
        "posts_tags": [
          {
            "id": 2,
            "post_id": 2,
            "tag_id": 3,
            "sort_order": 0
          },
          {
            "id": 3,
            "post_id": 3,
            "tag_id": 15,
            "sort_order": 0
          },
          {
            "id": 4,
            "post_id": 4,
            "tag_id": 6,
            "sort_order": 0
          },
          {
            "id": 5,
            "post_id": 5,
            "tag_id": 8,
            "sort_order": 0
          },
          {
            "id": 6,
            "post_id": 7,
            "tag_id": 4,
            "sort_order": 0
          },
          {
            "id": 7,
            "post_id": 8,
            "tag_id": 11,
            "sort_order": 0
          },
          {
            "id": 8,
            "post_id": 11,
            "tag_id": 15,
            "sort_order": 0
          },
          {
            "id": 9,
            "post_id": 14,
            "tag_id": 15,
            "sort_order": 0
          },
          {
            "id": 10,
            "post_id": 15,
            "tag_id": 9,
            "sort_order": 0
          },
          {
            "id": 11,
            "post_id": 16,
            "tag_id": 9,
            "sort_order": 0
          },
          {
            "id": 12,
            "post_id": 17,
            "tag_id": 9,
            "sort_order": 0
          },
          {
            "id": 13,
            "post_id": 20,
            "tag_id": 5,
            "sort_order": 0
          },
          {
            "id": 14,
            "post_id": 21,
            "tag_id": 14,
            "sort_order": 0
          },
          {
            "id": 15,
            "post_id": 22,
            "tag_id": 15,
            "sort_order": 0
          },
          {
            "id": 16,
            "post_id": 24,
            "tag_id": 15,
            "sort_order": 0
          },
          {
            "id": 17,
            "post_id": 27,
            "tag_id": 14,
            "sort_order": 0
          },
          {
            "id": 18,
            "post_id": 28,
            "tag_id": 14,
            "sort_order": 0
          },
          {
            "id": 19,
            "post_id": 29,
            "tag_id": 5,
            "sort_order": 0
          },
          {
            "id": 20,
            "post_id": 31,
            "tag_id": 15,
            "sort_order": 0
          },
          {
            "id": 21,
            "post_id": 33,
            "tag_id": 16,
            "sort_order": 0
          },
          {
            "id": 22,
            "post_id": 38,
            "tag_id": 15,
            "sort_order": 0
          },
          {
            "id": 23,
            "post_id": 39,
            "tag_id": 14,
            "sort_order": 0
          },
          {
            "id": 24,
            "post_id": 34,
            "tag_id": 9,
            "sort_order": 0
          },
          {
            "id": 25,
            "post_id": 2,
            "tag_id": 4,
            "sort_order": 1
          },
          {
            "id": 26,
            "post_id": 4,
            "tag_id": 7,
            "sort_order": 1
          },
          {
            "id": 27,
            "post_id": 5,
            "tag_id": 9,
            "sort_order": 1
          },
          {
            "id": 28,
            "post_id": 7,
            "tag_id": 10,
            "sort_order": 1
          },
          {
            "id": 29,
            "post_id": 8,
            "tag_id": 12,
            "sort_order": 1
          },
          {
            "id": 30,
            "post_id": 11,
            "tag_id": 19,
            "sort_order": 1
          },
          {
            "id": 31,
            "post_id": 20,
            "tag_id": 9,
            "sort_order": 1
          },
          {
            "id": 32,
            "post_id": 27,
            "tag_id": 15,
            "sort_order": 1
          },
          {
            "id": 33,
            "post_id": 29,
            "tag_id": 9,
            "sort_order": 1
          },
          {
            "id": 34,
            "post_id": 33,
            "tag_id": 17,
            "sort_order": 1
          },
          {
            "id": 35,
            "post_id": 38,
            "tag_id": 19,
            "sort_order": 1
          },
          {
            "id": 36,
            "post_id": 34,
            "tag_id": 18,
            "sort_order": 1
          },
          {
            "id": 37,
            "post_id": 2,
            "tag_id": 5,
            "sort_order": 2
          },
          {
            "id": 38,
            "post_id": 8,
            "tag_id": 13,
            "sort_order": 2
          },
          {
            "id": 39,
            "post_id": 20,
            "tag_id": 18,
            "sort_order": 2
          },
          {
            "id": 40,
            "post_id": 29,
            "tag_id": 18,
            "sort_order": 2
          }
        ],
        "apps": [],
        "app_settings": [],
        "app_fields": [],
        "subscribers": []
      }
    }
  ]
}
